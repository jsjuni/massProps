[{"path":"https://jsjuni.github.io/massProps/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 massProps authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"massProps","text":"massProps package extends rollupTree functions recursively calculate mass properties (optionally, uncertainties) arbitrary decomposition trees. Formulas implemented described technical paper published Society Allied Weight Engineers.(Zimmerman Nakai 2005)","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"data-structures","dir":"Articles","previous_headings":"Synopsis","what":"Data Structures","title":"massProps","text":"massProps operates two fundamental data structures: mass properties table tree. mass properties table entry every item tree structure items; edges tree convey parent-child relations among items. two data structures linked id column data frame, must character vector unique item identifiers, vertex names tree. sets identifiers must identical.","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"required-columns-for-mass-properties","dir":"Articles","previous_headings":"Synopsis > Data Structures > Mass Property Table","what":"Required Columns for Mass Properties","title":"massProps","text":"Mass Property Table must contain following columns. columns may exist remain unmodified. id unique identifier item (row) mass mass item (numeric) Cx xx-component center mass (numeric) Cy yy-component center mass (numeric) Cx zz-component center mass (numeric) Ixx moment inertia xx axis (numeric) Iyy moment inertia yy axis (numeric) Izz moment inertia zz axis (numeric) Ixy product inertia relative xx yy axes (numeric) Ixz product inertia relative xx zz axes (numeric) Iyz product inertia relative yy zz axes (numeric) POIconv either ‘+’ ‘-’, indicating sign convention products inertia1 Ipoint logical indicator item considered point mass (.e., inertia contribution negligible)2","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"required-columns-for-mass-properties-uncertainty","dir":"Articles","previous_headings":"Synopsis > Data Structures > Mass Property Table","what":"Required Columns for Mass Properties Uncertainty","title":"massProps","text":"following columns required uncertainty calculations: σ_mass mass uncertainty (numeric) σ_Cx xx-component center mass uncertainty (numeric) σ_Cy yy-component center mass uncertainty (numeric) σ_Cx zz-component center mass uncertainty (numeric) σ_Ixx moment inertia xx axis uncertainty (numeric) σ_Iyy moment inertia yy axis uncertainty (numeric) σ_Izz moment inertia zz axis uncertainty (numeric) σ_Ixy product inertia relative xx yy axes uncertainty (numeric) σ_Ixz product inertia relative xx zz axes uncertainty (numeric) σ_Iyz product inertia relative yy zz axes uncertainty (numeric) caller’s responsibility ensure values expressed appropriate compatible units.","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"tree","dir":"Articles","previous_headings":"Synopsis > Data Structures > Mass Property Table","what":"Tree","title":"massProps","text":"tree igraph::graph vertices named identifiers mass properties table. can arbitrary depth shape long satisfies certain well-formedness properties: connected acyclic (undirected graph), .e., tree directed, edge direction going child parent contains neither loops (self-edges) multiple edges contains single root vertex (.e., one whose degree zero)","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"invocation","dir":"Articles","previous_headings":"Synopsis","what":"Invocation","title":"massProps","text":"Suppose following mass properties table: Suppose also tree:  can compute mass properties non-leaf elements calling rollup_mass_props(): input may also contain uncertainty data. example Society Allied Weight Engineers:","code":"library(rollupTree) library(massProps) suppressPackageStartupMessages({library(igraph)}) test_table #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 2  A.2    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 3  A.3    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE test_tree #> IGRAPH d76039e DN-- 12 11 --  #> + attr: name (v/c) #> + edges from d76039e (vertex names): #>  [1] A.2->A.1 A.3->A.1 C.1->A.1 P.1->A.2 P.2->A.2 P.3->A.2 P.4->A.2 P.5->A.3 #>  [9] P.6->A.3 P.7->A.3 P.8->A.3 rollup_mass_props(test_tree, test_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE sawe_input #>         id  mass    Cx    Cy    Cz     Ixx     Iyy      Izz    Ixy      Ixz #> 1   Widget 57.83 121.2  0.04 -0.16 7258.90 8607.02 10453.40 834.44 -1198.38 #> 2 2nd Part 16.80  70.9 -0.95  0.46   65.07 1124.65  1078.82  76.01   202.83 #> 3 Combined    NA    NA    NA    NA      NA      NA       NA     NA       NA #>        Iyz σ_mass   σ_Cx   σ_Cy   σ_Cz    σ_Ixx    σ_Iyy    σ_Izz     σ_Ixy #> 1 -1066.58 1.2416 0.2764 0.2085 0.0669 386.9233 171.4792 414.5547 1440.5402 #> 2    13.62 1.7308 0.6234 0.5173 0.1405  12.4687 109.1324 108.5481   55.8879 #> 3       NA     NA     NA     NA     NA       NA       NA       NA        NA #>      σ_Ixz    σ_Iyz Ipoint POIconv #> 1 344.6237 124.6860  FALSE       + #> 2 212.1241  11.5408  FALSE       + #> 3       NA       NA  FALSE       + rollup_mass_props_and_unc(sawe_tree, sawe_input) #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 1   Widget 57.83 121.2000  0.0400000 -0.16000000 7258.900  8607.02 10453.40 #> 2 2nd Part 16.80  70.9000 -0.9500000  0.46000000   65.070  1124.65  1078.82 #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz  σ_mass    σ_Cx      σ_Cy       σ_Cz    σ_Ixx #> 1  834.440 -1198.380 -1066.580 1.24160 0.27640 0.2085000 0.06690000 386.9233 #> 2   76.010   202.830    13.620 1.73080 0.62340 0.5173000 0.14050000  12.4687 #> 3 1558.714 -1401.534 -1060.951 2.13008 0.95821 0.1999847 0.06178402 387.4017 #>       σ_Iyy     σ_Izz     σ_Ixy    σ_Ixz    σ_Iyz Ipoint POIconv #> 1  171.4792  414.5547 1440.5402 344.6237 124.6860  FALSE       + #> 2  109.1324  108.5481   55.8879 212.1241  11.5408  FALSE       + #> 3 2789.3133 2815.3260 1488.0948 418.6048 125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"objectives-and-strategy","dir":"Articles","previous_headings":"","what":"Objectives and Strategy","title":"massProps","text":"objective package provide trustworthy, well-documented, reference implementation computation mass properties (uncertainties) aggregate objects parts. Aggregation can recursive (e.g., indentured Bill Materials), must accommodate trees arbitrary depth shape. Strategies achieving objective include basing calculations published industry references, re-casting lengthy reference equations concise vector matrix forms reduce error surface source code exploit capabilities R, treats vectors matrices first-class objects, delegating orchestration rollupTree package, , among things, verifies input tree well-formed ensures proper ordering computations, ensuring asserted leaf mass properties uncertainties correspond physically-realizable objects, coding pure functional style, (.e., avoiding mutable variables, implying iteration Map() Reduce()), covering entire code base unit tests. author intentionally made effort micro-optimize performance. particular, author aware representing inertia uncertainty 3 ⨉ 3 matrices “inefficient” degree independently calculates values redundant symmetry. “Inefficient”, however, mean “slow”. See Performance Evaluation .","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"theory","dir":"Articles","previous_headings":"","what":"Theory","title":"massProps","text":"section, state reference equations (Zimmerman Nakai 2005) show, applicable, equations can rewritten concise form. form equations actually implemented displayed within box, e.g. F=ma\\boxed{F = ma}. reference uses word weight symbol ww equations. interpret weight mass. reference refers center mass xx, yy, zz components. Symbols moments (IXXI_{XX}) products (IXYI_{XY}) inertia conventional. Variables subscripts designate properties parts; without designate properties aggregates. letter σ\\sigma denotes uncertainty. σw\\sigma_w, example, mass uncertainty.","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass","dir":"Articles","previous_headings":"Theory > Mass Properties","what":"Mass","title":"massProps","text":"mass equation suitable . w=∑=1nwi \\boxed{ w = \\sum_{=1}^{n}w_i } corresponding R code following code snippets, variable vl list input mass property sets, variable v formal parameter anonymous function applied member vl, r resulting mass property set. line R functional programming idiom “set mass value result sum mass values inputs”.","code":"r$mass <- Reduce(`+`, Map(f = function(v) v$mass, vl))"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass","dir":"Articles","previous_headings":"Theory > Mass Properties","what":"Center of Mass","title":"massProps","text":"x‾=∑=1nwixi/∑=1nwiy‾=∑=1nwiyi/∑=1nwiz‾=∑=1nwizi/∑=1nwi \\begin{align} \\bar{x} & = \\sum_{=1}^{n}{w_i}{{x}_i} \\bigg/ \\sum_{=1}^{n}w_i\\\\ \\bar{y} & = \\sum_{=1}^{n}{w_i}{{y}_i} \\bigg/ \\sum_{=1}^{n}w_i\\\\ \\bar{z} & = \\sum_{=1}^{n}{w_i}{{z}_i} \\bigg/ \\sum_{=1}^{n}w_i\\\\ \\end{align} can express center mass 3-vector: 𝐜i=(xiyizi)T𝐜‾=(x‾y‾z‾)T \\boxed{ \\begin{align} \\boldsymbol{c}_i & = (x_i \\quad y_i \\quad z_i)^T \\\\ \\boldsymbol{\\bar{c}}& = (\\bar{x} \\quad \\bar{y} \\quad \\bar{z})^T \\end{align} } 𝐜‾=1w∑=1nwi𝐜i \\boxed{ \\boldsymbol{\\bar{c}} = \\frac{1}{w} \\sum_{=1}^{n}{w_i}{{\\boldsymbol{c}}_i} } corresponding R code ","code":"r$center_mass <- Reduce(`+`, Map(f = function(v) v$mass * v$center_mass, vl)) / r$mass"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia","dir":"Articles","previous_headings":"Theory > Mass Properties > Inertia Tensor","what":"Moments of Inertia","title":"massProps","text":"IXX=∑=1n[IXXi+wi(yi2+zi2)−wi(y‾2+z‾2)]=∑=1n{IXXi+wi[(yi−y‾)2+(zi−z‾)2]}IYY=∑=1n[IYYi+wi(xi2+zi2)−wi(x‾2+z‾2)]=∑=1n{IYYi+wi[(xi−x‾)2+(zi−z‾)2]}IZZ=∑=1n[IZZi+wi(xi2+yi2)−wi(x‾2+y‾2)]=∑=1n{IZZi+wi[(xi−x‾)2+(yi−y‾)2]} \\begin{align} I_{XX} & =    \\sum_{=1}^{n} \\left[ {I_{XX}}_i     + w_i \\left( {y}_i^2 + {z}_i^2 \\right)   - w_i \\left( \\bar{y}^2 + \\bar{z}^2 \\right)   \\right]  & =  \\sum_{=1}^{n} \\left\\{ {I_{XX}}_i   + w_i \\left[ \\left( {y}_i - \\bar{y} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2 \\right]   \\right\\}  \\\\ I_{YY} & =    \\sum_{=1}^{n} \\left[ {I_{YY}}_i     + w_i \\left( {x}_i^2 + {z}_i^2 \\right)   - w_i \\left( \\bar{x}^2 + \\bar{z}^2 \\right)   \\right]  & =  \\sum_{=1}^{n} \\left\\{ {I_{YY}}_i   + w_i \\left[ \\left( {x}_i - \\bar{x} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2 \\right]   \\right\\}  \\\\ I_{ZZ} & =    \\sum_{=1}^{n} \\left[ {I_{ZZ}}_i     + w_i \\left( {x}_i^2 + {y}_i^2 \\right)   - w_i \\left( \\bar{x}^2 + \\bar{y}^2 \\right)   \\right]  & =  \\sum_{=1}^{n} \\left\\{ {I_{ZZ}}_i   + w_i \\left[ \\left( {x}_i - \\bar{x} \\right)^2 + \\left( {y}_i - \\bar{y} \\right)^2 \\right]   \\right\\}  \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia","dir":"Articles","previous_headings":"Theory > Mass Properties > Inertia Tensor","what":"Products of Inertia","title":"massProps","text":"IXY=∑=1n[IXYi+wixiyi−wi(x‾y‾)]=∑=1n[IXYi+wi(xi−x‾)(yi−y‾)]IXZ=∑=1n[IXZi+wixizi−wi(x‾z‾)]=∑=1n[IXZi+wi(xi−x‾)(zi−z‾)]IYZ=∑=1n[IYZi+wiyizi−wi(y‾z‾)]=∑=1n[IYZi+wi(yi−y‾)(zi−z‾)] \\begin{align} I_{XY} & = \\sum_{=1}^{n} \\left[ {I_{XY}}_i + w_i {{x}_i}{{y}_i} -w_i (\\bar{x}\\bar{y})\\right] & = \\sum_{=1}^{n} \\left[ {I_{XY}}_i + w_i ({x}_i - \\bar{x})({y}_i - \\bar{y})\\right] \\\\ I_{XZ} & = \\sum_{=1}^{n} \\left[ {I_{XZ}}_i + w_i {{x}_i}{{z}_i} -w_i (\\bar{x}\\bar{z})\\right] & = \\sum_{=1}^{n} \\left[ {I_{XZ}}_i + w_i ({x}_i - \\bar{x})({z}_i - \\bar{z})\\right] \\\\ I_{YZ} & = \\sum_{=1}^{n} \\left[ {I_{YZ}}_i + w_i {{y}_i}{{z}_i} -w_i (\\bar{y}\\bar{z})\\right] & = \\sum_{=1}^{n} \\left[ {I_{YZ}}_i + w_i ({y}_i - \\bar{y})({z}_i - \\bar{z})\\right] \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"matrix-formulation","dir":"Articles","previous_headings":"Theory > Mass Properties > Inertia Tensor","what":"Matrix Formulation","title":"massProps","text":"Let II inertia tensor aggregate IiI_i part ii. equations products inertia clearly follow positive integral convention, =[IXX−IXY−IXZ−IXYIYY−IYZ−IXZ−IYZIZZ] = \\left[ \\begin{matrix}  I_{XX} & -I_{XY} & -I_{XZ} \\\\ -I_{XY} &  I_{YY} & -I_{YZ} \\\\ -I_{XZ} & -I_{YZ} &  I_{ZZ}  \\end{matrix} \\right] similarly IiI_i. Noting repeated appearance terms form (xi−x‾)({x}_i - \\bar{x}), form outer product 𝐝i=((xi−x‾)(yi−y‾)(zi−z‾))T𝐐i=𝐝i𝐝iT \\boxed{ \\begin{align} \\boldsymbol{d}_i & = (({x}_i - \\bar{x}) \\quad ({y}_i - \\bar{y}) \\quad ({z}_i - \\bar{z}))^T \\\\ \\boldsymbol{Q}_i & = \\boldsymbol{d}_i {\\boldsymbol{d}_i}^T \\end{align} }  𝐐i=[(xi−x‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(yi−y‾)(xi−x‾)(yi−y‾)2(yi−y‾)(zi−z‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)2] \\begin{align} \\boldsymbol{Q}_i & = \\begin{bmatrix} ({x}_i - \\bar{x})^2     & ({x}_i - \\bar{x})({y}_i - \\bar{y}) & ({x}_i - \\bar{x})({z}_i - \\bar{z}) \\\\ ({y}_i - \\bar{y})({x}_i - \\bar{x}) & ({y}_i - \\bar{y})^2     & ({y}_i - \\bar{y})({z}_i - \\bar{z}) \\\\ ({z}_i - \\bar{z})({x}_i - \\bar{x}) & ({z}_i - \\bar{z})({y}_i - \\bar{y}) & ({z}_i - \\bar{z})^2     \\\\ \\end{bmatrix} \\end{align} Let 𝐬i\\boldsymbol{s}_i matrix inertia tensor summands reference equations. , 𝐈=∑=1n𝐬i \\boldsymbol{} = \\sum_{=1}^{n} \\boldsymbol{s}_i 𝐬i=𝐈i−wi[−(yi−y‾)2−(zi−z‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(xi−x‾)(yi−y‾)−(xi−x‾)2−(zi−z‾)2(yi−y‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)−(xi−x‾)2−(yi−y‾)2]=𝐈i−wi[(xi−x‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(xi−x‾)(yi−y‾)(yi−y‾)2(yi−y‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)(zi−z‾)2]−wi[−(xi−x‾)2−(yi−y‾)2−(zi−z‾)2000−(xi−x‾)2−(yi−y‾)2−(zi−z‾)2000−(xi−x‾)2−(yi−y‾)2−(zi−z‾)2]=𝐈i−wi(𝐐i−tr(𝐐i)𝟏3) \\begin{align} \\boldsymbol{s}_i & = \\boldsymbol{}_i \\\\ & - w_i \\begin{bmatrix} -({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 & ({x}_i - \\bar{x})({y}_i - \\bar{y})         & ({x}_i - \\bar{x})({z}_i - \\bar{z})         \\\\ ({x}_i - \\bar{x})({y}_i - \\bar{y})         & -({x}_i - \\bar{x})^2 - ({z}_i - \\bar{z})^2 &  ({y}_i - \\bar{y})({z}_i - \\bar{z})        \\\\ ({x}_i - \\bar{x})({z}_i - \\bar{z})         & ({y}_i - \\bar{y})({z}_i - \\bar{z})         & -({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 \\\\ \\end{bmatrix} \\\\ & = \\boldsymbol{}_i \\\\ & - w_i \\begin{bmatrix} ({x}_i - \\bar{x})^2     & ({x}_i - \\bar{x})({y}_i - \\bar{y}) & ({x}_i - \\bar{x})({z}_i - \\bar{z}) \\\\ ({x}_i - \\bar{x})({y}_i - \\bar{y}) & ({y}_i - \\bar{y})^2     & ({y}_i - \\bar{y})({z}_i - \\bar{z}) \\\\ ({x}_i - \\bar{x})({z}_i - \\bar{z}) & ({y}_i - \\bar{y})({z}_i - \\bar{z}) & ({z}_i - \\bar{z})^2     \\\\ \\end{bmatrix} \\\\ & - w_i \\begin{bmatrix} -({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 & 0                               & 0                              \\\\ 0                               & -({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 & 0                              \\\\ 0                               & 0                               &-({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 \\\\ \\end{bmatrix} \\\\ & =  \\boldsymbol{}_i -  w_i \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i) \\boldsymbol{1}_3 \\right) \\end{align} 𝟏3\\boldsymbol{1}_3 3 ⨉ 3 identity matrix. Therefore 𝐈=∑=1n{𝐈i−wi(𝐐i−tr(𝐐i)𝟏3)} \\boxed{ \\boldsymbol{} = \\sum_{=1}^{n} \\left\\{ \\boldsymbol{}_i -  w_i \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i) \\boldsymbol{1}_3 \\right) \\right\\} } corresponding R code ","code":"r$inertia <- Reduce(`+`, Map(     f  = function(v) {       d <- r$center_mass - v$center_mass       d_ss2 <- outer(d, d) - sum(d^2) * diag(3)       if (v$point) -v$mass * d_ss2 else v$inertia - v$mass * d_ss2     },     vl   ))"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass-uncertainty","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties","what":"Mass Uncertainty","title":"massProps","text":"mass uncertainty equation suitable . σw=∑=1nσwi2 \\boxed{ \\sigma_w = \\sqrt{ \\sum_{=1}^n {{\\sigma_w}_i}^2 } } corresponding R code ","code":"r$sigma_mass = sqrt(Reduce(`+`, Map(f = function(v) v$sigma_mass^2, vl)))"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass-uncertainty","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties","what":"Center of Mass Uncertainty","title":"massProps","text":"σx=∑=1n{(wiσyi)2+[σwi(yi−y‾)]2}/∑=1nwiσy=∑=1n{(wiσyi)2+[σwi(yi−y‾)]2}/∑=1nwiσz=∑=1n{(wiσzi)2+[σwi(zi−z‾)]2}/∑=1nwi \\begin{align} \\sigma_x & =    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\sigma_y}}_i)^2 + [{\\sigma_w}_i ({y}_i - \\bar{y})]^2 \\right\\} }    \\bigg/ \\sum_{=1}^{n}w_i \\\\ \\sigma_y & =    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\sigma_y}}_i)^2 + [{\\sigma_w}_i ({y}_i - \\bar{y})]^2 \\right\\} }  \\bigg/ \\sum_{=1}^{n}w_i \\\\ \\sigma_z & =    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\sigma_z}}_i)^2 + [{\\sigma_w}_i ({z}_i - \\bar{z})]^2 \\right\\} }  \\bigg/ \\sum_{=1}^{n}w_i \\\\ \\end{align} , create 3-vector center mass uncertainties. Let 𝛔𝐜=(σxσyσz)T𝛔𝐜i=(σxiσyiσzi)T \\boxed{ \\begin{align} \\boldsymbol{\\sigma_c} & = (\\sigma_x \\quad \\sigma_y \\quad \\sigma_z)^T \\\\ {\\boldsymbol{\\sigma_c}}_i & = ({\\sigma_x}_i \\quad {\\sigma_y}_i \\quad {\\sigma_z}_i)^T \\end{align} } construe (R ) squaring taking square roots vectors element-wise, 𝛔𝐜=1w∑=1n{(wi𝛔𝐜i)2+[σwi(𝐜i−𝐜‾)]2} \\boxed{ \\boldsymbol{\\sigma_c} = \\frac{1}{w}    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\boldsymbol{\\sigma_c}}}_i)^2 + [{\\sigma_w}_i ({\\boldsymbol{c}}_i - \\bar{\\boldsymbol{c}})]^2 \\right\\}} } corresponding R code ","code":"r$sigma_center_mass = sqrt(Reduce(`+`, Map(     f = function(v) {       (v$mass * v$sigma_center_mass)^2 +         (v$sigma_mass * (v$center_mass - r$center_mass))^2     },     vl   ))) / r$mass"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia-uncertainties","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties > Inertia Tensor Uncertainty","what":"Moments of Inertia Uncertainties","title":"massProps","text":"σIXX=∑=1n{σIXXi2+[2wi(yi−y‾)σyi]2+[2wi(zi−z‾)σzi]2+[((yi−y‾)2+(zi−z‾)2)σwi]2}σIYY=∑=1n{σIYYi2+[2wi(xi−x‾)σxi]2+[2wi(zi−z‾)σzi]2+[((xi−x‾)2+(zi−z‾)2)σwi]2}σIZZ=∑=1n{σIZZi2+[2wi(xi−x‾)σxi]2+[2wi(yi−y‾)σyi]2+[((xi−x‾)2+(yi−y‾)2)σwi]2} \\begin{align} \\sigma_{I_{XX}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{XX}}_i}^2 + \\big[ 2 w_i ({y}_i - \\bar{y}) \\sigma_{{y}_i} \\big]^2 + \\big[ 2 w_i ({z}_i - \\bar{z}) \\sigma_{{z}_i} \\big]^2 + \\big[ \\big(({y}_i - \\bar{y})^2 + ({z}_i - \\bar{z})^2 \\big)\\sigma_{w_i}\\big]^2 \\big\\} }  \\\\ \\sigma_{I_{YY}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{YY}}_i}^2 + \\big[ 2 w_i ({x}_i - \\bar{x}) \\sigma_{{x}_i} \\big]^2 + \\big[ 2 w_i ({z}_i - \\bar{z}) \\sigma_{{z}_i} \\big]^2 + \\big[ \\big(({x}_i - \\bar{x})^2 + ({z}_i - \\bar{z})^2 \\big)\\sigma_{w_i}\\big]^2 \\big\\} }  \\\\ \\sigma_{I_{ZZ}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{ZZ}}_i}^2 + \\big[ 2 w_i ({x}_i - \\bar{x}) \\sigma_{{x}_i} \\big]^2 + \\big[ 2 w_i ({y}_i - \\bar{y}) \\sigma_{{y}_i} \\big]^2 + \\big[ \\big(({x}_i - \\bar{x})^2 + ({y}_i - \\bar{y})^2 \\big)\\sigma_{w_i}\\big]^2 \\big\\} }  \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia-uncertainties","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties > Inertia Tensor Uncertainty","what":"Products of Inertia Uncertainties","title":"massProps","text":"σIXY=∑=1n{σIXYi2+[(xi−x‾)wiσyi]2+[(xi−x‾)(yi−y‾)σwi]2+[(yi−y‾)wiσxi]2}σIXZ=∑=1n{σIXZi2+[(xi−x‾)wiσzi]2+[(xi−x‾)(zi−z‾)σwi]2+[(zi−z‾)wiσxi]2}σIYZ=∑=1n{σIYZi2+[(yi−y‾)wiσzi]2+[(yi−y‾)(zi−z‾)σwi]2+[(zi−z‾)wiσyi]2} \\begin{align} \\sigma_{I_{XY}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{XY}}_i}^2 + \\big[ ({x}_i - \\bar{x}) w_i \\sigma_{{y}_i}\\big]^2 + \\big[  ({x}_i - \\bar{x})({y}_i - \\bar{y})\\sigma_{w_i} \\big]^2 + \\big[ ({y}_i - \\bar{y})  w_i \\sigma_{{x}_i} \\big]^2 \\big\\} }  \\\\ \\sigma_{I_{XZ}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{XZ}}_i}^2 + \\big[ ({x}_i - \\bar{x}) w_i \\sigma_{{z}_i}\\big]^2 + \\big[  ({x}_i - \\bar{x})({z}_i - \\bar{z})\\sigma_{w_i} \\big]^2 + \\big[ ({z}_i - \\bar{z})  w_i \\sigma_{{x}_i} \\big]^2 \\big\\} }  \\\\ \\sigma_{I_{YZ}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{YZ}}_i}^2 + \\big[ ({y}_i - \\bar{y}) w_i \\sigma_{{z}_i}\\big]^2 + \\big[  ({y}_i - \\bar{y})({z}_i - \\bar{z})\\sigma_{w_i} \\big]^2 + \\big[ ({z}_i - \\bar{z})  w_i \\sigma_{{y}_i} \\big]^2 \\big\\} }  \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"matrix-formulation-1","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties > Inertia Tensor Uncertainty","what":"Matrix Formulation","title":"massProps","text":"Let 𝐝i=((xi−x‾)(yi−y‾)(zi−z‾))T𝛔𝐜i=(σxiσyiσzi)T𝐏i=𝐝i𝛔𝐜iT𝐐i=𝐝i𝐝iT \\boxed{ \\begin{align} \\boldsymbol{d}_i & = (({x}_i - \\bar{x}) \\quad ({y}_i - \\bar{y}) \\quad ({z}_i - \\bar{z}))^T \\\\ {\\boldsymbol{\\sigma_c}}_i & = ({\\sigma_x}_i \\quad {\\sigma_y}_i \\quad {\\sigma_z}_i)^T \\\\ \\boldsymbol{P}_i & = \\boldsymbol{d}_i {\\boldsymbol{\\sigma_c}}_i^T \\\\ \\boldsymbol{Q}_i & = \\boldsymbol{d}_i {\\boldsymbol{d}_i}^T \\end{align} } 𝐏i=[(xi−x‾)σxi(xi−x‾)σyi(xi−x‾)σzi(yi−y‾)σxi(yi−y‾)σyi(yi−y‾)σzi(zi−z‾)σxi(zi−z‾)σyi(zi−z‾)σzi]𝐐i=[(xi−x‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(yi−y‾)(xi−x‾)(yi−y‾)2(yi−y‾)(zi−z‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)2] \\begin{align} \\boldsymbol{P}_i & =  \\begin{bmatrix} (x_i - \\bar{x})\\sigma_{x_i} &({x}_i - \\bar{x})\\sigma_{y_i} &({x}_i - \\bar{x})\\sigma_{z_i} \\\\ ({y}_i - \\bar{y})\\sigma_{x_i} & ({y}_i - \\bar{y})\\sigma_{y_i} & ({y}_i - \\bar{y})\\sigma_{z_i} \\\\ ({z}_i - \\bar{z})\\sigma_{x_i} & ({z}_i - \\bar{z})\\sigma_{y_i} & ({z}_i - \\bar{z})\\sigma_{z_i} \\\\ \\end{bmatrix} \\\\ \\\\ \\boldsymbol{Q}_i & = \\begin{bmatrix} (x_i - \\bar{x})^2 &({x}_i - \\bar{x})({y}_i - \\bar{y}) &({x}_i - \\bar{x})({z}_i - \\bar{z}) \\\\ ({y}_i - \\bar{y})(x_i - \\bar{x}) & ({y}_i - \\bar{y})^2 & ({y}_i - \\bar{y})({z}_i - \\bar{z}) \\\\ ({z}_i - \\bar{z})(x_i - \\bar{x}) & ({z}_i - \\bar{z})({y}_i - \\bar{y}) & ({z}_i - \\bar{z})^2 \\\\ \\end{bmatrix} \\end{align} Let 𝐬i2\\boldsymbol{s}_i^2 matrix inertia tensor uncertainty summands standard formulas given subcomponent ii . , 𝛔𝐈2=∑=1𝐬i2 \\boldsymbol{\\sigma_I}^2 = \\sum_{=1}^{} \\boldsymbol{s}_i^2 Let pXi{p_X}_i, pYi{p_Y}_i, pZi{p_Z}_i respective diagonal elements PiP_i. Let 𝟏3\\boldsymbol{1}_3 3 ⨉ 3 identity matrix. interpret squaring matrix Hadamard (element-wise) product , 𝐬i2=𝛔𝐈i2+[2wi(yi−y‾)σyiwi(xi−x‾)σyiwi(xi−x‾)σziwi(xi−x‾)σyi2wi(xi−x‾)σxiwi(yi−y‾)σziwi(xi−x‾)σziwi(yi−y‾)σzi2wi(xi−x‾)σxi]2+[2wi(zi−z‾)σziwi(yi−y‾)σxiwi(zi−z‾)σxiwi(yi−y‾)σxi2wi(zi−z‾)σziwi(zi−z‾)σyiwi(zi−z‾)σxiwi(zi−z‾)σyi2wi(yi−y‾)σyi]2+[((yi−y‾)2+(zi−z‾)2)σwi(xi−x‾)(yi−y‾)σwi(xi−x‾)(zi−z‾)σwi(yi−y‾)(xi−x‾)σwi((xi−x‾)2+(zi−z‾)2)σwi(yi−y‾)(zi−z‾)σwi(zi−z‾)(xi−x‾)σwi(zi−z‾)(yi−y‾)σwi((xi−x‾)2+(yi−y‾)2)σwi]2=𝛔𝐈i2+wi2(𝐏i−[(xi−x‾)σxi−2(yi−y‾)σyi000(yi−y‾)σyi−2(xi−x‾)σxi000(zi−z‾)σyi−2(xi−x‾)σxi])2+wi2(𝐏iT−[(xi−x‾)σxi−2(zi−z‾)σyi000(yi−y‾)σyi−2(zi−z‾)σzi000(zi−z‾)σyi−2(yi−y‾)σyi])2+σwi2(𝐐i−tr(𝐐i)𝟏3)2=𝛔𝐈i2+wi2(𝐏i−[pXi−2pYi000pYi−2pXi000pZi−2pXi])2+wi2(𝐏iT−[pXi−2pZi000pYi−2pZi000pZi−2pYi])2+σwi2(𝐐i−tr(𝐐i)𝟏3)2 \\begin{align} \\boldsymbol{s}_i^2 & = {\\boldsymbol{\\sigma_I}}_i^2 \\\\ & +  \\begin{bmatrix} 2 w_i ({y}_i - \\bar{y}) \\sigma_{y_i} &   w_i({x}_i - \\bar{x}) \\sigma_{y_i} &   w_i({x}_i - \\bar{x}) \\sigma_{z_i} \\\\   w_i({x}_i - \\bar{x}) \\sigma_{y_i} & 2 w_i({x}_i - \\bar{x}) \\sigma_{x_i} &   w_i ({y}_i - \\bar{y}) \\sigma_{z_i} \\\\   w_i({x}_i - \\bar{x}) \\sigma_{z_i} &   w_i ({y}_i - \\bar{y}) \\sigma_{z_i} & 2 w_i({x}_i - \\bar{x}) \\sigma_{x_i} \\end{bmatrix}^2 \\\\ & + \\begin{bmatrix} 2 w_i ({z}_i - \\bar{z}) \\sigma_{z_i} &   w_i ({y}_i - \\bar{y}) \\sigma_{x_i} &   w_i ({z}_i - \\bar{z}) \\sigma_{x_i} \\\\   w_i ({y}_i - \\bar{y}) \\sigma_{x_i} & 2 w_i ({z}_i - \\bar{z}) \\sigma_{z_i} &   w_i ({z}_i - \\bar{z}) \\sigma_{y_i} \\\\   w_i ({z}_i - \\bar{z}) \\sigma_{x_i} &   w_i ({z}_i - \\bar{z}) \\sigma_{y_i} & 2 w_i ({y}_i - \\bar{y}) \\sigma_{y_i} \\end{bmatrix}^2 \\\\ & + \\begin{bmatrix} (({y}_i - \\bar{y})^2 + ({z}_i - \\bar{z})^2)\\sigma_{w_i} &({x}_i - \\bar{x})({y}_i - \\bar{y})\\sigma_{w_i} &({x}_i - \\bar{x})({z}_i - \\bar{z})\\sigma_{w_i} \\\\ ({y}_i - \\bar{y})(x_i - \\bar{x})\\sigma_{w_i} & ((x_i - \\bar{x})^2 + ({z}_i - \\bar{z})^2)\\sigma_{w_i} & ({y}_i - \\bar{y})({z}_i - \\bar{z})\\sigma_{w_i} \\\\ ({z}_i - \\bar{z})(x_i - \\bar{x})\\sigma_{w_i} & ({z}_i - \\bar{z})({y}_i - \\bar{y})\\sigma_{w_i} & ((x_i - \\bar{x})^2 + ({y}_i - \\bar{y})^2)\\sigma_{w_i} \\\\ \\end{bmatrix}^2 \\\\ \\\\ & = {\\boldsymbol{\\sigma_I}}_i^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i - \\begin{bmatrix} (x_i - \\bar{x})\\sigma_{x_i} - 2 ({y}_i - \\bar{y})\\sigma_{y_i} & 0 & 0 \\\\ 0 & ({y}_i - \\bar{y})\\sigma_{y_i} - 2({x}_i - \\bar{x})\\sigma_{x_i} & 0 \\\\ 0 & 0 & ({z}_i - \\bar{z})\\sigma_{y_i} - 2({x}_i - \\bar{x})\\sigma_{x_i} \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i^T - \\begin{bmatrix} (x_i - \\bar{x})\\sigma_{x_i} - 2 ({z}_i - \\bar{z})\\sigma_{y_i} & 0 & 0 \\\\ 0 & ({y}_i - \\bar{y})\\sigma_{y_i} - 2 ({z}_i - \\bar{z})\\sigma_{z_i} & 0 \\\\ 0 & 0 & ({z}_i - \\bar{z})\\sigma_{y_i} - 2 ({y}_i - \\bar{y})\\sigma_{y_i} \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + \\sigma_{w_i}^2 \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i)\\boldsymbol{1}_3 \\right)^2 \\\\ \\\\ & = {\\boldsymbol{\\sigma_I}}_i^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i - \\begin{bmatrix}  {p_X}_i - 2 {p_Y}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2 {p_X}_i & 0 \\\\ 0 & 0 & {p_Z}_i - 2  {p_X}_i \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i^T - \\begin{bmatrix}  {p_X}_i - 2{p_Z}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2 {p_Z}_i & 0 \\\\ 0 & 0 & {p_Z}_i - 2 {p_Y}_i \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + \\sigma_{w_i}^2 \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i)\\boldsymbol{1}_3 \\right)^2 \\end{align} Finally, 𝛔𝐈=(∑=1n{𝛔𝐈i2+wi2(𝐏i−[pXi−2pYi000pYi−2pXi000pZi−2pXi])2+wi2(𝐏iT−[pXi−2pZi000pYi−2pZi000pZi−2pYi])2+σwi2(𝐐i−tr(𝐐i)𝟏3)2})12 \\boxed{ \\boldsymbol{\\sigma_I} = \\left( \\sum_{=1}^{n} {\\left\\{ \\begin{align} {\\boldsymbol{\\sigma_I}}_i^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i - \\begin{bmatrix} {p_X}_i - 2 {p_Y}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2 {p_X}_i & 0 \\\\ 0 & 0 & {p_Z}_i - 2  {p_X}_i \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i^T - \\begin{bmatrix}  {p_X}_i - 2{p_Z}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2 {p_Z}_i & 0 \\\\ 0 & 0 & {p_Z}_i - 2 {p_Y}_i \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + \\sigma_{w_i}^2 \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i)\\boldsymbol{1}_3 \\right)^2 \\end{align} \\right\\}} \\right)^\\frac{1}{2} } corresponding R code ","code":"r$sigma_inertia = sqrt(Reduce(`+`, Map(     f = function(v) {        d <- r$center_mass - v$center_mass        P <- outer(d, v$sigma_center_mass)       p <- as.list(diag(P))       diag_1 <- diag(c(p$x - 2 * p$y, p$y - 2 * p$x, p$z - 2 * p$x))       diag_2 <- diag(c(p$x - 2 * p$z, p$y - 2 * p$z, p$z - 2 * p$y))        Q <- outer(d, d)       diag_3 <- sum(diag(Q)) * diag(3)        v$sigma_inertia^2 +         v$mass^2 * ((P - diag_1)^2 + (t(P) - diag_2)^2) +         (v$sigma_mass * (Q - diag_3))^2     },     vl   )))"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"comparison-with-independently-calculated-results","dir":"Articles","previous_headings":"Testing and Validation","what":"Comparison With Independently-Calculated Results","title":"massProps","text":"section calculate results SAWE example step step compare package results. inputs : computed result ","code":"#>         id  mass    Cx    Cy    Cz     Ixx     Iyy      Izz    Ixy      Ixz #> 1   Widget 57.83 121.2  0.04 -0.16 7258.90 8607.02 10453.40 834.44 -1198.38 #> 2 2nd Part 16.80  70.9 -0.95  0.46   65.07 1124.65  1078.82  76.01   202.83 #>        Iyz σ_mass   σ_Cx   σ_Cy   σ_Cz    σ_Ixx    σ_Iyy    σ_Izz     σ_Ixy #> 1 -1066.58 1.2416 0.2764 0.2085 0.0669 386.9233 171.4792 414.5547 1440.5402 #> 2    13.62 1.7308 0.6234 0.5173 0.1405  12.4687 109.1324 108.5481   55.8879 #>      σ_Ixz    σ_Iyz Ipoint POIconv #> 1 344.6237 124.6860  FALSE       + #> 2 212.1241  11.5408  FALSE       + sawe_result <- rollup_mass_props_and_unc(sawe_tree, sawe_table)[3, ] sawe_result #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz  σ_mass    σ_Cx      σ_Cy       σ_Cz    σ_Ixx #> 3 1558.714 -1401.534 -1060.951 2.13008 0.95821 0.1999847 0.06178402 387.4017 #>      σ_Iyy    σ_Izz    σ_Ixy    σ_Ixz    σ_Iyz Ipoint POIconv #> 3 2789.313 2815.326 1488.095 418.6048 125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Mass","title":"massProps","text":"independently-calculated mass agrees computed result.","code":"mass <- sum(sawe_input$mass) #> [1] 74.63"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Center of Mass","title":"massProps","text":"independently-calculated center mass agrees computed result.","code":"C <- apply(sawe_input$mass / mass * sawe_input[, c(\"Cx\", \"Cy\", \"Cz\")], 2, sum) #>           Cx           Cy           Cz  #> 109.87693957  -0.18285944  -0.02043146"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Moments of Inertia","title":"massProps","text":"independently-calculated moments inertia agrees computed result.","code":"moi <- function(I, v1, v2, m, c1, c2) {   I + m * ((v1^2 + v2^2) - (c1^2 + c2^2)) } MOI <- c(   Ixx = sum(moi(sawe_input$Ixx, sawe_input$Cy, sawe_input$Cz, sawe_input$mass, C[\"Cy\"], C[\"Cz\"])),   Iyy = sum(moi(sawe_input$Iyy, sawe_input$Cx, sawe_input$Cz, sawe_input$mass, C[\"Cx\"], C[\"Cz\"])),   Izz = sum(moi(sawe_input$Izz, sawe_input$Cx, sawe_input$Cy, sawe_input$mass, C[\"Cx\"], C[\"Cy\"])) ) #>       Ixx       Iyy       Izz  #>  7341.733 42673.747 44482.052"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Products of Inertia","title":"massProps","text":"independently-calculated products inertia agrees computed result.","code":"poi <- function(I, v1, v2, m, c1, c2) {   I + m * (v1 * v2 - c1 * c2) } POI <- c(   Ixy = sum(poi(sawe_input$Ixy, sawe_input$Cx, sawe_input$Cy, sawe_input$mass, C[\"Cx\"], C[\"Cy\"])),   Ixz = sum(poi(sawe_input$Ixz, sawe_input$Cx, sawe_input$Cz, sawe_input$mass, C[\"Cx\"], C[\"Cz\"])),   Iyz = sum(poi(sawe_input$Iyz, sawe_input$Cy, sawe_input$Cz, sawe_input$mass, C[\"Cy\"], C[\"Cz\"])) ) #>       Ixy       Ixz       Iyz  #>  1558.714 -1401.534 -1060.951"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass-uncertainty-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Mass Uncertainty","title":"massProps","text":"independently-calculated mass uncertainty agrees computed result.","code":"sigma_mass <- sqrt(sum(sawe_input$σ_mass^2)) #> [1] 2.13008"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass-uncertainty-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Center of Mass Uncertainty","title":"massProps","text":"independently-calculated center mass uncertainties agrees computed result.","code":"sigma_cm <- function(m, sigma_v, sigma_m, v, c) {   (m * sigma_v)^2 + (sigma_m * (v - c))^2 } sigma_C <- c(   sigma_Cx = sqrt(sum(sigma_cm(sawe_input$mass, sawe_input$σ_Cx, sawe_input$σ_mass, sawe_input$Cx, C[\"Cx\"]))) / mass,   sigma_Cy = sqrt(sum(sigma_cm(sawe_input$mass, sawe_input$σ_Cy, sawe_input$σ_mass, sawe_input$Cy, C[\"Cy\"]))) / mass,   sigma_Cz = sqrt(sum(sigma_cm(sawe_input$mass, sawe_input$σ_Cz, sawe_input$σ_mass, sawe_input$Cz, C[\"Cz\"]))) / mass ) #>   sigma_Cx   sigma_Cy   sigma_Cz  #> 0.95821004 0.19998470 0.06178402"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia-uncertainty","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Moments of Inertia Uncertainty","title":"massProps","text":"independently-calculated moments inertia uncertainties agrees computed result.","code":"sigma_moi <- function(sigma_I, mass, sigma_mass, v1, v2, c1, c2, sigma_v1, sigma_v2) {   sigma_I^2 +     (2 * mass * (v1 - c1) * sigma_v1)^2 +     (2 * mass * (v2 - c2) * sigma_v2)^2 +     (((v1 - c1)^2 + (v2 - c2)^2) * sigma_mass)^2 } sigma_MOI <- c(   sigma_Ixx = sqrt(sum(sigma_moi(sawe_input$σ_Ixx, sawe_input$mass, sawe_input$σ_mass, sawe_input$Cy,                                   sawe_input$Cz, C[\"Cy\"], C[\"Cz\"], sawe_input$σ_Cy, sawe_input$σ_Cz))),   sigma_Iyy = sqrt(sum(sigma_moi(sawe_input$σ_Iyy, sawe_input$mass, sawe_input$σ_mass, sawe_input$Cx,                                   sawe_input$Cz, C[\"Cx\"], C[\"Cz\"], sawe_input$σ_Cx, sawe_input$σ_Cz))),   sigma_Izz = sqrt(sum(sigma_moi(sawe_input$σ_Izz, sawe_input$mass, sawe_input$σ_mass, sawe_input$Cx,                                   sawe_input$Cy, C[\"Cx\"], C[\"Cy\"], sawe_input$σ_Cx, sawe_input$σ_Cy))) ) #> sigma_Ixx sigma_Iyy sigma_Izz  #>  387.4017 2789.3133 2815.3260"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia-uncertainty","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Products of Inertia Uncertainty","title":"massProps","text":"independently-calculated products inertia uncertainties agrees computed result.","code":"sigma_poi <- function(sigma_I, mass, sigma_mass, v1, v2, c1, c2, sigma_v1, sigma_v2) {   sigma_I^2 +     ((v1 - c1) * mass * sigma_v2)^2 +     ((v1 - c1) * (v2 - c2) * sigma_mass)^2 +     ((v2 - c2) * mass * sigma_v1)^2 } sigma_POI <- c(   sigma_Ixy = sqrt(sum(sigma_poi(sawe_input$σ_Ixy, sawe_input$mass, sawe_input$σ_mass, sawe_input$Cx,                                   sawe_input$Cy, C[\"Cx\"], C[\"Cy\"], sawe_input$σ_Cx, sawe_input$σ_Cy))),   sigma_Ixz = sqrt(sum(sigma_poi(sawe_input$σ_Ixz, sawe_input$mass, sawe_input$σ_mass, sawe_input$Cx,                                   sawe_input$Cz, C[\"Cx\"], C[\"Cz\"], sawe_input$σ_Cx, sawe_input$σ_Cz))),   sigma_Iyz = sqrt(sum(sigma_poi(sawe_input$σ_Iyz, sawe_input$mass, sawe_input$σ_mass, sawe_input$Cy,                                   sawe_input$Cz, C[\"Cy\"], C[\"Cz\"], sawe_input$σ_Cy, sawe_input$σ_Cz))) ) #> sigma_Ixy sigma_Ixz sigma_Iyz  #> 1488.0948  418.6048  125.3175"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"comparison-with-published-results","dir":"Articles","previous_headings":"Testing and Validation","what":"Comparison With Published Results","title":"massProps","text":"SAWE reference provides computed results example. results match within tolerance 0.2%. small differences likely actual input values identical truncated values published article.","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"performance-evaluation","dir":"Articles","previous_headings":"","what":"Performance Evaluation","title":"massProps","text":"mp_table mp_tree synthesized data set representing tree depth 7 1765 vertices 1764 edges. 1267 vertices leaves, remaining 498 non-leaves. Rolling mass properties uncertainties data set combines 35280 input values produce 9960 output values. Mass properties alone halves values. Benchmarks taken platform CPU characteristics: Benchmark results rollup mass properties uncertainties taken without input validation: Times reported seconds.","code":"Python Version: 3.12.7.final.0 (64 bit) Cpuinfo Version: 9.0.0 Vendor ID Raw:  Hardware Raw:  Brand Raw: Apple M3 Hz Advertised Friendly:  Hz Actual Friendly: 2.4000 GHz Hz Advertised:  Hz Actual: (2400000000, 0) Arch: ARM_8 Bits: 64 Count: 8 Arch String Raw: arm64 L1 Data Cache Size:  L1 Instruction Cache Size:  L2 Cache Size:  L2 Cache Line Size:  L2 Cache Associativity:  L3 Cache Size:  Stepping:  Model:  Family: 6 Processor Type:  Flags: acpi, aes, apic, clfsh, cmov, cx16, cx8, de, ds, dscpl, dtse64, est, fpu, fxsr, htt, mca, mce, mmx, mon, msr, mtrr, pae, pat, pbe, pclmulqdq, pdcm, pge, pse, pse36, seglim64, sep, ss, sse, sse2, sse3, sse4.1, sse4.2, ssse3, tm, tm2, tpr, tsc, vme, vmx benchmark('mp + unc no validation' = rollup_mass_props_and_unc_fast(mp_tree, mp_table),           'mp + unc    validation' = rollup_mass_props_and_unc(mp_tree, mp_table),           'mp       no validation' = rollup_mass_props_fast(mp_tree, mp_table),           'mp          validation' = rollup_mass_props(mp_tree, mp_table),           replications = 1,           columns = c(\"test\", \"replications\", \"elapsed\", \"user.self\", \"sys.self\") ) test replications elapsed user.self sys.self 4 mp          validation            1   0.954     0.936    0.019 3 mp       no validation            1   0.724     0.710    0.014 2 mp + unc    validation            1   1.621     1.596    0.025 1 mp + unc no validation            1   1.121     1.098    0.023"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Steven Jenkins. Author, maintainer, copyright holder.","code":""},{"path":"https://jsjuni.github.io/massProps/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jenkins JS (2025). massProps: Computing Mass Properties Aggregates. R package version 0.1.0, https://github.com/jsjuni/massProps, https://jsjuni.github.io/massProps/.","code":"@Manual{,   title = {massProps: Computing Mass Properties of Aggregates},   author = {James Steven Jenkins},   year = {2025},   note = {R package version 0.1.0, https://github.com/jsjuni/massProps},   url = {https://jsjuni.github.io/massProps/}, }"},{"path":"https://jsjuni.github.io/massProps/index.html","id":"massprops","dir":"","previous_headings":"","what":"Computing Mass Properties of Aggregates","title":"Computing Mass Properties of Aggregates","text":"massProps package extends rollupTree functions recursively calculate mass properties (optionally, uncertainties) arbitrary composition trees. Formulas implemented described technical paper published Society Allied Weight Engineers.(Zimmerman Nakai 2005)","code":""},{"path":"https://jsjuni.github.io/massProps/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Computing Mass Properties of Aggregates","text":"can install development version massProps GitHub :","code":"install.packages(\"massProps\") # install.packages(\"pak\") pak::pak(\"jsjuni/massProps\")"},{"path":"https://jsjuni.github.io/massProps/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Computing Mass Properties of Aggregates","text":"Suppose following mass properties table: graph edges representing child-parent relations:  can roll mass properties non-leaf elements follows:","code":"library(massProps) test_table #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 2  A.2    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 3  A.3    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE library(igraph) E(test_tree) #> + 11/11 edges from d76039e (vertex names): #>  [1] A.2->A.1 A.3->A.1 C.1->A.1 P.1->A.2 P.2->A.2 P.3->A.2 P.4->A.2 P.5->A.3 #>  [9] P.6->A.3 P.7->A.3 P.8->A.3 rollup_mass_props(test_tree, test_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine mass properties — combine_mass_props","title":"Combine mass properties — combine_mass_props","text":"Combine mass properties","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine mass properties — combine_mass_props","text":"","code":"combine_mass_props(vl)"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine mass properties — combine_mass_props","text":"vl List mass properties lists","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine mass properties — combine_mass_props","text":"Combined mass properties list","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine mass properties — combine_mass_props","text":"","code":"leaves <- test_table[which(!is.na(test_table$mass)), \"id\"] vl <- Map(f = function(id) get_mass_props(test_table, id), leaves) combine_mass_props(vl) #> $mass #> [1] 21 #>  #> $center_mass #> x y z  #> 0 0 0  #>  #> $inertia #>       x     y     z #> x 144.0  -4.8 -24.8 #> y  -4.8 144.0 -23.2 #> z -24.8 -23.2 139.0 #>  #> $point #> [1] FALSE #>"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine mass properties and uncertainties — combine_mass_props_and_unc","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"Combine mass properties uncertainties","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"","code":"combine_mass_props_and_unc(vl)"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"vl List mass properties uncertainties lists","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"Combined mass properties uncertainties","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"","code":"vl <- Map(f = function(id) get_mass_props_and_unc(sawe_table, id), list(\"Widget\", \"2nd Part\")) combine_mass_props_and_unc(vl) #> $mass #> [1] 74.63 #>  #> $center_mass #>            x            y            z  #> 109.87693957  -0.18285944  -0.02043146  #>  #> $inertia #>           x         y         z #> x  7341.733 -1558.714  1401.534 #> y -1558.714 42673.747  1060.951 #> z  1401.534  1060.951 44482.052 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 2.13008 #>  #> $sigma_center_mass #>          x          y          z  #> 0.95821004 0.19998470 0.06178402  #>  #> $sigma_inertia #>           x         y         z #> x  387.4017 1488.0948  418.6048 #> y 1488.0948 2789.3133  125.3175 #> z  418.6048  125.3175 2815.3260 #>"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mass properties for a row in a data frame — get_mass_props","title":"Get mass properties for a row in a data frame — get_mass_props","text":"get_mass_props() gets mass properties specified row data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mass properties for a row in a data frame — get_mass_props","text":"","code":"get_mass_props(df, id)"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mass properties for a row in a data frame — get_mass_props","text":"df data frame id ID value desired row","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mass properties for a row in a data frame — get_mass_props","text":"list following named elements: mass mass (numeric) center_mass center mass (3-dimensional numeric) inertia Inertia tensor (3x3 numeric matrix) point Logical indicating point mass, .e., negligible inertia","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mass properties for a row in a data frame — get_mass_props","text":"","code":"get_mass_props(mp_table, \"C.1.2.2.3.1.2.3\") #> $mass #> [1] 0.1213345 #>  #> $center_mass #>        x        y        z  #> 70.54848 81.54389 44.52262  #>  #> $inertia #>              x             y            z #> x  0.143256682 -0.0123144484 0.0012773920 #> y -0.012314448  0.1458692409 0.0003485651 #> z  0.001277392  0.0003485651 0.1309228273 #>  #> $point #> [1] FALSE #>"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"get_mass_props_and_unc() gets mass properties uncertainties specified row data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, σ_mass, σ_Cx, σ_Cy, σ_Cz, σ_Ixx, σ_Iyy, σ_Izz, σ_Ixy, σ_Ixz, σ_Iyz.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"","code":"get_mass_props_and_unc(df, id)"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"df data frame id ID value desired row","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"list following named elements: mass mass (numeric) center_mass center mass (3-dimensional numeric) inertia Inertia tensor (3x3 numeric matrix) point Logical indicating point mass, .e., negligible inertia sigma_mass mass uncertainty sigma_center_mass center mass uncertainty (3-dimensional numeric) sigma_inertia Inertia tensor uncertainty (3x3 numeric matrix)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"","code":"get_mass_props_and_unc(mp_table, \"C.1.2.2.3.1.2.3\") #> $mass #> [1] 0.1213345 #>  #> $center_mass #>        x        y        z  #> 70.54848 81.54389 44.52262  #>  #> $inertia #>              x             y            z #> x  0.143256682 -0.0123144484 0.0012773920 #> y -0.012314448  0.1458692409 0.0003485651 #> z  0.001277392  0.0003485651 0.1309228273 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 0.2892205 #>  #> $sigma_center_mass #>        x        y        z  #> 28.83321 29.16371 29.59459  #>  #> $sigma_inertia #>            x          y          z #> x 0.37222944 0.02191471 0.02146982 #> y 0.02191471 0.36942277 0.02242524 #> z 0.02146982 0.02242524 0.37416478 #>"},{"path":"https://jsjuni.github.io/massProps/reference/massprops-package.html","id":null,"dir":"Reference","previous_headings":"","what":"massProps: Computing Mass Properties of Aggregates — massProps-package","title":"massProps: Computing Mass Properties of Aggregates — massProps-package","text":"'massProps' package calculates mass properties uncertainties tree structures (e.g., assembly bill materials).","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/reference/massprops-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"massProps: Computing Mass Properties of Aggregates — massProps-package","text":"Maintainer: James Steven Jenkins sjenkins@studioj.us (ORCID) [copyright holder]","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Table — mp_table","title":"Example Mass Properties Table — mp_table","text":"Example Mass Properties Table","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Table — mp_table","text":"","code":"mp_table"},{"path":"https://jsjuni.github.io/massProps/reference/mp_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Table — mp_table","text":"data frame columns: id unique key name character name POIconv sign convention products inertia (one c(\"+\", \"-\")) mass mass Cx x component center mass Cy y component center mass Cz z component center mass Ixx Ixx moment inertia Iyy Iyy moment inertia Izz Izz moment inertia Ixy Ixy product inertia Ixz Ixz product inertia Iyz Iyz product inertia Ipoint logical indicator consider item point mass σ_mass mass uncertainty σ_Cx x component center mass uncertainty σ_Cy y component center mass uncertainty σ_Cz z component center mass uncertainty σ_Ixx Ixx moment inertia uncertainty σ_Iyy Iyy moment inertia uncertainty σ_Izz Izz moment inertia uncertainty σ_Ixy Ixy product inertia uncertainty σ_Ixz Ixz product inertia uncertainty σ_Iyz Iyz product inertia uncertainty","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Tree — mp_tree","title":"Example Mass Properties Tree — mp_tree","text":"Example Mass Properties Tree","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Tree — mp_tree","text":"","code":"mp_tree"},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Tree — mp_tree","text":"igraph tree edges child id parent id.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll Up Mass Properties — rollup_mass_props","title":"Roll Up Mass Properties — rollup_mass_props","text":"'rollup_mass_props()' rolls mass properties data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll Up Mass Properties — rollup_mass_props","text":"","code":"rollup_mass_props(tree, df, validate_df = validate_mass_props_table, ...)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll Up Mass Properties — rollup_mass_props","text":"tree igraph directed graph valid single-rooted -tree edges child vertex parent vertex. df mass properties table validate_df validator tree table, default validate_mass_props_table() ... parameters passed rollup()","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll Up Mass Properties — rollup_mass_props","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll Up Mass Properties — rollup_mass_props","text":"","code":"rollup_mass_props(test_tree, test_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll Up Mass Properties and Uncertainties — rollup_mass_props_and_unc","title":"Roll Up Mass Properties and Uncertainties — rollup_mass_props_and_unc","text":"'rollup_mass_props()' rolls mass properties data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, σ_mass, σ_Cx, σ_Cy, σ_Cz, σ_Ixx, σ_Iyy, σ_Izz, σ_Ixy, σ_Ixz, σ_Iyz.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll Up Mass Properties and Uncertainties — rollup_mass_props_and_unc","text":"","code":"rollup_mass_props_and_unc(   tree,   df,   validate_df = validate_mass_props_and_unc_table,   ... )"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll Up Mass Properties and Uncertainties — rollup_mass_props_and_unc","text":"tree igraph directed graph valid single-rooted -tree edges child vertex parent vertex. df mass properties uncertainties table validate_df validator tree table, default validate_mass_props_and_unc_table() ... parameters passed rollup()","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll Up Mass Properties and Uncertainties — rollup_mass_props_and_unc","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll Up Mass Properties and Uncertainties — rollup_mass_props_and_unc","text":"","code":"rollup_mass_props_and_unc(sawe_tree, sawe_table) #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 1   Widget 57.83 121.2000  0.0400000 -0.16000000 7258.900  8607.02 10453.40 #> 2 2nd Part 16.80  70.9000 -0.9500000  0.46000000   65.070  1124.65  1078.82 #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz  σ_mass    σ_Cx      σ_Cy       σ_Cz    σ_Ixx #> 1  834.440 -1198.380 -1066.580 1.24160 0.27640 0.2085000 0.06690000 386.9233 #> 2   76.010   202.830    13.620 1.73080 0.62340 0.5173000 0.14050000  12.4687 #> 3 1558.714 -1401.534 -1060.951 2.13008 0.95821 0.1999847 0.06178402 387.4017 #>       σ_Iyy     σ_Izz     σ_Ixy    σ_Ixz    σ_Iyz Ipoint POIconv #> 1  171.4792  414.5547 1440.5402 344.6237 124.6860  FALSE       + #> 2  109.1324  108.5481   55.8879 212.1241  11.5408  FALSE       + #> 3 2789.3133 2815.3260 1488.0948 418.6048 125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll Up Mass Properties And Uncertainties Without Input Validation — rollup_mass_props_and_unc_fast","title":"Roll Up Mass Properties And Uncertainties Without Input Validation — rollup_mass_props_and_unc_fast","text":"rollup_mass_props_and_unc_fast() performs operation rollup_mass_props_and_unc() omits input validation. roughly 30% faster  rollup_mass_propss_and_unc() used caution circumstances caller assumes responsibility validity input. behavior passed ill-formed input unspecified.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll Up Mass Properties And Uncertainties Without Input Validation — rollup_mass_props_and_unc_fast","text":"","code":"rollup_mass_props_and_unc_fast(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll Up Mass Properties And Uncertainties Without Input Validation — rollup_mass_props_and_unc_fast","text":"tree tree passed rollup() df mass properties uncertainties table passed rollup()","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll Up Mass Properties And Uncertainties Without Input Validation — rollup_mass_props_and_unc_fast","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll Up Mass Properties And Uncertainties Without Input Validation — rollup_mass_props_and_unc_fast","text":"","code":"rollup_mass_props_and_unc_fast(sawe_tree, sawe_table) #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 1   Widget 57.83 121.2000  0.0400000 -0.16000000 7258.900  8607.02 10453.40 #> 2 2nd Part 16.80  70.9000 -0.9500000  0.46000000   65.070  1124.65  1078.82 #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz  σ_mass    σ_Cx      σ_Cy       σ_Cz    σ_Ixx #> 1  834.440 -1198.380 -1066.580 1.24160 0.27640 0.2085000 0.06690000 386.9233 #> 2   76.010   202.830    13.620 1.73080 0.62340 0.5173000 0.14050000  12.4687 #> 3 1558.714 -1401.534 -1060.951 2.13008 0.95821 0.1999847 0.06178402 387.4017 #>       σ_Iyy     σ_Izz     σ_Ixy    σ_Ixz    σ_Iyz Ipoint POIconv #> 1  171.4792  414.5547 1440.5402 344.6237 124.6860  FALSE       + #> 2  109.1324  108.5481   55.8879 212.1241  11.5408  FALSE       + #> 3 2789.3133 2815.3260 1488.0948 418.6048 125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll Up Mass Properties Without Input Validation — rollup_mass_props_fast","title":"Roll Up Mass Properties Without Input Validation — rollup_mass_props_fast","text":"rollup_mass_props_fast() performs operation rollup_mass_props() omits input validation. roughly 30% faster  rollup_mass_props() used caution circumstances caller assumes responsibility validity input. behavior passed ill-formed input unspecified.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll Up Mass Properties Without Input Validation — rollup_mass_props_fast","text":"","code":"rollup_mass_props_fast(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll Up Mass Properties Without Input Validation — rollup_mass_props_fast","text":"tree tree passed rollup() df mass properties uncertainties table passed rollup()","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll Up Mass Properties Without Input Validation — rollup_mass_props_fast","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll Up Mass Properties Without Input Validation — rollup_mass_props_fast","text":"","code":"rollup_mass_props_fast(test_tree, test_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE"},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"Mass Properties Uncertainties Table SAWE Paper . 3360","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"","code":"sawe_table"},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"data frame columns: id unique key mass mass Cx x component center mass Cy y component center mass Cz z component center mass Ixx Ixx moment inertia Iyy Iyy moment inertia Izz Izz moment inertia Ixy Ixy product inertia Ixz Ixz product inertia Iyz Iyz product inertia σ_mass mass uncertainty σ_Cx x component center mass uncertainty σ_Cy y component center mass uncertainty σ_Cz z component center mass uncertainty σ_Ixx Ixx moment inertia uncertainty σ_Iyy Iyy moment inertia uncertainty σ_Izz Izz moment inertia uncertainty σ_Ixy Ixy product inertia uncertainty σ_Ixz Ixz product inertia uncertainty σ_Iyz Iyz product inertia uncertainty Ipoint logical indicator consider item point mass POIconv sign convention products inertia (one c(\"+\", \"-\"))","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"Zimmerman, Robert L., John H. Nakai. 2005. “Sure? Uncertainty Mass Properties Engineering.” 64th Annual International Conference Mass Properties Engineering, 123–60. Society Allied Weight Engineers. Note: results combined mass properties uncertainties published example accurate within approximately 0.2%.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"Mass Properties Uncertainties Tree SAWE Paper . 3360","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"","code":"sawe_tree"},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"igraph tree edges child id parent id.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"Zimmerman, Robert L., John H. Nakai. 2005. “Sure? Uncertainty Mass Properties Engineering.” 64th Annual International Conference Mass Properties Engineering, 123–60. Society Allied Weight Engineers.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Set mass properties for a row in a data frame — set_mass_props","title":"Set mass properties for a row in a data frame — set_mass_props","text":"set_mass_props() sets mass properties specified row data frame id column.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set mass properties for a row in a data frame — set_mass_props","text":"","code":"set_mass_props(df, id, v)"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set mass properties for a row in a data frame — set_mass_props","text":"df data frame id ID value desired row v #' list following named elements: mass mass (numeric) center_mass center mass (3-dimensional numeric) inertia Inertia tensor (3x3 numeric matrix) point Logical indicating point mass, .e., negligible inertia poi_conv Enumeration c(\"+\", \"-\") indicating sign convention products inertia","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set mass properties for a row in a data frame — set_mass_props","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set mass properties for a row in a data frame — set_mass_props","text":"","code":"df <- data.frame(id = c(\"C.1.2.2.3.1.2.3\", \"C.1.2.2.3.2.1.1\")) v <- get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\") v$poi_conv = \"+\" df <- set_mass_props(df, \"C.1.2.2.3.2.1.1\", v) get_mass_props(df, \"C.1.2.2.3.2.1.1\") #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"set_mass_props_and_unc() sets mass properties uncertainties specified row data frame id column.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"","code":"set_mass_props_and_unc(df, id, v)"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"df data frame id ID value desired row v #' list following named elements: mass mass (numeric) center_mass center mass (3-dimensional numeric) inertia Inertia tensor (3x3 numeric matrix) point Logical indicating point mass, .e., negligible inertia poi_conv Enumeration c(\"+\", \"-\") indicating sign convention products inertia sigma_mass mass uncertainty (numeric) sigma_center_mass center mass uncertainty (3-dimensional numeric) sigma_inertia Inertia tensor uncertainty (3x3 numeric matrix)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"","code":"df <- data.frame(id = c(\"C.1.2.2.3.1.2.3\", \"C.1.2.2.3.2.1.1\")) v <- get_mass_props_and_unc(mp_table, \"C.1.2.2.3.2.1.1\") v$poi_conv = \"+\" df <- set_mass_props_and_unc(df, \"C.1.2.2.3.2.1.1\", v) get_mass_props_and_unc(df, \"C.1.2.2.3.2.1.1\") #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 0.2892205 #>  #> $sigma_center_mass #>        x        y        z  #> 28.83321 29.16371 29.59459  #>  #> $sigma_inertia #>            x          y          z #> x 0.37222944 0.02191471 0.02146982 #> y 0.02191471 0.36942277 0.02242524 #> z 0.02146982 0.02242524 0.37416478 #>"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Set POI convention for mass properties object to match the target item — set_poi_conv_from_target","title":"Set POI convention for mass properties object to match the target item — set_poi_conv_from_target","text":"set_poi_conv_from_target() sets products inertia convention mass properties object target item mass properties table. affect values object, determines products inertia saved data frame. signature set_poi_conv_from_target() can passed override argument update_mass_props() update_mass_props_and_unc(), thus ensuring calculated POI values follow negative integral convention target item written.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set POI convention for mass properties object to match the target item — set_poi_conv_from_target","text":"","code":"set_poi_conv_from_target(df, target, v)"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set POI convention for mass properties object to match the target item — set_poi_conv_from_target","text":"df data frame column id target ID value target item v mass properties object","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set POI convention for mass properties object to match the target item — set_poi_conv_from_target","text":"mass properties object POI convention set target item","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set POI convention for mass properties object to match the target item — set_poi_conv_from_target","text":"","code":"set_poi_conv_from_target(mp_table, \"C.1.2.2.3.2.1\", get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\")) #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>  #> $poi_conv #> [1] \"-\" #>"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":null,"dir":"Reference","previous_headings":"","what":"Set POI convention for mass properties object to ","title":"Set POI convention for mass properties object to ","text":"set_poi_conv_minus() sets products inertia convention mass properties object \"+\". affect values object, determines products inertia saved data set. signature set_poi_conv_minus() can passed override argument update_mass_props() update_mass_props_and_unc(), thus ensuring calculated POI values follow negative integral convention.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set POI convention for mass properties object to ","text":"","code":"set_poi_conv_minus(ds, target, v)"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set POI convention for mass properties object to ","text":"ds Ignored target Ignored v mass properties object","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set POI convention for mass properties object to ","text":"mass properties object POI convention set \"-\"","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set POI convention for mass properties object to ","text":"","code":"set_poi_conv_minus(NULL, NULL, get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\")) #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>  #> $poi_conv #> [1] \"-\" #>"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Set POI convention for mass properties object to ","title":"Set POI convention for mass properties object to ","text":"set_poi_conv_plus() sets products inertia convention mass properties object \"+\". affect values object, determines products inertia saved data set. signature set_poi_conv_plus() can passed override argument update_mass_props() update_mass_props_and_unc(), thus ensuring calculated POI values follow positive integral convention.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set POI convention for mass properties object to ","text":"","code":"set_poi_conv_plus(ds, target, v)"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set POI convention for mass properties object to ","text":"ds Ignored target Ignored v mass properties object","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set POI convention for mass properties object to ","text":"mass properties object POI convention set \"+\"","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set POI convention for mass properties object to ","text":"","code":"set_poi_conv_plus(NULL, NULL, get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\")) #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>  #> $poi_conv #> [1] \"+\" #>"},{"path":"https://jsjuni.github.io/massProps/reference/test_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Table — test_table","title":"Example Mass Properties Table — test_table","text":"Example Mass Properties Table","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Table — test_table","text":"","code":"test_table"},{"path":"https://jsjuni.github.io/massProps/reference/test_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Table — test_table","text":"data frame columns: id unique key parent parent key mass mass Cx x component center mass Cy y component center mass Cz z component center mass Ixx Ixx moment inertia Iyy Iyy moment inertia Izz Izz moment inertia Ixy Ixy product inertia Ixz Ixz product inertia Iyz Iyz product inertia POIconv sign convention products inertia (one c(\"+\", \"-\")) Ipoint logical indicator consider item point mass","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Tree — test_tree","title":"Example Mass Properties Tree — test_tree","text":"Example Mass Properties Tree","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Tree — test_tree","text":"","code":"test_tree"},{"path":"https://jsjuni.github.io/massProps/reference/test_tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Tree — test_tree","text":"igraph tree edges child id parent id.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Update mass properties — update_mass_props","title":"Update mass properties — update_mass_props","text":"update_mass_props() updates mass properties specified target row specified source rows data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update mass properties — update_mass_props","text":"","code":"update_mass_props(df, target, sources, override = set_poi_conv_from_target)"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update mass properties — update_mass_props","text":"df data frame target ID target row sources IDs source rows override override function, called override(df, target, value)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update mass properties — update_mass_props","text":"updated data fram","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update mass properties — update_mass_props","text":"","code":"leaves <- test_table[which(!is.na(test_table$mass)), \"id\"] df <- update_mass_props(test_table, \"A.1\", leaves) get_mass_props(df, \"A.1\") #> $mass #> [1] 21 #>  #> $center_mass #> x y z  #> 0 0 0  #>  #> $inertia #>       x     y     z #> x 144.0  -4.8 -24.8 #> y  -4.8 144.0 -23.2 #> z -24.8 -23.2 139.0 #>  #> $point #> [1] FALSE #>"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Update mass properties and uncertainties — update_mass_props_and_unc","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"update_mass_props_and_unc() updates mass properties uncertainties specified target row specified source rows data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, σ_mass, σ_Cx, σ_Cy, σ_Cz, σ_Ixx, σ_Iyy, σ_Izz, σ_Ixy, σ_Ixz, σ_Iyz.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"","code":"update_mass_props_and_unc(   df,   target,   sources,   override = set_poi_conv_from_target )"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"df data frame target ID target row sources IDs source rows override override function, called override(df, target, value)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"","code":"leaves <- list(\"Widget\", \"2nd Part\") df <- update_mass_props_and_unc(sawe_table, \"Combined\", leaves) get_mass_props_and_unc(sawe_table, \"Combined\") #> $mass #> [1] 74.63 #>  #> $center_mass #>        x        y        z  #> 109.8657  -0.1829  -0.0204  #>  #> $inertia #>          x        y        z #> x  7341.73 -1559.36  1401.94 #> y -1559.36 42739.26  1060.95 #> z  1401.94  1060.95 44547.27 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 2.1301 #>  #> $sigma_center_mass #>      x      y      z  #> 0.9591 0.2000 0.0618  #>  #> $sigma_inertia #>           x         y         z #> x  387.4017 1488.1857  418.6320 #> y 1488.1857 2794.5468  125.3175 #> z  418.6320  125.3175 2820.5125 #>"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate mass properties — validate_mass_props","title":"Validate mass properties — validate_mass_props","text":"validate_mass_props() ensures mass properties object satisfies following constraints: mass non-missing positive center mass 3-vector non-missing numeric values point mass indicator TRUE FALSE every non-point mass: inertia tensor positive definite eigenvalues inertia tensor satisfy triangle inequalities: e1 < e2 + e3 e2 < e1 + e3 e3 < e1 + e2","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate mass properties — validate_mass_props","text":"","code":"validate_mass_props(mp)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate mass properties — validate_mass_props","text":"mp Mass properties object","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate mass properties — validate_mass_props","text":"TRUE valid, stops otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate mass properties — validate_mass_props","text":"","code":"mp <- get_mass_props(test_table, \"C.1\") validate_mass_props(mp) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate mass properties and uncertainties — validate_mass_props_and_unc","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"validate_mass_props_and_unc() performs checks validate_mass_props() ensures following true: mass uncertainty non-missing non-negative center mass uncertainty 3-vector non-missing non-negative values non-point masses, inertia tensor uncertainty 3x3 matrix non-missing non-negative values","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"","code":"validate_mass_props_and_unc(mp)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"mp Mass properties uncertainties object","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"TRUE valid, stops otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"","code":"mp <- get_mass_props_and_unc(sawe_table, \"Widget\") validate_mass_props_and_unc(mp) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"validate_mass_props_and_unc() calls validate_mass_props_table() ensures mass properties uncertainties every leaf element table valid.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"","code":"validate_mass_props_and_unc_table(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"tree igraph tree edges child parent df data frame validate","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"TRUE valid, stops error otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"","code":"validate_mass_props_and_unc_table(mp_tree, mp_table) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a mass properties table — validate_mass_props_table","title":"Validate a mass properties table — validate_mass_props_table","text":"validate_mass_props_table() ensures id column table vertices tree contain identifiers, mass properties every leaf element table valid.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a mass properties table — validate_mass_props_table","text":"","code":"validate_mass_props_table(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a mass properties table — validate_mass_props_table","text":"tree igraph tree edges child parent df data frame validate","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a mass properties table — validate_mass_props_table","text":"TRUE valid, stops error otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a mass properties table — validate_mass_props_table","text":"","code":"validate_mass_props_table(mp_tree, mp_table) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/news/index.html","id":"massprops-010","dir":"Changelog","previous_headings":"","what":"massProps 0.1.0","title":"massProps 0.1.0","text":"Initial CRAN submission.","code":""}]
