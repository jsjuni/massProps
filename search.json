[{"path":"https://jsjuni.github.io/massProps/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 massProps authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"massProps","text":"massProps package extends rollupTree functions recursively calculate mass properties (optionally, uncertainties) arbitrary decomposition trees. Formulas implemented described technical paper published Society Allied Weight Engineers.(Zimmerman Nakai 2005)","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"data-structures","dir":"Articles","previous_headings":"Synopsis","what":"Data Structures","title":"massProps","text":"massProps operates two fundamental data structures: mass properties table tree. mass properties table entry every item tree structure items; edges tree convey parent-child relations among items. two data structures linked id column data frame, must character vector unique item identifiers, vertex names tree. sets identifiers must identical.","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"required-columns-for-mass-properties","dir":"Articles","previous_headings":"Synopsis > Data Structures > Mass Property Table","what":"Required Columns for Mass Properties","title":"massProps","text":"Mass Property Table must contain following columns. columns may exist remain unmodified. id unique identifier item (row) mass mass item (numeric) Cx xx-component center mass (numeric) Cy yy-component center mass (numeric) Cx zz-component center mass (numeric) Ixx moment inertia xx axis (numeric) Iyy moment inertia yy axis (numeric) Izz moment inertia zz axis (numeric) Ixy product inertia relative xx yy axes (numeric) Ixz product inertia relative xx zz axes (numeric) Iyz product inertia relative yy zz axes (numeric) POIconv either ‘+’ ‘-’, indicating sign convention products inertia1 Ipoint logical indicator item considered point mass (.e., inertia contribution negligible)2","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"required-columns-for-mass-properties-uncertainties","dir":"Articles","previous_headings":"Synopsis > Data Structures > Mass Property Table","what":"Required Columns for Mass Properties Uncertainties","title":"massProps","text":"following columns required uncertainty calculations: sigma_mass mass uncertainty (numeric) sigma_Cx xx-component center mass uncertainty (numeric) sigma_Cy yy-component center mass uncertainty (numeric) sigma_Cx zz-component center mass uncertainty (numeric) sigma_Ixx moment inertia xx axis uncertainty (numeric) sigma_Iyy moment inertia yy axis uncertainty (numeric) sigma_Izz moment inertia zz axis uncertainty (numeric) sigma_Ixy product inertia relative xx yy axes uncertainty (numeric) sigma_Ixz product inertia relative xx zz axes uncertainty (numeric) sigma_Iyz product inertia relative yy zz axes uncertainty (numeric) caller’s responsibility ensure values expressed appropriate compatible units.","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"tree","dir":"Articles","previous_headings":"Synopsis > Data Structures > Mass Property Table","what":"Tree","title":"massProps","text":"tree igraph::graph vertices named identifiers mass properties table. can arbitrary depth shape long satisfies certain well-formedness properties: connected acyclic (undirected graph), .e., tree directed, edge direction going child parent contains neither loops (self-edges) multiple edges contains single root vertex (.e., one whose degree zero)","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"invocation","dir":"Articles","previous_headings":"Synopsis","what":"Invocation","title":"massProps","text":"Suppose following mass properties table: Suppose also tree:  can compute mass properties non-leaf elements calling rollup_mass_props(): input may also contain uncertainties data. example Society Allied Weight Engineers:","code":"library(rollupTree) library(massProps) suppressPackageStartupMessages({library(igraph)}) test_table #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 2  A.2    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 3  A.3    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE test_tree #> IGRAPH d76039e DN-- 12 11 --  #> + attr: name (v/c) #> + edges from d76039e (vertex names): #>  [1] A.2->A.1 A.3->A.1 C.1->A.1 P.1->A.2 P.2->A.2 P.3->A.2 P.4->A.2 P.5->A.3 #>  [9] P.6->A.3 P.7->A.3 P.8->A.3 rollup_mass_props(test_tree, test_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE sawe_input #>         id  mass    Cx    Cy    Cz     Ixx     Iyy      Izz    Ixy      Ixz #> 1   Widget 57.83 121.2  0.04 -0.16 7258.90 8607.02 10453.40 834.44 -1198.38 #> 2 2nd Part 16.80  70.9 -0.95  0.46   65.07 1124.65  1078.82  76.01   202.83 #> 3 Combined    NA    NA    NA    NA      NA      NA       NA     NA       NA #>        Iyz sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy sigma_Izz #> 1 -1066.58     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792  414.5547 #> 2    13.62     1.7308   0.6234   0.5173   0.1405   12.4687  109.1324  108.5481 #> 3       NA         NA       NA       NA       NA        NA        NA        NA #>   sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1 1440.5402  344.6237  124.6860  FALSE       + #> 2   55.8879  212.1241   11.5408  FALSE       + #> 3        NA        NA        NA  FALSE       + rollup_mass_props_and_unc(sawe_tree, sawe_input) #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 1   Widget 57.83 121.2000  0.0400000 -0.16000000 7258.900  8607.02 10453.40 #> 2 2nd Part 16.80  70.9000 -0.9500000  0.46000000   65.070  1124.65  1078.82 #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz sigma_mass sigma_Cx  sigma_Cy   sigma_Cz #> 1  834.440 -1198.380 -1066.580    1.24160  0.27640 0.2085000 0.06690000 #> 2   76.010   202.830    13.620    1.73080  0.62340 0.5173000 0.14050000 #> 3 1558.714 -1401.534 -1060.951    2.13008  0.95821 0.1999847 0.06178402 #>   sigma_Ixx sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  386.9233  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2   12.4687  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3  387.4017 2789.3133 2815.3260 1488.0948  418.6048  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"objectives-and-strategy","dir":"Articles","previous_headings":"","what":"Objectives and Strategy","title":"massProps","text":"objective package provide trustworthy, well-documented, reference implementation computation mass properties (uncertainties) aggregate objects parts. Aggregation can recursive (e.g., indentured Bill Materials), must accommodate trees arbitrary depth shape. Strategies achieving objective include basing calculations published industry references, re-casting lengthy reference equations concise vector matrix forms reduce error surface source code exploit capabilities R, treats vectors matrices first-class objects, delegating orchestration rollupTree package, , among things, verifies input tree well-formed ensures proper ordering computations, ensuring asserted leaf mass properties uncertainties correspond physically-realizable objects, coding pure functional style, (.e., avoiding mutable variables, implying iteration Map() Reduce()), covering entire code base unit tests. author intentionally made effort micro-optimize performance. particular, author aware representing inertia uncertainty 3 ⨉ 3 matrices “inefficient” degree independently calculates values redundant symmetry. “Inefficient”, however, mean “slow”. See Performance Evaluation .","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"theory","dir":"Articles","previous_headings":"","what":"Theory","title":"massProps","text":"section, state reference equations (Zimmerman Nakai 2005) show, applicable, equations can rewritten concise form. form equations actually implemented displayed within box, e.g. F=ma\\boxed{F = ma}. reference uses word weight symbol ww equations. interpret weight mass. reference refers center mass xx, yy, zz components. Symbols moments (IxxI_{xx}) products (IxyI_{xy}) inertia conventional. Variables ii subscripts designate properties parts; without designate properties aggregates. letter σ\\sigma denotes uncertainty. σw\\sigma_w, example, mass uncertainty.","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass","dir":"Articles","previous_headings":"Theory > Mass Properties","what":"Mass","title":"massProps","text":"mass equation suitable . w=∑=1nwi \\boxed{ w = \\sum_{=1}^{n}w_i } corresponding R code following code snippets, variable vl list input mass property sets, variable v formal parameter anonymous function applied member vl, r resulting mass property set. line R functional programming idiom “set mass value result sum mass values inputs”.","code":"amp$mass <- Reduce(`+`, Map(f = function(mp) mp$mass, mpl))"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass","dir":"Articles","previous_headings":"Theory > Mass Properties","what":"Center of Mass","title":"massProps","text":"x‾=∑=1nwixi/∑=1nwiy‾=∑=1nwiyi/∑=1nwiz‾=∑=1nwizi/∑=1nwi \\begin{align} \\bar{x} & = \\sum_{=1}^{n}{w_i}{{x}_i} \\bigg/ \\sum_{=1}^{n}w_i\\\\ \\bar{y} & = \\sum_{=1}^{n}{w_i}{{y}_i} \\bigg/ \\sum_{=1}^{n}w_i\\\\ \\bar{z} & = \\sum_{=1}^{n}{w_i}{{z}_i} \\bigg/ \\sum_{=1}^{n}w_i\\\\ \\end{align} can express center mass 3-vector: 𝐜i=(xiyizi)T𝐜‾=(x‾y‾z‾)T \\boxed{ \\begin{align} \\boldsymbol{c}_i & = (x_i \\quad y_i \\quad z_i)^T \\\\ \\boldsymbol{\\bar{c}}& = (\\bar{x} \\quad \\bar{y} \\quad \\bar{z})^T \\end{align} } 𝐜‾=1w∑=1nwi𝐜i \\boxed{ \\boldsymbol{\\bar{c}} = \\frac{1}{w} \\sum_{=1}^{n}{w_i}{{\\boldsymbol{c}}_i} } corresponding R code ","code":"amp$center_mass <- Reduce(`+`, Map(f = function(mp) mp$mass * mp$center_mass, mpl)) / amp$mass"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia","dir":"Articles","previous_headings":"Theory > Mass Properties > Inertia Tensor","what":"Moments of Inertia","title":"massProps","text":"IXX=∑=1n[IXXi+wi(yi2+zi2)−wi(y‾2+z‾2)]=∑=1n{IXXi+wi[(yi−y‾)2+(zi−z‾)2]}IYY=∑=1n[IYYi+wi(xi2+zi2)−wi(x‾2+z‾2)]=∑=1n{IYYi+wi[(xi−x‾)2+(zi−z‾)2]}IZZ=∑=1n[IZZi+wi(xi2+yi2)−wi(x‾2+y‾2)]=∑=1n{IZZi+wi[(xi−x‾)2+(yi−y‾)2]} \\begin{align} I_{XX} & =    \\sum_{=1}^{n} \\left[ {I_{XX}}_i     + w_i \\left( {y}_i^2 + {z}_i^2 \\right)   - w_i \\left( \\bar{y}^2 + \\bar{z}^2 \\right)   \\right]  & =  \\sum_{=1}^{n} \\left\\{ {I_{XX}}_i   + w_i \\left[ \\left( {y}_i - \\bar{y} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2 \\right]   \\right\\}  \\\\ I_{YY} & =    \\sum_{=1}^{n} \\left[ {I_{YY}}_i     + w_i \\left( {x}_i^2 + {z}_i^2 \\right)   - w_i \\left( \\bar{x}^2 + \\bar{z}^2 \\right)   \\right]  & =  \\sum_{=1}^{n} \\left\\{ {I_{YY}}_i   + w_i \\left[ \\left( {x}_i - \\bar{x} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2 \\right]   \\right\\}  \\\\ I_{ZZ} & =    \\sum_{=1}^{n} \\left[ {I_{ZZ}}_i     + w_i \\left( {x}_i^2 + {y}_i^2 \\right)   - w_i \\left( \\bar{x}^2 + \\bar{y}^2 \\right)   \\right]  & =  \\sum_{=1}^{n} \\left\\{ {I_{ZZ}}_i   + w_i \\left[ \\left( {x}_i - \\bar{x} \\right)^2 + \\left( {y}_i - \\bar{y} \\right)^2 \\right]   \\right\\}  \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia","dir":"Articles","previous_headings":"Theory > Mass Properties > Inertia Tensor","what":"Products of Inertia","title":"massProps","text":"IXY=∑=1n[IXYi+wixiyi−wi(x‾y‾)]=∑=1n[IXYi+wi(xi−x‾)(yi−y‾)]IXZ=∑=1n[IXZi+wixizi−wi(x‾z‾)]=∑=1n[IXZi+wi(xi−x‾)(zi−z‾)]IYZ=∑=1n[IYZi+wiyizi−wi(y‾z‾)]=∑=1n[IYZi+wi(yi−y‾)(zi−z‾)] \\begin{align} I_{XY} & = \\sum_{=1}^{n} \\left[ {I_{XY}}_i + w_i {{x}_i}{{y}_i} -w_i (\\bar{x}\\bar{y})\\right] & = \\sum_{=1}^{n} \\left[ {I_{XY}}_i + w_i ({x}_i - \\bar{x})({y}_i - \\bar{y})\\right] \\\\ I_{XZ} & = \\sum_{=1}^{n} \\left[ {I_{XZ}}_i + w_i {{x}_i}{{z}_i} -w_i (\\bar{x}\\bar{z})\\right] & = \\sum_{=1}^{n} \\left[ {I_{XZ}}_i + w_i ({x}_i - \\bar{x})({z}_i - \\bar{z})\\right] \\\\ I_{YZ} & = \\sum_{=1}^{n} \\left[ {I_{YZ}}_i + w_i {{y}_i}{{z}_i} -w_i (\\bar{y}\\bar{z})\\right] & = \\sum_{=1}^{n} \\left[ {I_{YZ}}_i + w_i ({y}_i - \\bar{y})({z}_i - \\bar{z})\\right] \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"matrix-formulation","dir":"Articles","previous_headings":"Theory > Mass Properties > Inertia Tensor","what":"Matrix Formulation","title":"massProps","text":"Let II inertia tensor aggregate IiI_i part ii. equations products inertia clearly follow positive integral convention, =[Ixx−Ixy−Ixz−IxyIyy−Iyz−Ixz−IyzIzz] = \\left[ \\begin{matrix}  I_{xx} & -I_{xy} & -I_{xz} \\\\ -I_{xy} &  I_{yy} & -I_{yz} \\\\ -I_{xz} & -I_{yz} &  I_{zz}  \\end{matrix} \\right] similarly IiI_i. Noting repeated appearance terms form (xi−x‾)(yi−y‾)({x}_i - \\bar{x})({y}_i - \\bar{y}), form outer product 𝐝i=((xi−x‾)(yi−y‾)(zi−z‾))T𝐐i=𝐝i𝐝iT \\boxed{ \\begin{align} \\boldsymbol{d}_i & = (({x}_i - \\bar{x}) \\quad ({y}_i - \\bar{y}) \\quad ({z}_i - \\bar{z}))^T \\\\ \\boldsymbol{Q}_i & = \\boldsymbol{d}_i {\\boldsymbol{d}_i}^T \\end{align} }  𝐐i=[(xi−x‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(yi−y‾)(xi−x‾)(yi−y‾)2(yi−y‾)(zi−z‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)2] \\begin{align} \\boldsymbol{Q}_i & = \\begin{bmatrix} ({x}_i - \\bar{x})^2     & ({x}_i - \\bar{x})({y}_i - \\bar{y}) & ({x}_i - \\bar{x})({z}_i - \\bar{z}) \\\\ ({y}_i - \\bar{y})({x}_i - \\bar{x}) & ({y}_i - \\bar{y})^2     & ({y}_i - \\bar{y})({z}_i - \\bar{z}) \\\\ ({z}_i - \\bar{z})({x}_i - \\bar{x}) & ({z}_i - \\bar{z})({y}_i - \\bar{y}) & ({z}_i - \\bar{z})^2     \\\\ \\end{bmatrix} \\end{align} Let 𝐬i\\boldsymbol{s}_i matrix inertia tensor summands reference equations. , 𝐈=∑=1n𝐬i \\boldsymbol{} = \\sum_{=1}^{n} \\boldsymbol{s}_i 𝐬i=𝐈i−wi[−(yi−y‾)2−(zi−z‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(xi−x‾)(yi−y‾)−(xi−x‾)2−(zi−z‾)2(yi−y‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)−(xi−x‾)2−(yi−y‾)2]=𝐈i−wi[(xi−x‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(xi−x‾)(yi−y‾)(yi−y‾)2(yi−y‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)(zi−z‾)2]−wi[−(xi−x‾)2−(yi−y‾)2−(zi−z‾)2000−(xi−x‾)2−(yi−y‾)2−(zi−z‾)2000−(xi−x‾)2−(yi−y‾)2−(zi−z‾)2]=𝐈i−wi(𝐐i−tr(𝐐i)𝟏3) \\begin{align} \\boldsymbol{s}_i & = \\boldsymbol{}_i \\\\ & - w_i \\begin{bmatrix} -({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 & ({x}_i - \\bar{x})({y}_i - \\bar{y})         & ({x}_i - \\bar{x})({z}_i - \\bar{z})         \\\\ ({x}_i - \\bar{x})({y}_i - \\bar{y})         & -({x}_i - \\bar{x})^2 - ({z}_i - \\bar{z})^2 &  ({y}_i - \\bar{y})({z}_i - \\bar{z})        \\\\ ({x}_i - \\bar{x})({z}_i - \\bar{z})         & ({y}_i - \\bar{y})({z}_i - \\bar{z})         & -({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 \\\\ \\end{bmatrix} \\\\ & = \\boldsymbol{}_i \\\\ & - w_i \\begin{bmatrix} ({x}_i - \\bar{x})^2     & ({x}_i - \\bar{x})({y}_i - \\bar{y}) & ({x}_i - \\bar{x})({z}_i - \\bar{z}) \\\\ ({x}_i - \\bar{x})({y}_i - \\bar{y}) & ({y}_i - \\bar{y})^2     & ({y}_i - \\bar{y})({z}_i - \\bar{z}) \\\\ ({x}_i - \\bar{x})({z}_i - \\bar{z}) & ({y}_i - \\bar{y})({z}_i - \\bar{z}) & ({z}_i - \\bar{z})^2     \\\\ \\end{bmatrix} \\\\ & - w_i \\begin{bmatrix} -({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 & 0                               & 0                              \\\\ 0                               & -({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 & 0                              \\\\ 0                               & 0                               &-({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 \\\\ \\end{bmatrix} \\\\ & =  \\boldsymbol{}_i -  w_i \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i) \\boldsymbol{1}_3 \\right) \\end{align} 𝟏3\\boldsymbol{1}_3 3 ⨉ 3 identity matrix. Therefore 𝐈=∑=1n(𝐈i−wi𝐌i) \\boxed{ \\boldsymbol{} = \\sum_{=1}^{n} \\left( \\boldsymbol{}_i -  w_i \\boldsymbol{M}_i \\right) }  𝐌i=𝐐i−tr(𝐐i)𝟏3 \\boxed{ \\boldsymbol{M}_i = \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i) \\boldsymbol{1}_3 } corresponding R code ","code":"amp$inertia <- Reduce(`+`, Map(     f  = function(mp) {       d <- amp$center_mass - mp$center_mass       Q <- outer(d, d)       M <- Q - sum(diag(Q)) * diag(3)       if (mp$point) -mp$mass * M else mp$inertia - mp$mass * M     },     mpl   ))"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass-uncertainty","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties","what":"Mass Uncertainty","title":"massProps","text":"mass uncertainty equation suitable . σw=∑=1nσwi2 \\boxed{ \\sigma_w = \\sqrt{ \\sum_{=1}^n {{\\sigma_w}_i}^2 } } corresponding R code ","code":"amp$sigma_mass = sqrt(Reduce(`+`, Map(f = function(v) v$sigma_mass^2, mpl)))"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass-uncertainty","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties","what":"Center of Mass Uncertainty","title":"massProps","text":"σx=∑=1n{(wiσyi)2+[σwi(yi−y‾)]2}/∑=1nwiσy=∑=1n{(wiσyi)2+[σwi(yi−y‾)]2}/∑=1nwiσz=∑=1n{(wiσzi)2+[σwi(zi−z‾)]2}/∑=1nwi \\begin{align} \\sigma_x & =    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\sigma_y}}_i)^2 + [{\\sigma_w}_i ({y}_i - \\bar{y})]^2 \\right\\} }    \\bigg/ \\sum_{=1}^{n}w_i \\\\ \\sigma_y & =    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\sigma_y}}_i)^2 + [{\\sigma_w}_i ({y}_i - \\bar{y})]^2 \\right\\} }  \\bigg/ \\sum_{=1}^{n}w_i \\\\ \\sigma_z & =    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\sigma_z}}_i)^2 + [{\\sigma_w}_i ({z}_i - \\bar{z})]^2 \\right\\} }  \\bigg/ \\sum_{=1}^{n}w_i \\\\ \\end{align} , create 3-vector center mass uncertainties. Let 𝛔𝐜=(σxσyσz)T𝛔𝐜i=(σxiσyiσzi)T \\boxed{ \\begin{align} \\boldsymbol{\\sigma_c} & = (\\sigma_x \\quad \\sigma_y \\quad \\sigma_z)^T \\\\ {\\boldsymbol{\\sigma_c}}_i & = ({\\sigma_x}_i \\quad {\\sigma_y}_i \\quad {\\sigma_z}_i)^T \\end{align} } construe (R ) squaring taking square roots vectors element-wise, 𝛔𝐜=1w∑=1n{(wi𝛔𝐜i)2+[σwi(𝐜i−𝐜‾)]2} \\boxed{ \\boldsymbol{\\sigma_c} = \\frac{1}{w}    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\boldsymbol{\\sigma_c}}}_i)^2 + [{\\sigma_w}_i ({\\boldsymbol{c}}_i - \\bar{\\boldsymbol{c}})]^2 \\right\\}} } corresponding R code ","code":"amp$sigma_center_mass = sqrt(Reduce(`+`, Map(     f = function(v) {       (v$mass * v$sigma_center_mass)^2 +         (v$sigma_mass * (v$center_mass - amp$center_mass))^2     },     mpl   ))) / amp$mass"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia-uncertainties","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties > Inertia Tensor Uncertainty","what":"Moments of Inertia Uncertainties","title":"massProps","text":"σIXX=∑=1n{σIXXi2+[2wi(yi−y‾)σyi]2+[2wi(zi−z‾)σzi]2+[((yi−y‾)2+(zi−z‾)2)σwi]2}σIYY=∑=1n{σIYYi2+[2wi(xi−x‾)σxi]2+[2wi(zi−z‾)σzi]2+[((xi−x‾)2+(zi−z‾)2)σwi]2}σIZZ=∑=1n{σIZZi2+[2wi(xi−x‾)σxi]2+[2wi(yi−y‾)σyi]2+[((xi−x‾)2+(yi−y‾)2)σwi]2} \\begin{align} \\sigma_{I_{XX}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{XX}}_i}^2 + \\big[ 2 w_i ({y}_i - \\bar{y}) \\sigma_{{y}_i} \\big]^2 + \\big[ 2 w_i ({z}_i - \\bar{z}) \\sigma_{{z}_i} \\big]^2 + \\big[ \\big(({y}_i - \\bar{y})^2 + ({z}_i - \\bar{z})^2 \\big)\\sigma_{w_i}\\big]^2 \\big\\} }  \\\\ \\sigma_{I_{YY}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{YY}}_i}^2 + \\big[ 2 w_i ({x}_i - \\bar{x}) \\sigma_{{x}_i} \\big]^2 + \\big[ 2 w_i ({z}_i - \\bar{z}) \\sigma_{{z}_i} \\big]^2 + \\big[ \\big(({x}_i - \\bar{x})^2 + ({z}_i - \\bar{z})^2 \\big)\\sigma_{w_i}\\big]^2 \\big\\} }  \\\\ \\sigma_{I_{ZZ}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{ZZ}}_i}^2 + \\big[ 2 w_i ({x}_i - \\bar{x}) \\sigma_{{x}_i} \\big]^2 + \\big[ 2 w_i ({y}_i - \\bar{y}) \\sigma_{{y}_i} \\big]^2 + \\big[ \\big(({x}_i - \\bar{x})^2 + ({y}_i - \\bar{y})^2 \\big)\\sigma_{w_i}\\big]^2 \\big\\} }  \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia-uncertainties","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties > Inertia Tensor Uncertainty","what":"Products of Inertia Uncertainties","title":"massProps","text":"σIXY=∑=1n{σIXYi2+[(xi−x‾)wiσyi]2+[(xi−x‾)(yi−y‾)σwi]2+[(yi−y‾)wiσxi]2}σIXZ=∑=1n{σIXZi2+[(xi−x‾)wiσzi]2+[(xi−x‾)(zi−z‾)σwi]2+[(zi−z‾)wiσxi]2}σIYZ=∑=1n{σIYZi2+[(yi−y‾)wiσzi]2+[(yi−y‾)(zi−z‾)σwi]2+[(zi−z‾)wiσyi]2} \\begin{align} \\sigma_{I_{XY}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{XY}}_i}^2 + \\big[ ({x}_i - \\bar{x}) w_i \\sigma_{{y}_i}\\big]^2 + \\big[  ({x}_i - \\bar{x})({y}_i - \\bar{y})\\sigma_{w_i} \\big]^2 + \\big[ ({y}_i - \\bar{y})  w_i \\sigma_{{x}_i} \\big]^2 \\big\\} }  \\\\ \\sigma_{I_{XZ}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{XZ}}_i}^2 + \\big[ ({x}_i - \\bar{x}) w_i \\sigma_{{z}_i}\\big]^2 + \\big[  ({x}_i - \\bar{x})({z}_i - \\bar{z})\\sigma_{w_i} \\big]^2 + \\big[ ({z}_i - \\bar{z})  w_i \\sigma_{{x}_i} \\big]^2 \\big\\} }  \\\\ \\sigma_{I_{YZ}} & = \\sqrt{ \\sum_{=1}^n \\big\\{   \\sigma_{{I_{YZ}}_i}^2 + \\big[ ({y}_i - \\bar{y}) w_i \\sigma_{{z}_i}\\big]^2 + \\big[  ({y}_i - \\bar{y})({z}_i - \\bar{z})\\sigma_{w_i} \\big]^2 + \\big[ ({z}_i - \\bar{z})  w_i \\sigma_{{y}_i} \\big]^2 \\big\\} }  \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"matrix-formulation-1","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties > Inertia Tensor Uncertainty","what":"Matrix Formulation","title":"massProps","text":"Let 𝐝i=((xi−x‾)(yi−y‾)(zi−z‾))T𝛔𝐜i=(σxiσyiσzi)T𝐏i=𝐝i𝛔𝐜iT𝐐i=𝐝i𝐝iT \\boxed{ \\begin{align} \\boldsymbol{d}_i & = (({x}_i - \\bar{x}) \\quad ({y}_i - \\bar{y}) \\quad ({z}_i - \\bar{z}))^T \\\\ {\\boldsymbol{\\sigma_c}}_i & = ({\\sigma_x}_i \\quad {\\sigma_y}_i \\quad {\\sigma_z}_i)^T \\\\ \\boldsymbol{P}_i & = \\boldsymbol{d}_i {\\boldsymbol{\\sigma_c}}_i^T \\\\ \\boldsymbol{Q}_i & = \\boldsymbol{d}_i {\\boldsymbol{d}_i}^T \\end{align} } 𝐏i=[(xi−x‾)σxi(xi−x‾)σyi(xi−x‾)σzi(yi−y‾)σxi(yi−y‾)σyi(yi−y‾)σzi(zi−z‾)σxi(zi−z‾)σyi(zi−z‾)σzi]𝐐i=[(xi−x‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(yi−y‾)(xi−x‾)(yi−y‾)2(yi−y‾)(zi−z‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)2] \\begin{align} \\boldsymbol{P}_i & =  \\begin{bmatrix} (x_i - \\bar{x})\\sigma_{x_i} &({x}_i - \\bar{x})\\sigma_{y_i} &({x}_i - \\bar{x})\\sigma_{z_i} \\\\ ({y}_i - \\bar{y})\\sigma_{x_i} & ({y}_i - \\bar{y})\\sigma_{y_i} & ({y}_i - \\bar{y})\\sigma_{z_i} \\\\ ({z}_i - \\bar{z})\\sigma_{x_i} & ({z}_i - \\bar{z})\\sigma_{y_i} & ({z}_i - \\bar{z})\\sigma_{z_i} \\\\ \\end{bmatrix} \\\\ \\\\ \\boldsymbol{Q}_i & = \\begin{bmatrix} (x_i - \\bar{x})^2 &({x}_i - \\bar{x})({y}_i - \\bar{y}) &({x}_i - \\bar{x})({z}_i - \\bar{z}) \\\\ ({y}_i - \\bar{y})(x_i - \\bar{x}) & ({y}_i - \\bar{y})^2 & ({y}_i - \\bar{y})({z}_i - \\bar{z}) \\\\ ({z}_i - \\bar{z})(x_i - \\bar{x}) & ({z}_i - \\bar{z})({y}_i - \\bar{y}) & ({z}_i - \\bar{z})^2 \\\\ \\end{bmatrix} \\end{align} Let 𝐬i2\\boldsymbol{s}_i^2 matrix inertia tensor uncertainty summands standard formulas given subcomponent ii . , 𝛔𝐈2=∑=1𝐬i2 \\boldsymbol{\\sigma_I}^2 = \\sum_{=1}^{} \\boldsymbol{s}_i^2 Let pXi{p_X}_i, pYi{p_Y}_i, pZi{p_Z}_i respective diagonal elements PiP_i. Let 𝟏3\\boldsymbol{1}_3 3 ⨉ 3 identity matrix. interpret squaring matrix Hadamard (element-wise) product , 𝐬i2=𝛔𝐈i2+[2wi(yi−y‾)σyiwi(xi−x‾)σyiwi(xi−x‾)σziwi(xi−x‾)σyi2wi(xi−x‾)σxiwi(yi−y‾)σziwi(xi−x‾)σziwi(yi−y‾)σzi2wi(xi−x‾)σxi]2+[2wi(zi−z‾)σziwi(yi−y‾)σxiwi(zi−z‾)σxiwi(yi−y‾)σxi2wi(zi−z‾)σziwi(zi−z‾)σyiwi(zi−z‾)σxiwi(zi−z‾)σyi2wi(yi−y‾)σyi]2+[((yi−y‾)2+(zi−z‾)2)σwi(xi−x‾)(yi−y‾)σwi(xi−x‾)(zi−z‾)σwi(yi−y‾)(xi−x‾)σwi((xi−x‾)2+(zi−z‾)2)σwi(yi−y‾)(zi−z‾)σwi(zi−z‾)(xi−x‾)σwi(zi−z‾)(yi−y‾)σwi((xi−x‾)2+(yi−y‾)2)σwi]2=𝛔𝐈i2+wi2(𝐏i−[(xi−x‾)σxi−2(yi−y‾)σyi000(yi−y‾)σyi−2(xi−x‾)σxi000(zi−z‾)σyi−2(xi−x‾)σxi])2+wi2(𝐏iT−[(xi−x‾)σxi−2(zi−z‾)σyi000(yi−y‾)σyi−2(zi−z‾)σzi000(zi−z‾)σyi−2(yi−y‾)σyi])2+σwi2(𝐐i−tr(𝐐i)𝟏3)2=𝛔𝐈i2+wi2(𝐏i−[pXi−2pYi000pYi−2pXi000pZi−2pXi])2+wi2(𝐏iT−[pXi−2pZi000pYi−2pZi000pZi−2pYi])2+σwi2(𝐐i−tr(𝐐i)𝟏3)2 \\begin{align} \\boldsymbol{s}_i^2 & = {\\boldsymbol{\\sigma_I}}_i^2 \\\\ & +  \\begin{bmatrix} 2 w_i ({y}_i - \\bar{y}) \\sigma_{y_i} &   w_i({x}_i - \\bar{x}) \\sigma_{y_i} &   w_i({x}_i - \\bar{x}) \\sigma_{z_i} \\\\   w_i({x}_i - \\bar{x}) \\sigma_{y_i} & 2 w_i({x}_i - \\bar{x}) \\sigma_{x_i} &   w_i ({y}_i - \\bar{y}) \\sigma_{z_i} \\\\   w_i({x}_i - \\bar{x}) \\sigma_{z_i} &   w_i ({y}_i - \\bar{y}) \\sigma_{z_i} & 2 w_i({x}_i - \\bar{x}) \\sigma_{x_i} \\end{bmatrix}^2 \\\\ & + \\begin{bmatrix} 2 w_i ({z}_i - \\bar{z}) \\sigma_{z_i} &   w_i ({y}_i - \\bar{y}) \\sigma_{x_i} &   w_i ({z}_i - \\bar{z}) \\sigma_{x_i} \\\\   w_i ({y}_i - \\bar{y}) \\sigma_{x_i} & 2 w_i ({z}_i - \\bar{z}) \\sigma_{z_i} &   w_i ({z}_i - \\bar{z}) \\sigma_{y_i} \\\\   w_i ({z}_i - \\bar{z}) \\sigma_{x_i} &   w_i ({z}_i - \\bar{z}) \\sigma_{y_i} & 2 w_i ({y}_i - \\bar{y}) \\sigma_{y_i} \\end{bmatrix}^2 \\\\ & + \\begin{bmatrix} (({y}_i - \\bar{y})^2 + ({z}_i - \\bar{z})^2)\\sigma_{w_i} &({x}_i - \\bar{x})({y}_i - \\bar{y})\\sigma_{w_i} &({x}_i - \\bar{x})({z}_i - \\bar{z})\\sigma_{w_i} \\\\ ({y}_i - \\bar{y})(x_i - \\bar{x})\\sigma_{w_i} & ((x_i - \\bar{x})^2 + ({z}_i - \\bar{z})^2)\\sigma_{w_i} & ({y}_i - \\bar{y})({z}_i - \\bar{z})\\sigma_{w_i} \\\\ ({z}_i - \\bar{z})(x_i - \\bar{x})\\sigma_{w_i} & ({z}_i - \\bar{z})({y}_i - \\bar{y})\\sigma_{w_i} & ((x_i - \\bar{x})^2 + ({y}_i - \\bar{y})^2)\\sigma_{w_i} \\\\ \\end{bmatrix}^2 \\\\ \\\\ & = {\\boldsymbol{\\sigma_I}}_i^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i - \\begin{bmatrix} (x_i - \\bar{x})\\sigma_{x_i} - 2 ({y}_i - \\bar{y})\\sigma_{y_i} & 0 & 0 \\\\ 0 & ({y}_i - \\bar{y})\\sigma_{y_i} - 2({x}_i - \\bar{x})\\sigma_{x_i} & 0 \\\\ 0 & 0 & ({z}_i - \\bar{z})\\sigma_{y_i} - 2({x}_i - \\bar{x})\\sigma_{x_i} \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i^T - \\begin{bmatrix} (x_i - \\bar{x})\\sigma_{x_i} - 2 ({z}_i - \\bar{z})\\sigma_{y_i} & 0 & 0 \\\\ 0 & ({y}_i - \\bar{y})\\sigma_{y_i} - 2 ({z}_i - \\bar{z})\\sigma_{z_i} & 0 \\\\ 0 & 0 & ({z}_i - \\bar{z})\\sigma_{y_i} - 2 ({y}_i - \\bar{y})\\sigma_{y_i} \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + \\sigma_{w_i}^2 \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i)\\boldsymbol{1}_3 \\right)^2 \\\\ \\\\ & = {\\boldsymbol{\\sigma_I}}_i^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i - \\begin{bmatrix}  {p_X}_i - 2 {p_Y}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2 {p_X}_i & 0 \\\\ 0 & 0 & {p_Z}_i - 2  {p_X}_i \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i^T - \\begin{bmatrix}  {p_X}_i - 2{p_Z}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2 {p_Z}_i & 0 \\\\ 0 & 0 & {p_Z}_i - 2 {p_Y}_i \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + \\sigma_{w_i}^2 \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i)\\boldsymbol{1}_3 \\right)^2 \\end{align} Finally, 𝛔𝐈=∑=1n{𝛔𝐈i2+𝐌4i} \\boxed{ \\boldsymbol{\\sigma_I} = \\sqrt{ \\sum_{=1}^{n} {\\left\\{ {\\boldsymbol{\\sigma_I}}_i^2  +{\\boldsymbol{M}_4}_i \\right\\}} } } 𝐌1i=𝐏i−[pXi−2pYi000pYi−2pXi000pZi−2pXi]𝐌2i=𝐏iT−[pXi−2pZi000pYi−2pZi000pZi−2pYi]𝐌3i=𝐐i−tr(𝐐i)𝟏3𝐌4i=wi2(𝐌1i2+𝐌2i2)+(σwi𝐌3i)2 \\boxed{ \\begin{align} {\\boldsymbol{M}_1}_i & = \\boldsymbol{P}_i - \\begin{bmatrix} {p_X}_i - 2 {p_Y}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2 {p_X}_i & 0 \\\\ 0 & 0 & {p_Z}_i - 2  {p_X}_i \\\\ \\end{bmatrix} \\\\ {\\boldsymbol{M}_2}_i & = \\boldsymbol{P}_i^T - \\begin{bmatrix}  {p_X}_i - 2{p_Z}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2 {p_Z}_i & 0 \\\\ 0 & 0 & {p_Z}_i - 2 {p_Y}_i \\\\ \\end{bmatrix} \\\\ {\\boldsymbol{M}_3}_i & = \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i)\\boldsymbol{1}_3 \\\\ {\\boldsymbol{M}_4}_i & =  w_i^2 \\left( {{\\boldsymbol{M}_1}_i}^2 + {{\\boldsymbol{M}_2}_i}^2 \\right)  + \\left( \\sigma_{w_i} {\\boldsymbol{M}_3}_i \\right)^2 \\end{align} } corresponding R code ","code":"amp$sigma_inertia = sqrt(Reduce(`+`, Map(     f = function(v) {        d <- v$center_mass - amp$center_mass        P <- outer(d, v$sigma_center_mass)       p <- as.list(diag(P))        Q <- outer(d, d)        M1 <-   P  - diag(c(p$x - 2 * p$y, p$y - 2 * p$x, p$z - 2 * p$x))       M2 <- t(P) - diag(c(p$x - 2 * p$z, p$y - 2 * p$z, p$z - 2 * p$y))       M3 <- Q - sum(diag(Q)) * diag(3)       M4 <- v$mass^2 * (M1^2 + M2^2) + (v$sigma_mass * M3)^2        if (v$point) M4 else v$sigma_inertia^2 + M4     },     mpl   )))"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"comparison-with-independently-calculated-results","dir":"Articles","previous_headings":"Testing and Validation","what":"Comparison With Independently-Calculated Results","title":"massProps","text":"section calculate results SAWE example step step compare package results. inputs : computed result ","code":"#>         id  mass    Cx    Cy    Cz     Ixx     Iyy      Izz    Ixy      Ixz #> 1   Widget 57.83 121.2  0.04 -0.16 7258.90 8607.02 10453.40 834.44 -1198.38 #> 2 2nd Part 16.80  70.9 -0.95  0.46   65.07 1124.65  1078.82  76.01   202.83 #>        Iyz sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy sigma_Izz #> 1 -1066.58     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792  414.5547 #> 2    13.62     1.7308   0.6234   0.5173   0.1405   12.4687  109.1324  108.5481 #>   sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1 1440.5402  344.6237  124.6860  FALSE       + #> 2   55.8879  212.1241   11.5408  FALSE       + sawe_result <- rollup_mass_props_and_unc(sawe_tree, sawe_table)[3, ] sawe_result #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz sigma_mass sigma_Cx  sigma_Cy   sigma_Cz #> 3 1558.714 -1401.534 -1060.951    2.13008  0.95821 0.1999847 0.06178402 #>   sigma_Ixx sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 3  387.4017  2789.313  2815.326  1488.095  418.6048  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Mass","title":"massProps","text":"independently-calculated mass agrees computed result.","code":"mass <- sum(sawe_input$mass) #> [1] 74.63"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Center of Mass","title":"massProps","text":"independently-calculated center mass agrees computed result.","code":"C <- apply(sawe_input$mass / mass * sawe_input[, c(\"Cx\", \"Cy\", \"Cz\")], 2, sum) #>           Cx           Cy           Cz  #> 109.87693957  -0.18285944  -0.02043146"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Moments of Inertia","title":"massProps","text":"independently-calculated moments inertia agrees computed result.","code":"moi <- function(I, v1, v2, m, c1, c2) {   I + m * ((v1^2 + v2^2) - (c1^2 + c2^2)) } MOI <- c(   Ixx = sum(moi(sawe_input$Ixx, sawe_input$Cy, sawe_input$Cz, sawe_input$mass, C[\"Cy\"], C[\"Cz\"])),   Iyy = sum(moi(sawe_input$Iyy, sawe_input$Cx, sawe_input$Cz, sawe_input$mass, C[\"Cx\"], C[\"Cz\"])),   Izz = sum(moi(sawe_input$Izz, sawe_input$Cx, sawe_input$Cy, sawe_input$mass, C[\"Cx\"], C[\"Cy\"])) ) #>       Ixx       Iyy       Izz  #>  7341.733 42673.747 44482.052"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Products of Inertia","title":"massProps","text":"independently-calculated products inertia agrees computed result.","code":"poi <- function(I, v1, v2, m, c1, c2) {   I + m * (v1 * v2 - c1 * c2) } POI <- c(   Ixy = sum(poi(sawe_input$Ixy, sawe_input$Cx, sawe_input$Cy, sawe_input$mass, C[\"Cx\"], C[\"Cy\"])),   Ixz = sum(poi(sawe_input$Ixz, sawe_input$Cx, sawe_input$Cz, sawe_input$mass, C[\"Cx\"], C[\"Cz\"])),   Iyz = sum(poi(sawe_input$Iyz, sawe_input$Cy, sawe_input$Cz, sawe_input$mass, C[\"Cy\"], C[\"Cz\"])) ) #>       Ixy       Ixz       Iyz  #>  1558.714 -1401.534 -1060.951"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass-uncertainty-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Mass Uncertainty","title":"massProps","text":"independently-calculated mass uncertainty agrees computed result.","code":"sigma_mass <- sqrt(sum(sawe_input$sigma_mass^2)) #> [1] 2.13008"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass-uncertainty-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Center of Mass Uncertainty","title":"massProps","text":"independently-calculated center mass uncertainties agrees computed result.","code":"sigma_cm <- function(m, sigma_v, sigma_m, v, c) {   (m * sigma_v)^2 + (sigma_m * (v - c))^2 } sigma_C <- c(   sigma_Cx = sqrt(sum(sigma_cm(sawe_input$mass, sawe_input$sigma_Cx, sawe_input$sigma_mass, sawe_input$Cx, C[\"Cx\"]))) / mass,   sigma_Cy = sqrt(sum(sigma_cm(sawe_input$mass, sawe_input$sigma_Cy, sawe_input$sigma_mass, sawe_input$Cy, C[\"Cy\"]))) / mass,   sigma_Cz = sqrt(sum(sigma_cm(sawe_input$mass, sawe_input$sigma_Cz, sawe_input$sigma_mass, sawe_input$Cz, C[\"Cz\"]))) / mass ) #>   sigma_Cx   sigma_Cy   sigma_Cz  #> 0.95821004 0.19998470 0.06178402"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia-uncertainties-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Moments of Inertia Uncertainties","title":"massProps","text":"independently-calculated moments inertia uncertainties agrees computed result.","code":"sigma_moi <- function(sigma_I, mass, sigma_mass, v1, v2, c1, c2, sigma_v1, sigma_v2) {   sigma_I^2 +     (2 * mass * (v1 - c1) * sigma_v1)^2 +     (2 * mass * (v2 - c2) * sigma_v2)^2 +     (((v1 - c1)^2 + (v2 - c2)^2) * sigma_mass)^2 } sigma_MOI <- c(   sigma_Ixx = sqrt(sum(sigma_moi(sawe_input$sigma_Ixx, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cy,                                   sawe_input$Cz, C[\"Cy\"], C[\"Cz\"], sawe_input$sigma_Cy, sawe_input$sigma_Cz))),   sigma_Iyy = sqrt(sum(sigma_moi(sawe_input$sigma_Iyy, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cx,                                   sawe_input$Cz, C[\"Cx\"], C[\"Cz\"], sawe_input$sigma_Cx, sawe_input$sigma_Cz))),   sigma_Izz = sqrt(sum(sigma_moi(sawe_input$sigma_Izz, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cx,                                   sawe_input$Cy, C[\"Cx\"], C[\"Cy\"], sawe_input$sigma_Cx, sawe_input$sigma_Cy))) ) #> sigma_Ixx sigma_Iyy sigma_Izz  #>  387.4017 2789.3133 2815.3260"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia-uncertainties-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Products of Inertia Uncertainties","title":"massProps","text":"independently-calculated products inertia uncertainties agrees computed result.","code":"sigma_poi <- function(sigma_I, mass, sigma_mass, v1, v2, c1, c2, sigma_v1, sigma_v2) {   sigma_I^2 +     ((v1 - c1) * mass * sigma_v2)^2 +     ((v1 - c1) * (v2 - c2) * sigma_mass)^2 +     ((v2 - c2) * mass * sigma_v1)^2 } sigma_POI <- c(   sigma_Ixy = sqrt(sum(sigma_poi(sawe_input$sigma_Ixy, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cx,                                   sawe_input$Cy, C[\"Cx\"], C[\"Cy\"], sawe_input$sigma_Cx, sawe_input$sigma_Cy))),   sigma_Ixz = sqrt(sum(sigma_poi(sawe_input$sigma_Ixz, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cx,                                   sawe_input$Cz, C[\"Cx\"], C[\"Cz\"], sawe_input$sigma_Cx, sawe_input$sigma_Cz))),   sigma_Iyz = sqrt(sum(sigma_poi(sawe_input$sigma_Iyz, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cy,                                   sawe_input$Cz, C[\"Cy\"], C[\"Cz\"], sawe_input$sigma_Cy, sawe_input$sigma_Cz))) ) #> sigma_Ixy sigma_Ixz sigma_Iyz  #> 1488.0948  418.6048  125.3175"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"comparison-with-published-results","dir":"Articles","previous_headings":"Testing and Validation","what":"Comparison With Published Results","title":"massProps","text":"SAWE reference provides computed results example. results match within tolerance 0.2%. small differences likely actual input values identical truncated values published article.","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"performance-evaluation","dir":"Articles","previous_headings":"","what":"Performance Evaluation","title":"massProps","text":"mp_table mp_tree synthesized data set representing tree depth 7 1765 vertices 1764 edges. 1267 vertices leaves, remaining 498 non-leaves. Rolling mass properties uncertainties data set combines 35280 input values produce 9960 output values. Mass properties alone halves values. Benchmarks taken platform CPU characteristics: Benchmark results rollup mass properties uncertainties taken without input validation: Times reported seconds.","code":"Python Version: 3.12.7.final.0 (64 bit) Cpuinfo Version: 9.0.0 Vendor ID Raw:  Hardware Raw:  Brand Raw: Apple M3 Hz Advertised Friendly:  Hz Actual Friendly: 2.4000 GHz Hz Advertised:  Hz Actual: (2400000000, 0) Arch: ARM_8 Bits: 64 Count: 8 Arch String Raw: arm64 L1 Data Cache Size:  L1 Instruction Cache Size:  L2 Cache Size:  L2 Cache Line Size:  L2 Cache Associativity:  L3 Cache Size:  Stepping:  Model:  Family: 6 Processor Type:  Flags: acpi, aes, apic, clfsh, cmov, cx16, cx8, de, ds, dscpl, dtse64, est, fpu, fxsr, htt, mca, mce, mmx, mon, msr, mtrr, pae, pat, pbe, pclmulqdq, pdcm, pge, pse, pse36, seglim64, sep, ss, sse, sse2, sse3, sse4.1, sse4.2, ssse3, tm, tm2, tpr, tsc, vme, vmx benchmark('mp + unc no validation' = rollup_mass_props_and_unc_fast(mp_tree, mp_table),           'mp + unc    validation' = rollup_mass_props_and_unc(mp_tree, mp_table),           'mp       no validation' = rollup_mass_props_fast(mp_tree, mp_table),           'mp          validation' = rollup_mass_props(mp_tree, mp_table),           replications = 1,           columns = c(\"test\", \"replications\", \"elapsed\", \"user.self\", \"sys.self\") ) test replications elapsed user.self sys.self 4 mp          validation            1   0.840     0.824    0.016 3 mp       no validation            1   0.604     0.594    0.011 2 mp + unc    validation            1   1.479     1.454    0.026 1 mp + unc no validation            1   0.993     0.974    0.019"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Steven Jenkins. Author, maintainer, copyright holder.","code":""},{"path":"https://jsjuni.github.io/massProps/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jenkins JS (2025). massProps: Calculate Mass Properties Uncertainties Tree Structures. R package version 0.2.0.9000, https://github.com/jsjuni/massProps, https://jsjuni.github.io/massProps/.","code":"@Manual{,   title = {massProps: Calculate Mass Properties and Uncertainties of Tree Structures},   author = {James Steven Jenkins},   year = {2025},   note = {R package version 0.2.0.9000, https://github.com/jsjuni/massProps},   url = {https://jsjuni.github.io/massProps/}, }"},{"path":"https://jsjuni.github.io/massProps/index.html","id":"massprops","dir":"","previous_headings":"","what":"Calculate Mass Properties and Uncertainties of Tree Structures","title":"Calculate Mass Properties and Uncertainties of Tree Structures","text":"massProps package extends rollupTree functions recursively calculate mass properties (optionally, uncertainties) arbitrary composition trees. Formulas implemented described technical paper published Society Allied Weight Engineers.(Zimmerman Nakai 2005)","code":""},{"path":"https://jsjuni.github.io/massProps/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Mass Properties and Uncertainties of Tree Structures","text":"can install development version massProps GitHub :","code":"install.packages(\"massProps\") # install.packages(\"pak\") pak::pak(\"jsjuni/massProps\")"},{"path":"https://jsjuni.github.io/massProps/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calculate Mass Properties and Uncertainties of Tree Structures","text":"Suppose following mass properties table: graph edges representing child-parent relations:  can roll mass properties non-leaf elements follows:","code":"library(massProps) test_table #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 2  A.2    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 3  A.3    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE library(igraph) E(test_tree) #> + 11/11 edges from d76039e (vertex names): #>  [1] A.2->A.1 A.3->A.1 C.1->A.1 P.1->A.2 P.2->A.2 P.3->A.2 P.4->A.2 P.5->A.3 #>  [9] P.6->A.3 P.7->A.3 P.8->A.3 rollup_mass_props(test_tree, test_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine mass properties — combine_mass_props","title":"Combine mass properties — combine_mass_props","text":"combine_mass_props() calculates mass properties aggregate list constituent mass properties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine mass properties — combine_mass_props","text":"","code":"combine_mass_props(mpl)"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine mass properties — combine_mass_props","text":"mpl list mass properties lists, contains following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine mass properties — combine_mass_props","text":"Combined mass properties list named elements.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine mass properties — combine_mass_props","text":"See vignette(\"massProps\", package = \"massProps\") details algorithms employed.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine mass properties — combine_mass_props","text":"","code":"leaves <- names(igraph::neighbors(test_tree, \"A.3\", mode = \"in\")) mpl <- Map(f = function(id) get_mass_props(test_table, id), leaves) combine_mass_props(mpl) #> $mass #> [1] 8 #>  #> $center_mass #>  x  y  z  #> -1  0  0  #>  #> $inertia #>      x    y    z #> x 32.0 -0.4 -0.4 #> y -0.4 24.0  0.4 #> z -0.4  0.4 24.0 #>  #> $point #> [1] FALSE #>"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine mass properties and uncertainties — combine_mass_props_and_unc","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"combine_mass_props_and_unc() convenience wrapper concatenates results combine_mass_props() combine_mass_props_unc().","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"","code":"combine_mass_props_and_unc(mpl)"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"mpl list mass properties uncertainties lists, contains following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor. sigma_mass mass uncertainty sigma_center_mass center mass uncertainty (3-dimensional numeric) sigma_inertia Inertia tensor uncertainty (3x3 numeric matrix)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"Combined mass properties list named elements.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"","code":"leaves <- names(igraph::neighbors(sawe_tree, \"Combined\", mode = \"in\")) mpl <- Map(f = function(id) get_mass_props_and_unc(sawe_table, id), leaves) combine_mass_props_and_unc(mpl) #> $mass #> [1] 74.63 #>  #> $center_mass #>            x            y            z  #> 109.87693957  -0.18285944  -0.02043146  #>  #> $inertia #>           x         y         z #> x  7341.733 -1558.714  1401.534 #> y -1558.714 42673.747  1060.951 #> z  1401.534  1060.951 44482.052 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 2.13008 #>  #> $sigma_center_mass #>          x          y          z  #> 0.95821004 0.19998470 0.06178402  #>  #> $sigma_inertia #>           x         y         z #> x  387.4017 1488.0948  418.6048 #> y 1488.0948 2789.3133  125.3175 #> z  418.6048  125.3175 2815.3260 #>"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine mass properties uncertainties — combine_mass_props_unc","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"combine_mass_prop_unc() calculates mass properties uncertainties aggregate mass properties uncertainties constituents mass properties aggregate.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"","code":"combine_mass_props_unc(mpl, amp)"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"mpl list mass properties uncertainties lists, contains following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor. sigma_mass mass uncertainty sigma_center_mass center mass uncertainty (3-dimensional numeric) sigma_inertia Inertia tensor uncertainty (3x3 numeric matrix) amp named list mass properties aggregate containing following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"mass properties uncertainties aggregate. list elements members mpl.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"See vignette(\"massProps\", package = \"massProps\") details algorithms employed.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"","code":"leaves <- names(igraph::neighbors(sawe_tree, \"Combined\", mode = \"in\")) mpl <- Map(f = function(id) get_mass_props_and_unc(sawe_table, id), leaves) combine_mass_props_unc(mpl, amp = get_mass_props(sawe_table, \"Combined\")) #> $mass #> [1] 74.63 #>  #> $center_mass #>        x        y        z  #> 109.8657  -0.1829  -0.0204  #>  #> $inertia #>          x        y        z #> x  7341.73 -1559.36  1401.94 #> y -1559.36 42739.26  1060.95 #> z  1401.94  1060.95 44547.27 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 2.13008 #>  #> $sigma_center_mass #>          x          y          z  #> 0.95800093 0.19998463 0.06178391  #>  #> $sigma_inertia #>           x         y         z #> x  387.4017 1488.0844  418.6026 #> y 1488.0844 2787.8795  125.3175 #> z  418.6026  125.3175 2813.9052 #>"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mass properties for a row in a data frame — get_mass_props","title":"Get mass properties for a row in a data frame — get_mass_props","text":"get_mass_props() creates mass properties list selected row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mass properties for a row in a data frame — get_mass_props","text":"","code":"get_mass_props(df, id)"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mass properties for a row in a data frame — get_mass_props","text":"df data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint. id id value desired row.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mass properties for a row in a data frame — get_mass_props","text":"list following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor. signs -diagonal elements inertia tensor determined POIconv. example, \\(xy\\) element inertia tensor Ixy POIconv \"-\"; -Ixy POIconv \"+\".","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mass properties for a row in a data frame — get_mass_props","text":"","code":"get_mass_props(mp_table, \"C.1.2.2.3.1.2.3\") #> $mass #> [1] 0.1213345 #>  #> $center_mass #>        x        y        z  #> 70.54848 81.54389 44.52262  #>  #> $inertia #>              x             y            z #> x  0.143256682 -0.0123144484 0.0012773920 #> y -0.012314448  0.1458692409 0.0003485651 #> z  0.001277392  0.0003485651 0.1309228273 #>  #> $point #> [1] FALSE #>"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"get_mass_props_and_unc() convenience wrapper combines results get_mass_props() get_mass_props_unc().","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"","code":"get_mass_props_and_unc(df, id)"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"df data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz,sigma_Ixy, sigma_Ixz, sigma_Iyz. id id value desired row.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"list following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor. signs -diagonal elements inertia tensor determined POIconv. example, \\(xy\\) element inertia tensor Ixy POIconv \"-\"; -Ixy POIconv \"+\". sigma_mass Numeric mass uncertainty. sigma_center_mass Numeric 3-vector center mass uncertainties. sigma_inertia Numeric 3x3 matrix inertia tensor uncertainties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"","code":"get_mass_props_and_unc(mp_table, \"C.1.2.2.3.1.2.3\") #> $mass #> [1] 0.1213345 #>  #> $center_mass #>        x        y        z  #> 70.54848 81.54389 44.52262  #>  #> $inertia #>              x             y            z #> x  0.143256682 -0.0123144484 0.0012773920 #> y -0.012314448  0.1458692409 0.0003485651 #> z  0.001277392  0.0003485651 0.1309228273 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 0.2892205 #>  #> $sigma_center_mass #>        x        y        z  #> 28.83321 29.16371 29.59459  #>  #> $sigma_inertia #>            x          y          z #> x 0.37222944 0.02191471 0.02146982 #> y 0.02191471 0.36942277 0.02242524 #> z 0.02146982 0.02242524 0.37416478 #>"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","title":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","text":"get_mass_props_unc() creates mass properties uncertainties list selected row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","text":"","code":"get_mass_props_unc(df, id)"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","text":"df data frame  (least) columns: id, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz. id id value desired row.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","text":"list following named elements: sigma_mass Numeric mass uncertainty. sigma_center_mass Numeric 3-vector center mass uncertainties. sigma_inertia Numeric 3x3 matrix inertia tensor uncertainties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","text":"","code":"get_mass_props_unc(mp_table, \"C.1.2.2.3.1.2.3\") #> $sigma_mass #> [1] 0.2892205 #>  #> $sigma_center_mass #>        x        y        z  #> 28.83321 29.16371 29.59459  #>  #> $sigma_inertia #>            x          y          z #> x 0.37222944 0.02191471 0.02146982 #> y 0.02191471 0.36942277 0.02242524 #> z 0.02146982 0.02242524 0.37416478 #>"},{"path":"https://jsjuni.github.io/massProps/reference/massprops-package.html","id":null,"dir":"Reference","previous_headings":"","what":"massProps: Calculate Mass Properties and Uncertainties of Tree Structures — massProps-package","title":"massProps: Calculate Mass Properties and Uncertainties of Tree Structures — massProps-package","text":"Recursively calculates mass properties (mass, center mass, moments products inertia, optionally, uncertainties) arbitrary decomposition trees. R. L. Zimmerman, J. H. Nakai. (2005) https://www.sawe.org/product/paper-3360/).","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/reference/massprops-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"massProps: Calculate Mass Properties and Uncertainties of Tree Structures — massProps-package","text":"Maintainer: James Steven Jenkins sjenkins@studioj.us (ORCID) [copyright holder]","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Table — mp_table","title":"Example Mass Properties Table — mp_table","text":"Example Mass Properties Table","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Table — mp_table","text":"","code":"mp_table"},{"path":"https://jsjuni.github.io/massProps/reference/mp_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Table — mp_table","text":"data frame columns: id unique key name character name POIconv sign convention products inertia (one c(\"+\", \"-\")) mass mass Cx \\(x\\)-component center mass Cy \\(y\\)-component center mass Cz \\(z\\)-component center mass Ixx \\(I_{xx}\\) moment inertia Iyy \\(I_{yy}\\) moment inertia Izz \\(I_{zz}\\) moment inertia Ixy \\(I_{xy}\\) product inertia Ixz \\(I_{xz}\\) product inertia Iyz \\(I_{yz}\\) product inertia Ipoint logical indicator consider item point mass, .e., negligible inertia sigma_mass mass uncertainty sigma_Cx \\(x\\)-component center mass uncertainty sigma_Cy \\(y\\)-component center mass uncertainty sigma_Cz \\(z\\)-component center mass uncertainty sigma_Ixx \\(I_{xx}\\) moment inertia uncertainty sigma_Iyy \\(I_{yy}\\) moment inertia uncertainty sigma_Izz \\(I_{zz}\\) moment inertia uncertainty sigma_Ixy \\(I_{xy}\\) product inertia uncertainty sigma_Ixz \\(I_{xz}\\) product inertia uncertainty sigma_Iyz \\(I_{yz}\\) product inertia uncertainty","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Tree — mp_tree","title":"Example Mass Properties Tree — mp_tree","text":"Example Mass Properties Tree","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Tree — mp_tree","text":"","code":"mp_tree"},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Tree — mp_tree","text":"'igraph' tree whose vertices named values id column mass properties table whose directed edges point child id parent id.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties — rollup_mass_props","title":"Roll up mass properties — rollup_mass_props","text":"'rollup_mass_props()' rolls mass properties data frame mass properties non-leaf vertex element aggregation child elements.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties — rollup_mass_props","text":"","code":"rollup_mass_props(tree, df, validate_df = validate_mass_props_table, ...)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties — rollup_mass_props","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint. validate_df validator tree table, default validate_mass_props_table() ... parameters passed rollupTree::rollup()","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties — rollup_mass_props","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties — rollup_mass_props","text":"","code":"rollup_mass_props(mp_tree, mp_table)[1:100, ] #>              id         name POIconv       mass          Cx           Cy #> 1           C.1     System 1       - 635.660192   0.3318148   1.36614630 #> 2         C.1.1    Segment 1       - 372.387816   2.7823660   2.27331548 #> 3         C.1.2    Segment 2       - 263.272375  -3.1343878   0.08299326 #> 4       C.1.1.1    Element 1       -  45.236245   0.6449576   3.40672797 #> 5       C.1.1.2    Element 2       -  83.911615   1.7979454  -0.58033620 #> 6       C.1.1.3    Element 3       - 123.272571   6.4136420   1.63215491 #> 7       C.1.1.4    Element 4       - 119.967384   0.5455573   4.50076013 #> 8       C.1.2.1    Element 5       -  97.128572   2.2245377  -4.18310553 #> 9       C.1.2.2    Element 6       -  46.012547 -23.9286608  -6.13818202 #> 10      C.1.2.3    Element 7       - 120.131257   0.4974119   5.91504913 #> 11    C.1.1.1.1  Subsystem 1       -  24.182758  12.7664845  -7.33521244 #> 12    C.1.1.1.2  Subsystem 2       -  21.053487 -13.2782447  15.74528976 #> 13    C.1.1.2.1  Subsystem 3       -  32.614045  -5.4164053   4.35058525 #> 14    C.1.1.2.2  Subsystem 4       -  18.443508   5.9446314  -2.86799230 #> 15    C.1.1.2.3  Subsystem 5       -  32.854062   6.6317379  -4.19099753 #> 16    C.1.1.3.1  Subsystem 6       -  18.809672 -11.5693537   4.60172214 #> 17    C.1.1.3.2  Subsystem 7       -  21.309572   3.7950516  -3.76444320 #> 18    C.1.1.3.3  Subsystem 8       -  28.107067   3.8710126   2.64280855 #> 19    C.1.1.3.4  Subsystem 9       -  31.461107  16.1782715   8.40798505 #> 20    C.1.1.3.5 Subsystem 10       -  23.585154  13.1261314  -6.10317776 #> 21    C.1.1.4.1 Subsystem 11       -  14.945121  10.1956219   2.09268188 #> 22    C.1.1.4.2 Subsystem 12       -  20.623094 -14.8515213  16.29220017 #> 23    C.1.1.4.3 Subsystem 13       -  27.123877  -2.3767554   2.44839217 #> 24    C.1.1.4.4 Subsystem 14       -  27.512486  12.0096670   3.91406747 #> 25    C.1.1.4.5 Subsystem 15       -  29.762807  -1.5653890  -0.04778306 #> 26    C.1.2.1.1 Subsystem 16       -  22.161742  17.0733845  -8.78939395 #> 27    C.1.2.1.2 Subsystem 17       -  29.542394  -4.0320250 -10.63513308 #> 28    C.1.2.1.3 Subsystem 18       -  19.515486 -12.2676108 -10.14297124 #> 29    C.1.2.1.4 Subsystem 19       -  25.908950   7.5732239  11.60299863 #> 30    C.1.2.2.1 Subsystem 20       -  12.256125 -25.7562192  -0.82404359 #> 31    C.1.2.2.2 Subsystem 21       -  24.446707 -17.8654251  -8.50267866 #> 32    C.1.2.2.3 Subsystem 22       -   9.309714 -37.4443673  -6.92516492 #> 33    C.1.2.3.1 Subsystem 23       -  26.125954   2.3614452   7.99620979 #> 34    C.1.2.3.2 Subsystem 24       -  23.382905  18.2483930  -4.68014506 #> 35    C.1.2.3.3 Subsystem 25       -  35.450403  -3.5173534   6.67001106 #> 36    C.1.2.3.4 Subsystem 26       -  17.672250 -15.1876417   6.45654603 #> 37    C.1.2.3.5 Subsystem 27       -  17.499745  -2.0314207  14.88894819 #> 38  C.1.1.1.1.1   Assembly 1       -  10.071268  15.0192256   8.60615091 #> 39  C.1.1.1.1.2   Assembly 2       -   8.777087  13.1715220 -19.12305251 #> 40  C.1.1.1.1.3   Assembly 3       -   5.334404   7.8469082 -18.03684651 #> 41  C.1.1.1.2.1   Assembly 4       -   8.530216 -27.0839975  -3.93222778 #> 42  C.1.1.1.2.2   Assembly 5       -   3.688640   2.4216967  34.86365323 #> 43  C.1.1.1.2.3   Assembly 6       -   8.834630  -6.5032449  26.76246960 #> 44  C.1.1.2.1.1   Assembly 7       -   3.187103 -20.7902569  -4.91562419 #> 45  C.1.1.2.1.2   Assembly 8       -   7.704628   1.5556086  -1.75343697 #> 46  C.1.1.2.1.3   Assembly 9       -   7.711519  -2.3777753  23.38481702 #> 47  C.1.1.2.1.4  Assembly 10       -   3.549741   2.6316091  31.09013760 #> 48  C.1.1.2.1.5  Assembly 11       -  10.461054 -10.8383769 -11.43556170 #> 49  C.1.1.2.2.1  Assembly 12       -  10.286039  10.1654142  12.63895967 #> 50  C.1.1.2.2.2  Assembly 13       -   2.244389   8.1157966 -57.40848164 #> 51  C.1.1.2.2.3  Assembly 14       -   5.913080  -2.2216845  -9.14137684 #> 52  C.1.1.2.3.1  Assembly 15       -  10.677102  14.8893352 -11.06192763 #> 53  C.1.1.2.3.2  Assembly 16       -   6.552370 -10.5711516 -13.20642056 #> 54  C.1.1.2.3.3  Assembly 17       -   6.344582   1.6405611  16.22198529 #> 55  C.1.1.2.3.4  Assembly 18       -   3.402740  60.7702477  -1.44767560 #> 56  C.1.1.2.3.5  Assembly 19       -   5.877267 -15.1470616  -5.28209204 #> 57  C.1.1.3.1.1  Assembly 20       -   4.293059 -39.5750239 -13.48623549 #> 58  C.1.1.3.1.2  Assembly 21       -   5.084983 -43.6312526 -15.82460462 #> 59  C.1.1.3.1.3  Assembly 22       -   5.945426  -5.0634332  18.67393164 #> 60  C.1.1.3.1.4  Assembly 23       -   3.486204  58.5882609  32.67091018 #> 61  C.1.1.3.2.1  Assembly 24       -   6.550015   9.1370077 -28.74205708 #> 62  C.1.1.3.2.2  Assembly 25       -   5.517889   4.5710202  19.45615975 #> 63  C.1.1.3.2.3  Assembly 26       -   3.595544   2.6384819  29.67219507 #> 64  C.1.1.3.2.4  Assembly 27       -   5.646124  -2.4239229 -18.77436158 #> 65  C.1.1.3.3.1  Assembly 28       -   5.516820  11.9159764   7.58302926 #> 66  C.1.1.3.3.2  Assembly 29       -   5.098215 -11.9097042 -24.95358705 #> 67  C.1.1.3.3.3  Assembly 30       -   9.449215  20.7511141   6.11645689 #> 68  C.1.1.3.3.4  Assembly 31       -   8.042816 -11.4759551  12.66601430 #> 69  C.1.1.3.4.1  Assembly 32       -   6.584066  39.3645423   3.15413640 #> 70  C.1.1.3.4.2  Assembly 33       -   5.508303  20.4291943  24.53406983 #> 71  C.1.1.3.4.3  Assembly 34       -   9.267718  11.8847755  -4.54399695 #> 72  C.1.1.3.4.4  Assembly 35       -   2.768917  -8.3967033  23.54252209 #> 73  C.1.1.3.4.5  Assembly 36       -   7.332103   6.8714831  11.66671923 #> 74  C.1.1.3.5.1  Assembly 37       -  11.593170  17.6646845 -16.62616230 #> 75  C.1.1.3.5.2  Assembly 38       -   7.660895  14.2436968  16.34470506 #> 76  C.1.1.3.5.3  Assembly 39       -   4.331090  -0.9991273 -17.64210148 #> 77  C.1.1.4.1.1  Assembly 40       -   8.329673   4.3469841  19.99215163 #> 78  C.1.1.4.1.2  Assembly 41       -   6.615447  17.5597862 -20.44498292 #> 79  C.1.1.4.2.1  Assembly 42       -   9.221147 -12.9516146  20.11827066 #> 80  C.1.1.4.2.2  Assembly 43       -   4.299463   2.8420127   9.95060449 #> 81  C.1.1.4.2.3  Assembly 44       -   7.102484 -28.0288847  15.16367932 #> 82  C.1.1.4.3.1  Assembly 45       -   4.385272  18.5433795  21.95942075 #> 83  C.1.1.4.3.2  Assembly 46       -   8.071459 -29.7075256  -5.36804768 #> 84  C.1.1.4.3.3  Assembly 47       -   7.148714   9.8136441  11.05020999 #> 85  C.1.1.4.3.4  Assembly 48       -   4.661363  -0.2492873 -18.49730016 #> 86  C.1.1.4.3.5  Assembly 49       -   2.857069   8.7521744   7.23387426 #> 87  C.1.1.4.4.1  Assembly 50       -   6.546347   3.1826705   8.23007957 #> 88  C.1.1.4.4.2  Assembly 51       -   3.715625  34.3777783  11.62050300 #> 89  C.1.1.4.4.3  Assembly 52       -   8.571466  30.4272946  -9.05073687 #> 90  C.1.1.4.4.4  Assembly 53       -   8.679047  -9.0978350  10.16349146 #> 91  C.1.1.4.5.1  Assembly 54       -   4.531672 -27.1616577 -14.73715705 #> 92  C.1.1.4.5.2  Assembly 55       -   8.946426  15.5077442  13.44912404 #> 93  C.1.1.4.5.3  Assembly 56       -   8.407049  -9.8383532  -5.91352500 #> 94  C.1.1.4.5.4  Assembly 57       -   7.877659   2.5984849  -0.66574356 #> 95  C.1.2.1.1.1  Assembly 58       -   3.595711  25.4843378  16.03742296 #> 96  C.1.2.1.1.2  Assembly 59       -   4.942294  26.2242739 -11.55394742 #> 97  C.1.2.1.1.3  Assembly 60       -   4.914863  28.1045404 -28.36321162 #> 98  C.1.2.1.1.4  Assembly 61       -   3.039161 -15.6364131 -24.06411319 #> 99  C.1.2.1.1.5  Assembly 62       -   5.669714  11.7334329   3.03098042 #> 100 C.1.2.1.2.1  Assembly 63       -   4.323378 -40.3180149  20.93528200 #>              Cz         Ixx         Iyy         Izz           Ixy           Ixz #> 1    -0.6631918 4250838.375 4135081.317 4387869.582 -36939.709460  -5703.634810 #> 2    -2.0480047 2585081.273 2468902.684 2586058.073 -85117.550036 -37973.213859 #> 3     1.2955683 1663292.931 1659055.029 1795672.212  50176.630947  29218.383462 #> 4     2.5048850  320437.392  303359.222  307896.116  11813.853322  12051.383899 #> 5    -7.3675365  604189.223  568712.379  580609.901   2170.787077 -48654.518927 #> 6    -2.6674182  872296.759  815356.633  860561.985 -60933.818719   5139.944339 #> 7     0.5924761  782574.671  774764.842  833089.037 -38926.964140  -7496.647811 #> 8    -2.6720265  575753.163  594699.798  658365.102  -8094.274698  16633.878856 #> 9    -4.3577724  302641.248  282354.062  273741.595   3625.317732   6155.095729 #> 10    6.6687862  770796.067  751263.469  831661.198  60921.950943  12117.654302 #> 11    4.2506333  151242.291  151681.439  140003.007  -9285.981270  11631.081600 #> 12    0.4996586  163041.130  143884.885  154262.950  14334.201792   1519.832868 #> 13   -8.7423181  255264.690  233424.833  236512.404 -11454.292573 -37583.693877 #> 14    1.0825770  134251.664  108878.512  127953.741  -4491.039961  -8773.562504 #> 15  -10.7464962  211601.360  221873.089  212043.694  16207.560493  -1864.143042 #> 16   -0.2197146  126503.158  130821.452  139832.798 -27330.473253  10213.740909 #> 17   -1.9188334  145089.535  116755.199  132187.503 -11581.111520  -1088.805810 #> 18   -8.7607161  201630.697  204023.208  213195.563 -18665.528651  12743.392992 #> 19   -3.9374914  224389.998  198755.692  188721.426 -13754.623083  -3597.508026 #> 20    3.6598721  168849.350  152364.811  172480.750  10479.313700 -12953.599506 #> 21  -19.4235427  112296.219   99628.241  119189.416  -8967.033710 -17431.198538 #> 22   11.4779120  117592.469  131659.484  128036.987  -9033.019787  16001.475802 #> 23   -6.1146799  148774.141  138236.828  178429.755 -10292.287770  -4473.094373 #> 24   10.3500735  171140.859  189129.265  181772.947   2690.691116  -4928.296237 #> 25    0.1932782  216801.699  193574.314  211705.406 -17153.402260    625.542397 #> 26   -3.1579625  135100.032  143906.096  144737.897  11700.687810  14145.752255 #> 27   -1.6034710  178572.190  175405.603  195466.281 -22254.105018   6406.179276 #> 28   -5.7969012   96462.742   96314.603  119650.334   8648.899165   3211.032970 #> 29   -1.1210201  156476.577  167898.906  178778.096  -2639.826917  -6387.783054 #> 30  -10.6351375   87544.807   61464.871   67216.864  10928.233973  -9715.006440 #> 31   -8.5817965  153686.230  155943.843  138841.509  -9668.028348  10857.760966 #> 32   14.9983160   56514.549   57897.933   64554.353   1994.625620   2091.310085 #> 33    7.6261517  155060.550  172731.489  188449.966  -1180.988326  17992.792399 #> 34   -4.6150983  127797.972  130060.541  141189.756   6231.140992  13234.782556 #> 35    0.3587986  236295.355  218763.167  244473.953  29748.102177  -4158.053892 #> 36   25.1766073  133656.236  110567.391  129817.974  14334.394723 -12586.763500 #> 37   14.4091662  102298.616   95136.554  111067.089   6838.233228 -11576.735706 #> 38   -0.3965443   61834.025   78096.997   59572.314  -6527.375078   5395.749384 #> 39    5.6741907   49631.511   48157.705   52108.300   2032.938393   5822.375498 #> 40   10.6821450   34930.904   24789.140   23750.830  -4190.930886    143.800354 #> 41   -4.5443538   76113.709   70474.499   66815.560   8525.678965   9172.832441 #> 42   -3.7039578   16234.087   11931.258   13228.985   -901.438499   -407.744745 #> 43    7.1249663   64299.822   57868.559   65554.321  10793.905985  -6498.123577 #> 44   -0.5215488   25802.120   21426.183   20321.800   7007.142526  -8871.985596 #> 45  -54.2308989   40699.790   28969.192   53216.236   -389.798051  -1967.363656 #> 46   37.2370833   49016.692   53801.316   62102.617 -23667.847151  -8481.410757 #> 47  -30.4156955   26666.256   25282.456   32825.749   9625.752669  -4211.658416 #> 48   -4.2842623   70244.016   67873.034   57809.930  -1798.097754 -16692.198404 #> 49   -0.8658027   67978.979   68562.962   71543.024   5597.424174  -1450.476777 #> 50   14.7472978   11710.319    9451.792    5392.489  -1154.000314   1549.644821 #> 51   -0.7147679   44702.677   29798.364   41047.611  -8224.070232  -8803.942028 #> 52   -1.2035096   68716.185   77494.203   69998.249    682.943523   5380.366191 #> 53    6.1837950   45539.575   37747.562   31778.429   -894.227254  -2205.055746 #> 54  -27.1208730   32001.064   36022.283   33397.266   1286.265320   6640.073682 #> 55  -39.8514468   13767.543    8518.348   19751.283   4102.708394   -805.436120 #> 56  -12.4309214   40413.313   39053.718   37819.265  11438.911688 -16568.649985 #> 57   23.7129294   17914.728   18011.833   14498.468  -2522.745587   1951.342447 #> 58    4.8240934   47107.418   34826.432   42046.974  -7820.613126  -1357.170670 #> 59  -12.0566515   27245.653   31664.948   31844.969  -1038.517625   2406.528967 #> 60  -16.8613960   22398.262   15926.045   17986.742  -3034.105592  -1014.837352 #> 61  -19.4565775   29306.978   36823.491   31638.809  -2419.138856   2246.198531 #> 62  -40.1297937   28681.447   21415.051   31652.751    -54.270761    445.738104 #> 63   61.5224118   15104.515   15808.218   22972.538 -10930.207774  -5434.176365 #> 64   15.3692288   33413.069   16065.064   33156.425   1435.964390      5.324233 #> 65  -11.2910109   33212.756   30248.221   38324.342  -3278.078554   4005.081612 #> 66   -6.5829677   41566.285   42422.412   35744.647 -15428.427820  14420.904167 #> 67  -25.6112022   58658.860   58143.425   73887.573    902.270630  -3914.190103 #> 68   11.3914814   57244.740   60986.944   54086.293    895.060402  -7231.069433 #> 69   12.9315467   47300.076   31742.958   30558.384  -1786.847202  -2448.104881 #> 70  -12.8107747   46172.406   38476.417   26448.545   2420.608542  -3046.753699 #> 71  -14.6217761   47118.477   53262.518   54675.749  -2701.579069   8297.293608 #> 72  -13.8553414   15442.545   17479.214   16522.048  -6762.218355   3692.859012 #> 73    4.8308673   60274.209   47475.963   50518.431  -6085.886006  -7223.677186 #> 74   -2.0005279   77651.725   77646.268   80275.007   8934.508771  -4972.858909 #> 75   37.1182973   42881.466   37620.311   60396.135   5854.943852     25.532832 #> 76  -40.3704964   25251.230   18641.583   24976.286  -3965.704286  -5323.966652 #> 77  -14.9787214   62055.788   64431.582   66092.586  -4340.703949 -14732.151880 #> 78  -25.0201270   43839.614   34181.196   46424.094  -6596.315421  -3188.236242 #> 79    6.0089634   56366.616   73013.899   73292.893   4326.703575   6202.775527 #> 80   -6.6518134   21565.271   17640.749   16774.955  -5840.353150  -1552.799161 #> 81   29.5530054   35334.222   34382.839   35039.624  -7829.141811   8184.825631 #> 82    5.1629471   23808.615   28243.470   25468.843  -3420.554833    255.728694 #> 83  -15.0253938   52783.679   36955.981   50019.347 -10080.945732  -2256.741058 #> 84   -2.6368738   29670.714   24878.994   43039.411   7089.265059   1044.390584 #> 85  -28.3844982   21048.263   25036.480   34783.807   3886.212091    652.602147 #> 86   29.3807428    9464.371    6539.682   10930.743  -3557.958442     42.081181 #> 87    6.2163752   45781.230   52451.069   39868.536   4925.106466   7244.622250 #> 88   34.2572689   10816.878   15469.580    9007.646  -1830.707816  -5213.195232 #> 89   29.3326880   43159.704   47347.169   56508.271 -10980.918893   7969.294805 #> 90  -15.5143314   58130.546   53587.890   65122.796   7776.752360  -4968.301893 #> 91   -3.5262336   22338.766   23560.611   25873.052  -1021.125862  -1676.779659 #> 92   15.3859078   66431.623   66080.346   70565.742  10716.377438  10761.397161 #> 93   -8.3642779   54194.688   38445.743   55862.916  -7242.065427 -11406.215778 #> 94   -5.7882373   67911.593   56173.629   50215.057 -15453.446121   6098.142511 #> 95  -20.3015564   14710.870   20161.217   26662.473   6130.319712  -5113.091626 #> 96  -26.1093416   23748.472   21334.617   21342.264  -3171.608511   1197.094654 #> 97   -9.5517007   24221.324   29050.641   24663.905     -2.231148   7765.307764 #> 98   17.0838864   14448.750   21804.422   19776.953   4805.199488    125.128676 #> 99   22.4133365   43518.472   38061.765   41974.243   4664.189190   5481.732378 #> 100  13.1399591   16230.774   23189.151   24322.460  -2317.667232  -8094.085645 #>               Iyz Ipoint sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx #> 1   -41942.778890  FALSE         NA       NA       NA       NA        NA #> 2   -24491.138285  FALSE         NA       NA       NA       NA        NA #> 3   -18581.162253  FALSE         NA       NA       NA       NA        NA #> 4    -7007.889017  FALSE         NA       NA       NA       NA        NA #> 5   -26282.536240  FALSE         NA       NA       NA       NA        NA #> 6     7778.840431  FALSE         NA       NA       NA       NA        NA #> 7     3282.213215  FALSE         NA       NA       NA       NA        NA #> 8   -30339.749388  FALSE         NA       NA       NA       NA        NA #> 9    -5803.382726  FALSE         NA       NA       NA       NA        NA #> 10   24588.805516  FALSE         NA       NA       NA       NA        NA #> 11   -3665.048708  FALSE         NA       NA       NA       NA        NA #> 12   -4317.230079  FALSE         NA       NA       NA       NA        NA #> 13  -15618.080046  FALSE         NA       NA       NA       NA        NA #> 14  -12660.695787  FALSE         NA       NA       NA       NA        NA #> 15    1819.449055  FALSE         NA       NA       NA       NA        NA #> 16   -8358.576150  FALSE         NA       NA       NA       NA        NA #> 17   -2664.522232  FALSE         NA       NA       NA       NA        NA #> 18    6524.161885  FALSE         NA       NA       NA       NA        NA #> 19    8522.567433  FALSE         NA       NA       NA       NA        NA #> 20    2207.661280  FALSE         NA       NA       NA       NA        NA #> 21   -9165.972965  FALSE         NA       NA       NA       NA        NA #> 22   16261.755436  FALSE         NA       NA       NA       NA        NA #> 23   -3840.001909  FALSE         NA       NA       NA       NA        NA #> 24   21945.766469  FALSE         NA       NA       NA       NA        NA #> 25  -18281.983865  FALSE         NA       NA       NA       NA        NA #> 26       5.303518  FALSE         NA       NA       NA       NA        NA #> 27   -9853.100892  FALSE         NA       NA       NA       NA        NA #> 28    3122.748235  FALSE         NA       NA       NA       NA        NA #> 29  -22770.952906  FALSE         NA       NA       NA       NA        NA #> 30   15205.337279  FALSE         NA       NA       NA       NA        NA #> 31  -16077.685964  FALSE         NA       NA       NA       NA        NA #> 32   -5237.531391  FALSE         NA       NA       NA       NA        NA #> 33    6516.436175  FALSE         NA       NA       NA       NA        NA #> 34   -8520.729962  FALSE         NA       NA       NA       NA        NA #> 35    9962.012056  FALSE         NA       NA       NA       NA        NA #> 36   11234.043728  FALSE         NA       NA       NA       NA        NA #> 37    9468.427630  FALSE         NA       NA       NA       NA        NA #> 38   -3519.950456  FALSE         NA       NA       NA       NA        NA #> 39    4559.129833  FALSE         NA       NA       NA       NA        NA #> 40   -5964.771263  FALSE         NA       NA       NA       NA        NA #> 41    2156.088143  FALSE         NA       NA       NA       NA        NA #> 42   -5010.271328  FALSE         NA       NA       NA       NA        NA #> 43    -267.974948  FALSE         NA       NA       NA       NA        NA #> 44    5154.870321  FALSE         NA       NA       NA       NA        NA #> 45   -3477.048727  FALSE         NA       NA       NA       NA        NA #> 46  -13859.423581  FALSE         NA       NA       NA       NA        NA #> 47    5127.483013  FALSE         NA       NA       NA       NA        NA #> 48   -2711.865923  FALSE         NA       NA       NA       NA        NA #> 49   -2070.208823  FALSE         NA       NA       NA       NA        NA #> 50    -991.987274  FALSE         NA       NA       NA       NA        NA #> 51  -11515.303437  FALSE         NA       NA       NA       NA        NA #> 52  -11916.268826  FALSE         NA       NA       NA       NA        NA #> 53    4523.028756  FALSE         NA       NA       NA       NA        NA #> 54   -4774.940657  FALSE         NA       NA       NA       NA        NA #> 55     295.936924  FALSE         NA       NA       NA       NA        NA #> 56    9609.927691  FALSE         NA       NA       NA       NA        NA #> 57   -3248.312482  FALSE         NA       NA       NA       NA        NA #> 58    -342.568165  FALSE         NA       NA       NA       NA        NA #> 59   -3073.149111  FALSE         NA       NA       NA       NA        NA #> 60   -6695.678659  FALSE         NA       NA       NA       NA        NA #> 61    -131.506377  FALSE         NA       NA       NA       NA        NA #> 62    3742.217686  FALSE         NA       NA       NA       NA        NA #> 63   -5155.417997  FALSE         NA       NA       NA       NA        NA #> 64    3015.467649  FALSE         NA       NA       NA       NA        NA #> 65   -2656.345652  FALSE         NA       NA       NA       NA        NA #> 66   12337.712023  FALSE         NA       NA       NA       NA        NA #> 67   11840.405547  FALSE         NA       NA       NA       NA        NA #> 68  -14301.486339  FALSE         NA       NA       NA       NA        NA #> 69   12811.505498  FALSE         NA       NA       NA       NA        NA #> 70    -847.222299  FALSE         NA       NA       NA       NA        NA #> 71   -1158.885711  FALSE         NA       NA       NA       NA        NA #> 72    1007.568218  FALSE         NA       NA       NA       NA        NA #> 73   -3585.739955  FALSE         NA       NA       NA       NA        NA #> 74   10782.268288  FALSE         NA       NA       NA       NA        NA #> 75    6936.382566  FALSE         NA       NA       NA       NA        NA #> 76   -6866.109439  FALSE         NA       NA       NA       NA        NA #> 77   -1595.625647  FALSE         NA       NA       NA       NA        NA #> 78   -6073.206514  FALSE         NA       NA       NA       NA        NA #> 79    1578.772095  FALSE         NA       NA       NA       NA        NA #> 80    5635.594394  FALSE         NA       NA       NA       NA        NA #> 81    9203.878220  FALSE         NA       NA       NA       NA        NA #> 82   -3168.856714  FALSE         NA       NA       NA       NA        NA #> 83    -940.782920  FALSE         NA       NA       NA       NA        NA #> 84    2868.150821  FALSE         NA       NA       NA       NA        NA #> 85    2829.401355  FALSE         NA       NA       NA       NA        NA #> 86   -1027.319079  FALSE         NA       NA       NA       NA        NA #> 87    1654.211542  FALSE         NA       NA       NA       NA        NA #> 88     -55.162112  FALSE         NA       NA       NA       NA        NA #> 89    2941.045792  FALSE         NA       NA       NA       NA        NA #> 90   14461.092328  FALSE         NA       NA       NA       NA        NA #> 91    2797.328702  FALSE         NA       NA       NA       NA        NA #> 92  -20852.971541  FALSE         NA       NA       NA       NA        NA #> 93   -4273.136308  FALSE         NA       NA       NA       NA        NA #> 94    6580.012003  FALSE         NA       NA       NA       NA        NA #> 95    1467.005707  FALSE         NA       NA       NA       NA        NA #> 96    3473.574464  FALSE         NA       NA       NA       NA        NA #> 97   -3901.398540  FALSE         NA       NA       NA       NA        NA #> 98   -1665.416137  FALSE         NA       NA       NA       NA        NA #> 99     803.880061  FALSE         NA       NA       NA       NA        NA #> 100  -2867.232937  FALSE         NA       NA       NA       NA        NA #>     sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz #> 1          NA        NA        NA        NA        NA #> 2          NA        NA        NA        NA        NA #> 3          NA        NA        NA        NA        NA #> 4          NA        NA        NA        NA        NA #> 5          NA        NA        NA        NA        NA #> 6          NA        NA        NA        NA        NA #> 7          NA        NA        NA        NA        NA #> 8          NA        NA        NA        NA        NA #> 9          NA        NA        NA        NA        NA #> 10         NA        NA        NA        NA        NA #> 11         NA        NA        NA        NA        NA #> 12         NA        NA        NA        NA        NA #> 13         NA        NA        NA        NA        NA #> 14         NA        NA        NA        NA        NA #> 15         NA        NA        NA        NA        NA #> 16         NA        NA        NA        NA        NA #> 17         NA        NA        NA        NA        NA #> 18         NA        NA        NA        NA        NA #> 19         NA        NA        NA        NA        NA #> 20         NA        NA        NA        NA        NA #> 21         NA        NA        NA        NA        NA #> 22         NA        NA        NA        NA        NA #> 23         NA        NA        NA        NA        NA #> 24         NA        NA        NA        NA        NA #> 25         NA        NA        NA        NA        NA #> 26         NA        NA        NA        NA        NA #> 27         NA        NA        NA        NA        NA #> 28         NA        NA        NA        NA        NA #> 29         NA        NA        NA        NA        NA #> 30         NA        NA        NA        NA        NA #> 31         NA        NA        NA        NA        NA #> 32         NA        NA        NA        NA        NA #> 33         NA        NA        NA        NA        NA #> 34         NA        NA        NA        NA        NA #> 35         NA        NA        NA        NA        NA #> 36         NA        NA        NA        NA        NA #> 37         NA        NA        NA        NA        NA #> 38         NA        NA        NA        NA        NA #> 39         NA        NA        NA        NA        NA #> 40         NA        NA        NA        NA        NA #> 41         NA        NA        NA        NA        NA #> 42         NA        NA        NA        NA        NA #> 43         NA        NA        NA        NA        NA #> 44         NA        NA        NA        NA        NA #> 45         NA        NA        NA        NA        NA #> 46         NA        NA        NA        NA        NA #> 47         NA        NA        NA        NA        NA #> 48         NA        NA        NA        NA        NA #> 49         NA        NA        NA        NA        NA #> 50         NA        NA        NA        NA        NA #> 51         NA        NA        NA        NA        NA #> 52         NA        NA        NA        NA        NA #> 53         NA        NA        NA        NA        NA #> 54         NA        NA        NA        NA        NA #> 55         NA        NA        NA        NA        NA #> 56         NA        NA        NA        NA        NA #> 57         NA        NA        NA        NA        NA #> 58         NA        NA        NA        NA        NA #> 59         NA        NA        NA        NA        NA #> 60         NA        NA        NA        NA        NA #> 61         NA        NA        NA        NA        NA #> 62         NA        NA        NA        NA        NA #> 63         NA        NA        NA        NA        NA #> 64         NA        NA        NA        NA        NA #> 65         NA        NA        NA        NA        NA #> 66         NA        NA        NA        NA        NA #> 67         NA        NA        NA        NA        NA #> 68         NA        NA        NA        NA        NA #> 69         NA        NA        NA        NA        NA #> 70         NA        NA        NA        NA        NA #> 71         NA        NA        NA        NA        NA #> 72         NA        NA        NA        NA        NA #> 73         NA        NA        NA        NA        NA #> 74         NA        NA        NA        NA        NA #> 75         NA        NA        NA        NA        NA #> 76         NA        NA        NA        NA        NA #> 77         NA        NA        NA        NA        NA #> 78         NA        NA        NA        NA        NA #> 79         NA        NA        NA        NA        NA #> 80         NA        NA        NA        NA        NA #> 81         NA        NA        NA        NA        NA #> 82         NA        NA        NA        NA        NA #> 83         NA        NA        NA        NA        NA #> 84         NA        NA        NA        NA        NA #> 85         NA        NA        NA        NA        NA #> 86         NA        NA        NA        NA        NA #> 87         NA        NA        NA        NA        NA #> 88         NA        NA        NA        NA        NA #> 89         NA        NA        NA        NA        NA #> 90         NA        NA        NA        NA        NA #> 91         NA        NA        NA        NA        NA #> 92         NA        NA        NA        NA        NA #> 93         NA        NA        NA        NA        NA #> 94         NA        NA        NA        NA        NA #> 95         NA        NA        NA        NA        NA #> 96         NA        NA        NA        NA        NA #> 97         NA        NA        NA        NA        NA #> 98         NA        NA        NA        NA        NA #> 99         NA        NA        NA        NA        NA #> 100        NA        NA        NA        NA        NA"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","title":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","text":"'rollup_mass_props_and_unc()' rolls mass properties data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz. difference rollup_mass_props_unc() rollup_mass_props_and_unc() rollup_mass_props_unc() expects mass properties input rolled , whereas rollup_mass_props_and_unc() performs mass properties rollup .","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","text":"","code":"rollup_mass_props_and_unc(   tree,   df,   validate_df = validate_mass_props_and_unc_table,   ... )"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint. validate_df validator tree table, default validate_mass_props_and_unc_table() ... parameters passed rollupTree::rollup()","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","text":"","code":"rollup_mass_props_and_unc(mp_tree, mp_table)[1:100, ] #>              id         name POIconv       mass          Cx           Cy #> 1           C.1     System 1       - 635.660192   0.3318148   1.36614630 #> 2         C.1.1    Segment 1       - 372.387816   2.7823660   2.27331548 #> 3         C.1.2    Segment 2       - 263.272375  -3.1343878   0.08299326 #> 4       C.1.1.1    Element 1       -  45.236245   0.6449576   3.40672797 #> 5       C.1.1.2    Element 2       -  83.911615   1.7979454  -0.58033620 #> 6       C.1.1.3    Element 3       - 123.272571   6.4136420   1.63215491 #> 7       C.1.1.4    Element 4       - 119.967384   0.5455573   4.50076013 #> 8       C.1.2.1    Element 5       -  97.128572   2.2245377  -4.18310553 #> 9       C.1.2.2    Element 6       -  46.012547 -23.9286608  -6.13818202 #> 10      C.1.2.3    Element 7       - 120.131257   0.4974119   5.91504913 #> 11    C.1.1.1.1  Subsystem 1       -  24.182758  12.7664845  -7.33521244 #> 12    C.1.1.1.2  Subsystem 2       -  21.053487 -13.2782447  15.74528976 #> 13    C.1.1.2.1  Subsystem 3       -  32.614045  -5.4164053   4.35058525 #> 14    C.1.1.2.2  Subsystem 4       -  18.443508   5.9446314  -2.86799230 #> 15    C.1.1.2.3  Subsystem 5       -  32.854062   6.6317379  -4.19099753 #> 16    C.1.1.3.1  Subsystem 6       -  18.809672 -11.5693537   4.60172214 #> 17    C.1.1.3.2  Subsystem 7       -  21.309572   3.7950516  -3.76444320 #> 18    C.1.1.3.3  Subsystem 8       -  28.107067   3.8710126   2.64280855 #> 19    C.1.1.3.4  Subsystem 9       -  31.461107  16.1782715   8.40798505 #> 20    C.1.1.3.5 Subsystem 10       -  23.585154  13.1261314  -6.10317776 #> 21    C.1.1.4.1 Subsystem 11       -  14.945121  10.1956219   2.09268188 #> 22    C.1.1.4.2 Subsystem 12       -  20.623094 -14.8515213  16.29220017 #> 23    C.1.1.4.3 Subsystem 13       -  27.123877  -2.3767554   2.44839217 #> 24    C.1.1.4.4 Subsystem 14       -  27.512486  12.0096670   3.91406747 #> 25    C.1.1.4.5 Subsystem 15       -  29.762807  -1.5653890  -0.04778306 #> 26    C.1.2.1.1 Subsystem 16       -  22.161742  17.0733845  -8.78939395 #> 27    C.1.2.1.2 Subsystem 17       -  29.542394  -4.0320250 -10.63513308 #> 28    C.1.2.1.3 Subsystem 18       -  19.515486 -12.2676108 -10.14297124 #> 29    C.1.2.1.4 Subsystem 19       -  25.908950   7.5732239  11.60299863 #> 30    C.1.2.2.1 Subsystem 20       -  12.256125 -25.7562192  -0.82404359 #> 31    C.1.2.2.2 Subsystem 21       -  24.446707 -17.8654251  -8.50267866 #> 32    C.1.2.2.3 Subsystem 22       -   9.309714 -37.4443673  -6.92516492 #> 33    C.1.2.3.1 Subsystem 23       -  26.125954   2.3614452   7.99620979 #> 34    C.1.2.3.2 Subsystem 24       -  23.382905  18.2483930  -4.68014506 #> 35    C.1.2.3.3 Subsystem 25       -  35.450403  -3.5173534   6.67001106 #> 36    C.1.2.3.4 Subsystem 26       -  17.672250 -15.1876417   6.45654603 #> 37    C.1.2.3.5 Subsystem 27       -  17.499745  -2.0314207  14.88894819 #> 38  C.1.1.1.1.1   Assembly 1       -  10.071268  15.0192256   8.60615091 #> 39  C.1.1.1.1.2   Assembly 2       -   8.777087  13.1715220 -19.12305251 #> 40  C.1.1.1.1.3   Assembly 3       -   5.334404   7.8469082 -18.03684651 #> 41  C.1.1.1.2.1   Assembly 4       -   8.530216 -27.0839975  -3.93222778 #> 42  C.1.1.1.2.2   Assembly 5       -   3.688640   2.4216967  34.86365323 #> 43  C.1.1.1.2.3   Assembly 6       -   8.834630  -6.5032449  26.76246960 #> 44  C.1.1.2.1.1   Assembly 7       -   3.187103 -20.7902569  -4.91562419 #> 45  C.1.1.2.1.2   Assembly 8       -   7.704628   1.5556086  -1.75343697 #> 46  C.1.1.2.1.3   Assembly 9       -   7.711519  -2.3777753  23.38481702 #> 47  C.1.1.2.1.4  Assembly 10       -   3.549741   2.6316091  31.09013760 #> 48  C.1.1.2.1.5  Assembly 11       -  10.461054 -10.8383769 -11.43556170 #> 49  C.1.1.2.2.1  Assembly 12       -  10.286039  10.1654142  12.63895967 #> 50  C.1.1.2.2.2  Assembly 13       -   2.244389   8.1157966 -57.40848164 #> 51  C.1.1.2.2.3  Assembly 14       -   5.913080  -2.2216845  -9.14137684 #> 52  C.1.1.2.3.1  Assembly 15       -  10.677102  14.8893352 -11.06192763 #> 53  C.1.1.2.3.2  Assembly 16       -   6.552370 -10.5711516 -13.20642056 #> 54  C.1.1.2.3.3  Assembly 17       -   6.344582   1.6405611  16.22198529 #> 55  C.1.1.2.3.4  Assembly 18       -   3.402740  60.7702477  -1.44767560 #> 56  C.1.1.2.3.5  Assembly 19       -   5.877267 -15.1470616  -5.28209204 #> 57  C.1.1.3.1.1  Assembly 20       -   4.293059 -39.5750239 -13.48623549 #> 58  C.1.1.3.1.2  Assembly 21       -   5.084983 -43.6312526 -15.82460462 #> 59  C.1.1.3.1.3  Assembly 22       -   5.945426  -5.0634332  18.67393164 #> 60  C.1.1.3.1.4  Assembly 23       -   3.486204  58.5882609  32.67091018 #> 61  C.1.1.3.2.1  Assembly 24       -   6.550015   9.1370077 -28.74205708 #> 62  C.1.1.3.2.2  Assembly 25       -   5.517889   4.5710202  19.45615975 #> 63  C.1.1.3.2.3  Assembly 26       -   3.595544   2.6384819  29.67219507 #> 64  C.1.1.3.2.4  Assembly 27       -   5.646124  -2.4239229 -18.77436158 #> 65  C.1.1.3.3.1  Assembly 28       -   5.516820  11.9159764   7.58302926 #> 66  C.1.1.3.3.2  Assembly 29       -   5.098215 -11.9097042 -24.95358705 #> 67  C.1.1.3.3.3  Assembly 30       -   9.449215  20.7511141   6.11645689 #> 68  C.1.1.3.3.4  Assembly 31       -   8.042816 -11.4759551  12.66601430 #> 69  C.1.1.3.4.1  Assembly 32       -   6.584066  39.3645423   3.15413640 #> 70  C.1.1.3.4.2  Assembly 33       -   5.508303  20.4291943  24.53406983 #> 71  C.1.1.3.4.3  Assembly 34       -   9.267718  11.8847755  -4.54399695 #> 72  C.1.1.3.4.4  Assembly 35       -   2.768917  -8.3967033  23.54252209 #> 73  C.1.1.3.4.5  Assembly 36       -   7.332103   6.8714831  11.66671923 #> 74  C.1.1.3.5.1  Assembly 37       -  11.593170  17.6646845 -16.62616230 #> 75  C.1.1.3.5.2  Assembly 38       -   7.660895  14.2436968  16.34470506 #> 76  C.1.1.3.5.3  Assembly 39       -   4.331090  -0.9991273 -17.64210148 #> 77  C.1.1.4.1.1  Assembly 40       -   8.329673   4.3469841  19.99215163 #> 78  C.1.1.4.1.2  Assembly 41       -   6.615447  17.5597862 -20.44498292 #> 79  C.1.1.4.2.1  Assembly 42       -   9.221147 -12.9516146  20.11827066 #> 80  C.1.1.4.2.2  Assembly 43       -   4.299463   2.8420127   9.95060449 #> 81  C.1.1.4.2.3  Assembly 44       -   7.102484 -28.0288847  15.16367932 #> 82  C.1.1.4.3.1  Assembly 45       -   4.385272  18.5433795  21.95942075 #> 83  C.1.1.4.3.2  Assembly 46       -   8.071459 -29.7075256  -5.36804768 #> 84  C.1.1.4.3.3  Assembly 47       -   7.148714   9.8136441  11.05020999 #> 85  C.1.1.4.3.4  Assembly 48       -   4.661363  -0.2492873 -18.49730016 #> 86  C.1.1.4.3.5  Assembly 49       -   2.857069   8.7521744   7.23387426 #> 87  C.1.1.4.4.1  Assembly 50       -   6.546347   3.1826705   8.23007957 #> 88  C.1.1.4.4.2  Assembly 51       -   3.715625  34.3777783  11.62050300 #> 89  C.1.1.4.4.3  Assembly 52       -   8.571466  30.4272946  -9.05073687 #> 90  C.1.1.4.4.4  Assembly 53       -   8.679047  -9.0978350  10.16349146 #> 91  C.1.1.4.5.1  Assembly 54       -   4.531672 -27.1616577 -14.73715705 #> 92  C.1.1.4.5.2  Assembly 55       -   8.946426  15.5077442  13.44912404 #> 93  C.1.1.4.5.3  Assembly 56       -   8.407049  -9.8383532  -5.91352500 #> 94  C.1.1.4.5.4  Assembly 57       -   7.877659   2.5984849  -0.66574356 #> 95  C.1.2.1.1.1  Assembly 58       -   3.595711  25.4843378  16.03742296 #> 96  C.1.2.1.1.2  Assembly 59       -   4.942294  26.2242739 -11.55394742 #> 97  C.1.2.1.1.3  Assembly 60       -   4.914863  28.1045404 -28.36321162 #> 98  C.1.2.1.1.4  Assembly 61       -   3.039161 -15.6364131 -24.06411319 #> 99  C.1.2.1.1.5  Assembly 62       -   5.669714  11.7334329   3.03098042 #> 100 C.1.2.1.2.1  Assembly 63       -   4.323378 -40.3180149  20.93528200 #>              Cz         Ixx         Iyy         Izz           Ixy           Ixz #> 1    -0.6631918 4250838.375 4135081.317 4387869.582 -36939.709460  -5703.634810 #> 2    -2.0480047 2585081.273 2468902.684 2586058.073 -85117.550036 -37973.213859 #> 3     1.2955683 1663292.931 1659055.029 1795672.212  50176.630947  29218.383462 #> 4     2.5048850  320437.392  303359.222  307896.116  11813.853322  12051.383899 #> 5    -7.3675365  604189.223  568712.379  580609.901   2170.787077 -48654.518927 #> 6    -2.6674182  872296.759  815356.633  860561.985 -60933.818719   5139.944339 #> 7     0.5924761  782574.671  774764.842  833089.037 -38926.964140  -7496.647811 #> 8    -2.6720265  575753.163  594699.798  658365.102  -8094.274698  16633.878856 #> 9    -4.3577724  302641.248  282354.062  273741.595   3625.317732   6155.095729 #> 10    6.6687862  770796.067  751263.469  831661.198  60921.950943  12117.654302 #> 11    4.2506333  151242.291  151681.439  140003.007  -9285.981270  11631.081600 #> 12    0.4996586  163041.130  143884.885  154262.950  14334.201792   1519.832868 #> 13   -8.7423181  255264.690  233424.833  236512.404 -11454.292573 -37583.693877 #> 14    1.0825770  134251.664  108878.512  127953.741  -4491.039961  -8773.562504 #> 15  -10.7464962  211601.360  221873.089  212043.694  16207.560493  -1864.143042 #> 16   -0.2197146  126503.158  130821.452  139832.798 -27330.473253  10213.740909 #> 17   -1.9188334  145089.535  116755.199  132187.503 -11581.111520  -1088.805810 #> 18   -8.7607161  201630.697  204023.208  213195.563 -18665.528651  12743.392992 #> 19   -3.9374914  224389.998  198755.692  188721.426 -13754.623083  -3597.508026 #> 20    3.6598721  168849.350  152364.811  172480.750  10479.313700 -12953.599506 #> 21  -19.4235427  112296.219   99628.241  119189.416  -8967.033710 -17431.198538 #> 22   11.4779120  117592.469  131659.484  128036.987  -9033.019787  16001.475802 #> 23   -6.1146799  148774.141  138236.828  178429.755 -10292.287770  -4473.094373 #> 24   10.3500735  171140.859  189129.265  181772.947   2690.691116  -4928.296237 #> 25    0.1932782  216801.699  193574.314  211705.406 -17153.402260    625.542397 #> 26   -3.1579625  135100.032  143906.096  144737.897  11700.687810  14145.752255 #> 27   -1.6034710  178572.190  175405.603  195466.281 -22254.105018   6406.179276 #> 28   -5.7969012   96462.742   96314.603  119650.334   8648.899165   3211.032970 #> 29   -1.1210201  156476.577  167898.906  178778.096  -2639.826917  -6387.783054 #> 30  -10.6351375   87544.807   61464.871   67216.864  10928.233973  -9715.006440 #> 31   -8.5817965  153686.230  155943.843  138841.509  -9668.028348  10857.760966 #> 32   14.9983160   56514.549   57897.933   64554.353   1994.625620   2091.310085 #> 33    7.6261517  155060.550  172731.489  188449.966  -1180.988326  17992.792399 #> 34   -4.6150983  127797.972  130060.541  141189.756   6231.140992  13234.782556 #> 35    0.3587986  236295.355  218763.167  244473.953  29748.102177  -4158.053892 #> 36   25.1766073  133656.236  110567.391  129817.974  14334.394723 -12586.763500 #> 37   14.4091662  102298.616   95136.554  111067.089   6838.233228 -11576.735706 #> 38   -0.3965443   61834.025   78096.997   59572.314  -6527.375078   5395.749384 #> 39    5.6741907   49631.511   48157.705   52108.300   2032.938393   5822.375498 #> 40   10.6821450   34930.904   24789.140   23750.830  -4190.930886    143.800354 #> 41   -4.5443538   76113.709   70474.499   66815.560   8525.678965   9172.832441 #> 42   -3.7039578   16234.087   11931.258   13228.985   -901.438499   -407.744745 #> 43    7.1249663   64299.822   57868.559   65554.321  10793.905985  -6498.123577 #> 44   -0.5215488   25802.120   21426.183   20321.800   7007.142526  -8871.985596 #> 45  -54.2308989   40699.790   28969.192   53216.236   -389.798051  -1967.363656 #> 46   37.2370833   49016.692   53801.316   62102.617 -23667.847151  -8481.410757 #> 47  -30.4156955   26666.256   25282.456   32825.749   9625.752669  -4211.658416 #> 48   -4.2842623   70244.016   67873.034   57809.930  -1798.097754 -16692.198404 #> 49   -0.8658027   67978.979   68562.962   71543.024   5597.424174  -1450.476777 #> 50   14.7472978   11710.319    9451.792    5392.489  -1154.000314   1549.644821 #> 51   -0.7147679   44702.677   29798.364   41047.611  -8224.070232  -8803.942028 #> 52   -1.2035096   68716.185   77494.203   69998.249    682.943523   5380.366191 #> 53    6.1837950   45539.575   37747.562   31778.429   -894.227254  -2205.055746 #> 54  -27.1208730   32001.064   36022.283   33397.266   1286.265320   6640.073682 #> 55  -39.8514468   13767.543    8518.348   19751.283   4102.708394   -805.436120 #> 56  -12.4309214   40413.313   39053.718   37819.265  11438.911688 -16568.649985 #> 57   23.7129294   17914.728   18011.833   14498.468  -2522.745587   1951.342447 #> 58    4.8240934   47107.418   34826.432   42046.974  -7820.613126  -1357.170670 #> 59  -12.0566515   27245.653   31664.948   31844.969  -1038.517625   2406.528967 #> 60  -16.8613960   22398.262   15926.045   17986.742  -3034.105592  -1014.837352 #> 61  -19.4565775   29306.978   36823.491   31638.809  -2419.138856   2246.198531 #> 62  -40.1297937   28681.447   21415.051   31652.751    -54.270761    445.738104 #> 63   61.5224118   15104.515   15808.218   22972.538 -10930.207774  -5434.176365 #> 64   15.3692288   33413.069   16065.064   33156.425   1435.964390      5.324233 #> 65  -11.2910109   33212.756   30248.221   38324.342  -3278.078554   4005.081612 #> 66   -6.5829677   41566.285   42422.412   35744.647 -15428.427820  14420.904167 #> 67  -25.6112022   58658.860   58143.425   73887.573    902.270630  -3914.190103 #> 68   11.3914814   57244.740   60986.944   54086.293    895.060402  -7231.069433 #> 69   12.9315467   47300.076   31742.958   30558.384  -1786.847202  -2448.104881 #> 70  -12.8107747   46172.406   38476.417   26448.545   2420.608542  -3046.753699 #> 71  -14.6217761   47118.477   53262.518   54675.749  -2701.579069   8297.293608 #> 72  -13.8553414   15442.545   17479.214   16522.048  -6762.218355   3692.859012 #> 73    4.8308673   60274.209   47475.963   50518.431  -6085.886006  -7223.677186 #> 74   -2.0005279   77651.725   77646.268   80275.007   8934.508771  -4972.858909 #> 75   37.1182973   42881.466   37620.311   60396.135   5854.943852     25.532832 #> 76  -40.3704964   25251.230   18641.583   24976.286  -3965.704286  -5323.966652 #> 77  -14.9787214   62055.788   64431.582   66092.586  -4340.703949 -14732.151880 #> 78  -25.0201270   43839.614   34181.196   46424.094  -6596.315421  -3188.236242 #> 79    6.0089634   56366.616   73013.899   73292.893   4326.703575   6202.775527 #> 80   -6.6518134   21565.271   17640.749   16774.955  -5840.353150  -1552.799161 #> 81   29.5530054   35334.222   34382.839   35039.624  -7829.141811   8184.825631 #> 82    5.1629471   23808.615   28243.470   25468.843  -3420.554833    255.728694 #> 83  -15.0253938   52783.679   36955.981   50019.347 -10080.945732  -2256.741058 #> 84   -2.6368738   29670.714   24878.994   43039.411   7089.265059   1044.390584 #> 85  -28.3844982   21048.263   25036.480   34783.807   3886.212091    652.602147 #> 86   29.3807428    9464.371    6539.682   10930.743  -3557.958442     42.081181 #> 87    6.2163752   45781.230   52451.069   39868.536   4925.106466   7244.622250 #> 88   34.2572689   10816.878   15469.580    9007.646  -1830.707816  -5213.195232 #> 89   29.3326880   43159.704   47347.169   56508.271 -10980.918893   7969.294805 #> 90  -15.5143314   58130.546   53587.890   65122.796   7776.752360  -4968.301893 #> 91   -3.5262336   22338.766   23560.611   25873.052  -1021.125862  -1676.779659 #> 92   15.3859078   66431.623   66080.346   70565.742  10716.377438  10761.397161 #> 93   -8.3642779   54194.688   38445.743   55862.916  -7242.065427 -11406.215778 #> 94   -5.7882373   67911.593   56173.629   50215.057 -15453.446121   6098.142511 #> 95  -20.3015564   14710.870   20161.217   26662.473   6130.319712  -5113.091626 #> 96  -26.1093416   23748.472   21334.617   21342.264  -3171.608511   1197.094654 #> 97   -9.5517007   24221.324   29050.641   24663.905     -2.231148   7765.307764 #> 98   17.0838864   14448.750   21804.422   19776.953   4805.199488    125.128676 #> 99   22.4133365   43518.472   38061.765   41974.243   4664.189190   5481.732378 #> 100  13.1399591   16230.774   23189.151   24322.460  -2317.667232  -8094.085645 #>               Iyz Ipoint sigma_mass  sigma_Cx  sigma_Cy  sigma_Cz  sigma_Ixx #> 1   -41942.778890  FALSE 10.2947890  1.381855  1.407531  1.394688 138446.949 #> 2   -24491.138285  FALSE  7.8143089  1.782194  1.841904  1.829756 108001.615 #> 3   -18581.162253  FALSE  6.7021831  2.182675  2.181724  2.153366  86550.515 #> 4    -7007.889017  FALSE  2.6976697  4.984638  5.143223  5.288776  38638.991 #> 5   -26282.536240  FALSE  3.7151052  3.745609  3.845263  3.834822  49136.565 #> 6     7778.840431  FALSE  4.5362470  3.089637  3.254088  3.201888  64307.679 #> 7     3282.213215  FALSE  4.4052761  3.177938  3.239979  3.196096  59947.771 #> 8   -30339.749388  FALSE  3.9231784  3.541110  3.479111  3.491385  49715.156 #> 9    -5803.382726  FALSE  2.9352680  5.176938  5.277841  5.330365  36925.377 #> 10   24588.805516  FALSE  4.5729784  3.231771  3.281807  3.171157  59878.937 #> 11   -3665.048708  FALSE  2.0037787  6.712238  6.835242  7.050809  26174.582 #> 12   -4317.230079  FALSE  1.8061817  7.246186  7.636462  7.967726  27902.839 #> 13  -15618.080046  FALSE  2.3317706  5.999269  6.168735  6.328822  32199.533 #> 14  -12660.695787  FALSE  1.7828752  7.445890  8.410330  7.744262  22518.589 #> 15    1819.449055  FALSE  2.2773249  6.176942  6.038411  6.106111  29257.482 #> 16   -8358.576150  FALSE  1.7828752  8.304336  8.633568  8.088626  25091.882 #> 17   -2664.522232  FALSE  2.0037787  7.313716  7.945855  7.973809  27411.527 #> 18    6524.161885  FALSE  2.2026381  6.679201  6.930867  6.864306  31706.267 #> 19    8522.567433  FALSE  2.2588847  5.775885  6.145021  6.342012  31692.227 #> 20    2207.661280  FALSE  1.8519151  6.886384  7.338415  6.887791  26751.675 #> 21   -9165.972965  FALSE  1.5841262  9.228064 10.152855  9.212524  24044.580 #> 22   16261.755436  FALSE  1.8061817  7.440766  7.351605  7.379150  21990.181 #> 23   -3840.001909  FALSE  2.1835672  6.583193  6.699780  6.371265  25494.629 #> 24   21945.766469  FALSE  2.1253283  6.893469  6.553788  6.744347  27563.923 #> 25  -18281.983865  FALSE  2.0855990  6.128316  6.631502  6.598516  32320.029 #> 26       5.303518  FALSE  1.9827962  7.521495  7.349680  7.674871  24440.473 #> 27   -9853.100892  FALSE  2.1643284  6.316961  6.320899  6.223356  27305.603 #> 28    3122.748235  FALSE  1.7110518  7.850957  7.438876  7.864638  21251.304 #> 29  -22770.952906  FALSE  1.9615892  6.733433  6.726673  6.534697  25180.932 #> 30   15205.337279  FALSE  1.4168855  8.822129 10.293580  9.685666  18663.601 #> 31  -16077.685964  FALSE  2.2215452  7.213945  7.095451  7.561693  27423.226 #> 32   -5237.531391  FALSE  1.2934336 12.459427 12.192670 11.314738  15462.253 #> 33    6516.436175  FALSE  2.1835672  7.340154  6.971327  6.741022  28157.262 #> 34   -8520.729962  FALSE  2.0037787  7.139603  7.170140  6.766174  23640.489 #> 35    9962.012056  FALSE  2.4879692  5.832823  6.355414  5.928080  34261.511 #> 36   11234.043728  FALSE  1.7353233  8.485650  8.543518  8.823966  24680.800 #> 37    9468.427630  FALSE  1.7110518  7.813557  8.057258  7.799337  19305.842 #> 38   -3519.950456  FALSE  1.2270589 10.530046  9.544904 10.717333  14733.483 #> 39    4559.129833  FALSE  1.2606831 11.412357 11.882169 12.389001  17534.265 #> 40   -5964.771263  FALSE  0.9592360 13.305175 15.109247 13.933528  11831.458 #> 41    2156.088143  FALSE  1.1201464 11.424240 11.751281 13.320689  19063.084 #> 42   -5010.271328  FALSE  0.7652056 13.648413 15.119935 15.806349   7052.866 #> 43    -267.974948  FALSE  1.1924869 11.759749 12.304587 12.256069  18320.074 #> 44    5154.870321  FALSE  0.8180392 19.224984 21.158401 22.782221  11750.729 #> 45   -3477.048727  FALSE  1.1568822 12.039248 12.156564  9.709652  11511.653 #> 46  -13859.423581  FALSE  1.0018894 12.649486 12.594879 11.486216  13904.871 #> 47    5127.483013  FALSE  0.8180392 18.872501 20.591145 18.447395  10727.297 #> 48   -2711.865923  FALSE  1.3253750 10.292927 10.022772 11.437673  16689.783 #> 49   -2070.208823  FALSE  1.1924869 10.400848 10.441629 10.233606  15712.797 #> 50    -991.987274  FALSE  0.6467168 17.529379 20.857302 24.275711   6886.867 #> 51  -11515.303437  FALSE  1.1568822 12.822992 15.770028 13.384913  12941.936 #> 52  -11916.268826  FALSE  1.2270589 10.822313 10.369127 10.434195  16266.180 #> 53    4523.028756  FALSE  1.0427995 11.831774 12.601053 14.741998  13239.236 #> 54   -4774.940657  FALSE  1.0018894 12.301856 12.385367 12.886127  10080.195 #> 55     295.936924  FALSE  0.7652056 21.689802 19.528472 14.808837   7058.913 #> 56    9609.927691  FALSE  1.0018894 14.872630 16.238908 15.277496  14749.200 #> 57   -3248.312482  FALSE  0.8180392 16.117895 14.872489 15.207556   7749.041 #> 58    -342.568165  FALSE  0.8180392 14.283946 16.789006 15.120375  13416.572 #> 59   -3073.149111  FALSE  1.0821642 13.443952 14.868565 13.814772  12223.041 #> 60   -6695.678659  FALSE  0.8180392 16.702337 22.098576 21.230613  13265.437 #> 61    -131.506377  FALSE  1.1924869 14.458308 12.291893 15.421516  15031.839 #> 62    3742.217686  FALSE  1.1201464 14.697871 16.756221 14.395299  13048.222 #> 63   -5155.417997  FALSE  0.7084428 17.445192 17.333954 14.294451   7146.378 #> 64    3015.467649  FALSE  0.9145957 12.187637 15.278618 12.745551  11293.534 #> 65   -2656.345652  FALSE  1.0018894 13.972706 15.354498 14.076725  11506.476 #> 66   12337.712023  FALSE  0.8180392 14.435127 14.115629 15.501806  12499.689 #> 67   11840.405547  FALSE  1.2270589 11.693938 12.275090 10.878183  17562.834 #> 68  -14301.486339  FALSE  1.2934336 12.813649 13.287596 14.320008  18753.692 #> 69   12811.505498  FALSE  0.9592360 12.121174 13.099778 13.499410  13861.647 #> 70    -847.222299  FALSE  0.9592360 12.670042 15.013882 16.781315  14816.430 #> 71   -1158.885711  FALSE  1.1924869 10.545662 11.209283 10.317940  16090.063 #> 72    1007.568218  FALSE  0.8180392 21.987821 21.265088 24.161397   8732.200 #> 73   -3585.739955  FALSE  1.0821642 11.794928 12.327523 13.006474  14767.459 #> 74   10782.268288  FALSE  1.2270589  9.950426  9.594029  9.702972  16671.771 #> 75    6936.382566  FALSE  1.1568822 12.410635 14.154518 11.261377  15748.968 #> 76   -6866.109439  FALSE  0.7652056 14.387171 16.174235 13.875835   9426.115 #> 77   -1595.625647  FALSE  1.2270589 13.133393 14.019218 13.230723  19121.508 #> 78   -6073.206514  FALSE  1.0018894 12.598918 13.849975 12.418721  13255.393 #> 79    1578.772095  FALSE  1.1924869 12.008486 11.752165 11.215338  16359.498 #> 80    5635.594394  FALSE  0.8180392 15.318773 15.776656 16.288142   8778.872 #> 81    9203.878220  FALSE  1.0821642 11.377459 11.431763 11.707543  10973.681 #> 82   -3168.856714  FALSE  1.0018894 17.455688 15.378314 16.551863   9201.722 #> 83    -940.782920  FALSE  1.2270589 11.085593 12.733988 12.109048  15519.180 #> 84    2868.150821  FALSE  1.0018894 12.088755 12.619549 10.970111  10348.333 #> 85    2829.401355  FALSE  0.8676616 15.864164 15.040975 12.959421   7788.770 #> 86   -1027.319079  FALSE  0.7084428 20.116213 22.045985 22.078366  10035.809 #> 87    1654.211542  FALSE  1.0018894 13.314084 12.409482 13.593848  12623.643 #> 88     -55.162112  FALSE  0.8180392 15.886376 13.619123 17.241282   6582.330 #> 89    2941.045792  FALSE  1.2270589 13.479632 12.436378 10.944834  13679.904 #> 90   14461.092328  FALSE  1.1568822 11.532989 12.422940 12.499412  17433.626 #> 91    2797.328702  FALSE  0.9145957 16.681963 15.021215 16.645335   8884.561 #> 92  -20852.971541  FALSE  1.1201464 11.325076 12.327011 11.726102  17764.297 #> 93   -4273.136308  FALSE  1.0018894 10.494529 12.021867 10.844709  14192.316 #> 94    6580.012003  FALSE  1.1201464 11.702973 13.613453 14.552346  20477.032 #> 95    1467.005707  FALSE  0.8676616 21.633251 17.846518 18.501033   8160.481 #> 96    3473.574464  FALSE  0.8180392 13.188064 14.612661 13.988076   9024.922 #> 97   -3901.398540  FALSE  0.8676616 14.655820 12.698119 14.695340   8849.428 #> 98   -1665.416137  FALSE  0.9145957 20.393303 20.235563 22.981818   8419.821 #> 99     803.880061  FALSE  0.9592360 15.104858 16.202023 15.855532  15113.793 #> 100  -2867.232937  FALSE  0.8180392 15.246041 14.286192 14.264976   6983.953 #>      sigma_Iyy  sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz #> 1   137009.710 139073.035 64821.460 63906.768 64024.216 #> 2   103675.008 106413.036 49791.550 48317.535 50123.785 #> 3    89376.703  89372.214 41411.674 41722.019 39794.807 #> 4    37230.764  35394.577 16898.628 17683.948 18016.633 #> 5    48814.540  49341.144 23321.341 22902.162 23398.201 #> 6    59394.616  61878.028 28826.884 27561.503 29301.631 #> 7    58473.048  61552.479 28528.641 27011.938 27835.874 #> 8    52835.919  53243.397 25090.214 24823.791 22600.420 #> 9    38145.433  35982.335 16268.575 18063.736 17049.638 #> 10   59901.491  60807.412 27933.383 27546.666 27651.306 #> 11   25990.709  24135.261 11648.880 12377.863 12340.521 #> 12   26001.065  24651.864 11579.898 12231.336 12825.028 #> 13   31432.432  31009.171 14813.681 14988.362 15574.425 #> 14   20353.587  21693.129 10239.135  9843.484 10856.087 #> 15   30974.873  31348.666 14648.712 14055.614 13533.108 #> 16   23585.298  26889.796 12628.435 11017.978 11569.801 #> 17   25573.804  23897.372 10772.949 11482.496 11591.548 #> 18   29929.200  30508.346 14386.601 14177.424 14768.103 #> 19   27843.234  28779.542 12981.406 12470.376 13886.484 #> 20   24184.439  26575.963 12727.372 11592.323 13118.251 #> 21   21460.326  24968.450 11597.270 10381.893 11087.421 #> 22   22585.310  22689.935 10305.491 10307.734 10099.121 #> 23   24393.328  27190.489 12977.100 11434.763 11592.999 #> 24   30129.407  29502.912 13082.245 13298.357 13067.558 #> 25   28887.666  31192.780 14730.324 13427.046 14963.041 #> 26   25660.622  24771.129 11581.874 11775.493 11005.418 #> 27   30154.804  31098.867 14395.250 14118.471 12714.047 #> 28   22575.790  21748.938 10248.031 10693.686  8620.818 #> 29   25676.919  26189.111 12652.706 12249.382 11973.502 #> 30   15193.276  16940.245  7747.883  7035.366  8892.595 #> 31   30079.660  25397.142 10968.544 14186.802 12136.028 #> 32   16824.529  18590.616  8961.091  8126.012  7598.579 #> 33   31224.031  30289.936 13203.630 13501.351 12962.616 #> 34   23908.806  24132.276 11362.995 11351.608 11012.881 #> 35   30727.889  33968.969 15492.821 14389.849 15528.989 #> 36   24496.828  23317.081 10934.029 11144.141 11452.882 #> 37   19410.711  20455.556  9835.921  9331.513  9153.404 #> 38   16828.491  14549.121  6976.982  8217.137  7027.437 #> 39   17112.925  15348.131  7254.852  8118.617  8215.079 #> 40    9834.772  10769.491  5417.159  4371.587  5447.594 #> 41   18492.087  15575.028  7344.754  8497.043  8569.518 #> 42    5729.766   6091.599  2928.888  2601.885  3328.708 #> 43   16906.310  17022.878  7891.701  8125.724  8452.600 #> 44   11347.356   9914.999  4932.979  5124.516  5480.345 #> 45    9861.240  13679.923  6286.843  4415.265  5260.948 #> 46   14498.227  15924.199  7464.783  6763.513  6932.155 #> 47    9383.048  11308.251  5703.399  4500.438  4911.631 #> 48   17932.585  15589.266  7404.420  8361.155  7764.955 #> 49   16305.340  16046.848  7561.804  8076.351  7464.567 #> 50    6173.450   4380.487  2041.620  2506.591  2950.973 #> 51   10267.694  12213.207  5924.253  4939.920  6400.818 #> 52   17567.170  17473.516  8333.429  8003.344  7316.138 #> 53   12113.392   9860.479  4767.953  5583.670  6330.964 #> 54   10471.463  10516.392  5088.909  5283.599  5212.552 #> 55    8131.024  10956.507  4466.789  2493.950  3112.725 #> 56   14087.346  15465.192  7247.356  6510.085  6315.069 #> 57    8817.625   8983.271  3462.570  3162.141  3450.989 #> 58   11151.899  13155.350  6133.905  5639.423  6724.008 #> 59   10785.911  12912.640  5622.486  4978.598  5269.410 #> 60    9640.960  11467.796  5220.079  3491.404  5821.417 #> 61   17832.983  11458.550  4761.200  7557.411  5287.258 #> 62   11238.274  12808.108  5596.668  4699.515  4728.679 #> 63    7121.898   9380.010  4698.545  3308.008  3225.541 #> 64    6928.354  11207.632  4986.397  3401.131  4883.420 #> 65   10191.389  12025.916  5916.096  4748.979  5236.058 #> 66   12575.845  11271.841  5553.567  6025.702  6019.892 #> 67   15898.439  18365.270  8826.166  7410.660  7769.640 #> 68   17750.470  16377.253  7021.108  8426.863  8894.121 #> 69   11651.090  11089.613  4916.974  4969.269  6811.463 #> 70   12489.522  10660.552  4952.691  5275.112  6539.900 #> 71   13520.695  16954.364  7040.899  5980.518  5801.608 #> 72    9178.339   8835.853  4224.520  4313.824  3457.338 #> 73   12989.507  13424.739  6416.989  6011.235  6930.706 #> 74   17228.103  17801.701  8416.339  8074.690  8180.107 #> 75   12496.771  16514.729  7953.316  5986.195  7501.474 #> 76    7768.525   8954.246  4481.285  3748.809  4391.471 #> 77   18286.980  20058.643  9279.260  8776.125  8816.869 #> 78   11007.740  13523.704  6329.548  5433.700  6108.691 #> 79   17448.654  18053.113  7929.810  7835.069  7400.597 #> 80    8078.036   8169.740  3913.469  3677.293  3979.679 #> 81   10625.803  10509.414  5000.745  4950.013  5195.732 #> 82   10581.643  10601.086  5258.173  4907.174  4311.171 #> 83   12569.073  14670.903  6607.330  5441.640  6329.251 #> 84    9254.814  12319.257  5882.463  4477.756  4843.006 #> 85    9055.263  10873.608  5057.245  4354.974  3682.023 #> 86    9013.900   8864.631  4395.370  4313.845  4981.607 #> 87   13890.933  11906.060  5418.723  6469.266  6155.065 #> 88    8432.532   5415.193  2404.904  4105.017  2841.780 #> 89   17192.092  19244.706  8065.847  6691.520  6390.106 #> 90   15670.390  16498.445  7549.695  6932.435  8248.637 #> 91   10929.401   9702.210  4442.907  5124.300  4362.045 #> 92   16237.902  17843.151  8395.142  7777.593  8415.474 #> 93   11378.642  14249.578  6798.776  5520.122  6801.925 #> 94   16634.418  17679.065  8336.675  7204.955  8953.574 #> 95   10415.698  10970.891  5351.231  4053.779  3153.034 #> 96    8463.589   8192.303  3787.577  4055.605  4009.551 #> 97    9853.810   9185.831  4286.439  4498.042  4084.347 #> 98   10031.734   8697.144  3951.314  4293.925  3643.810 #> 99   14484.127  14719.063  6612.934  7020.121  6827.318 #> 100   9004.845   8939.443  4225.297  4363.876  3453.647"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","title":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","text":"rollup_mass_props_and_unc_fast() performs operation rollup_mass_props_and_unc() omits input validation. somewhat faster rollup_mass_props_and_unc() used caution circumstances caller assumes responsibility validity input. behavior passed ill-formed input unspecified.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","text":"","code":"rollup_mass_props_and_unc_fast(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","text":"","code":"rollup_mass_props_and_unc_fast(sawe_tree, sawe_table) #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 1   Widget 57.83 121.2000  0.0400000 -0.16000000 7258.900  8607.02 10453.40 #> 2 2nd Part 16.80  70.9000 -0.9500000  0.46000000   65.070  1124.65  1078.82 #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz sigma_mass sigma_Cx  sigma_Cy   sigma_Cz #> 1  834.440 -1198.380 -1066.580    1.24160  0.27640 0.2085000 0.06690000 #> 2   76.010   202.830    13.620    1.73080  0.62340 0.5173000 0.14050000 #> 3 1558.714 -1401.534 -1060.951    2.13008  0.95821 0.1999847 0.06178402 #>   sigma_Ixx sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  386.9233  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2   12.4687  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3  387.4017 2789.3133 2815.3260 1488.0948  418.6048  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties without input validation — rollup_mass_props_fast","title":"Roll up mass properties without input validation — rollup_mass_props_fast","text":"rollup_mass_props_fast() performs operation rollup_mass_props() omits input validation. somewhat faster  rollup_mass_props() used caution circumstances caller assumes responsibility validity input. behavior passed ill-formed input unspecified.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties without input validation — rollup_mass_props_fast","text":"","code":"rollup_mass_props_fast(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties without input validation — rollup_mass_props_fast","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties without input validation — rollup_mass_props_fast","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties without input validation — rollup_mass_props_fast","text":"","code":"rollup_mass_props_fast(test_tree, test_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties uncertainties — rollup_mass_props_unc","title":"Roll up mass properties uncertainties — rollup_mass_props_unc","text":"rollup_mass_props_unc() rolls mass properties uncertainties data frame uncertainties non-leaf vertex element aggregation mass properties uncertainties child elements. difference rollup_mass_props_unc() rollup_mass_props_and_unc() rollup_mass_props_unc() expects mass properties input rolled , whereas rollup_mass_props_and_unc() performs mass properties rollup .","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties uncertainties — rollup_mass_props_unc","text":"","code":"rollup_mass_props_unc(   tree,   df,   validate_df = validate_mass_props_and_unc_table,   ... )"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties uncertainties — rollup_mass_props_unc","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint. validate_df validator tree table, default validate_mass_props_and_unc_table() ... parameters passed rollupTree::rollup()","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties uncertainties — rollup_mass_props_unc","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties uncertainties — rollup_mass_props_unc","text":"","code":"mp_ru <- rollup_mass_props(mp_tree, mp_table) rollup_mass_props_unc(mp_tree, mp_ru)[1:100, ] #>              id         name POIconv       mass          Cx           Cy #> 1           C.1     System 1       - 635.660192   0.3318148   1.36614630 #> 2         C.1.1    Segment 1       - 372.387816   2.7823660   2.27331548 #> 3         C.1.2    Segment 2       - 263.272375  -3.1343878   0.08299326 #> 4       C.1.1.1    Element 1       -  45.236245   0.6449576   3.40672797 #> 5       C.1.1.2    Element 2       -  83.911615   1.7979454  -0.58033620 #> 6       C.1.1.3    Element 3       - 123.272571   6.4136420   1.63215491 #> 7       C.1.1.4    Element 4       - 119.967384   0.5455573   4.50076013 #> 8       C.1.2.1    Element 5       -  97.128572   2.2245377  -4.18310553 #> 9       C.1.2.2    Element 6       -  46.012547 -23.9286608  -6.13818202 #> 10      C.1.2.3    Element 7       - 120.131257   0.4974119   5.91504913 #> 11    C.1.1.1.1  Subsystem 1       -  24.182758  12.7664845  -7.33521244 #> 12    C.1.1.1.2  Subsystem 2       -  21.053487 -13.2782447  15.74528976 #> 13    C.1.1.2.1  Subsystem 3       -  32.614045  -5.4164053   4.35058525 #> 14    C.1.1.2.2  Subsystem 4       -  18.443508   5.9446314  -2.86799230 #> 15    C.1.1.2.3  Subsystem 5       -  32.854062   6.6317379  -4.19099753 #> 16    C.1.1.3.1  Subsystem 6       -  18.809672 -11.5693537   4.60172214 #> 17    C.1.1.3.2  Subsystem 7       -  21.309572   3.7950516  -3.76444320 #> 18    C.1.1.3.3  Subsystem 8       -  28.107067   3.8710126   2.64280855 #> 19    C.1.1.3.4  Subsystem 9       -  31.461107  16.1782715   8.40798505 #> 20    C.1.1.3.5 Subsystem 10       -  23.585154  13.1261314  -6.10317776 #> 21    C.1.1.4.1 Subsystem 11       -  14.945121  10.1956219   2.09268188 #> 22    C.1.1.4.2 Subsystem 12       -  20.623094 -14.8515213  16.29220017 #> 23    C.1.1.4.3 Subsystem 13       -  27.123877  -2.3767554   2.44839217 #> 24    C.1.1.4.4 Subsystem 14       -  27.512486  12.0096670   3.91406747 #> 25    C.1.1.4.5 Subsystem 15       -  29.762807  -1.5653890  -0.04778306 #> 26    C.1.2.1.1 Subsystem 16       -  22.161742  17.0733845  -8.78939395 #> 27    C.1.2.1.2 Subsystem 17       -  29.542394  -4.0320250 -10.63513308 #> 28    C.1.2.1.3 Subsystem 18       -  19.515486 -12.2676108 -10.14297124 #> 29    C.1.2.1.4 Subsystem 19       -  25.908950   7.5732239  11.60299863 #> 30    C.1.2.2.1 Subsystem 20       -  12.256125 -25.7562192  -0.82404359 #> 31    C.1.2.2.2 Subsystem 21       -  24.446707 -17.8654251  -8.50267866 #> 32    C.1.2.2.3 Subsystem 22       -   9.309714 -37.4443673  -6.92516492 #> 33    C.1.2.3.1 Subsystem 23       -  26.125954   2.3614452   7.99620979 #> 34    C.1.2.3.2 Subsystem 24       -  23.382905  18.2483930  -4.68014506 #> 35    C.1.2.3.3 Subsystem 25       -  35.450403  -3.5173534   6.67001106 #> 36    C.1.2.3.4 Subsystem 26       -  17.672250 -15.1876417   6.45654603 #> 37    C.1.2.3.5 Subsystem 27       -  17.499745  -2.0314207  14.88894819 #> 38  C.1.1.1.1.1   Assembly 1       -  10.071268  15.0192256   8.60615091 #> 39  C.1.1.1.1.2   Assembly 2       -   8.777087  13.1715220 -19.12305251 #> 40  C.1.1.1.1.3   Assembly 3       -   5.334404   7.8469082 -18.03684651 #> 41  C.1.1.1.2.1   Assembly 4       -   8.530216 -27.0839975  -3.93222778 #> 42  C.1.1.1.2.2   Assembly 5       -   3.688640   2.4216967  34.86365323 #> 43  C.1.1.1.2.3   Assembly 6       -   8.834630  -6.5032449  26.76246960 #> 44  C.1.1.2.1.1   Assembly 7       -   3.187103 -20.7902569  -4.91562419 #> 45  C.1.1.2.1.2   Assembly 8       -   7.704628   1.5556086  -1.75343697 #> 46  C.1.1.2.1.3   Assembly 9       -   7.711519  -2.3777753  23.38481702 #> 47  C.1.1.2.1.4  Assembly 10       -   3.549741   2.6316091  31.09013760 #> 48  C.1.1.2.1.5  Assembly 11       -  10.461054 -10.8383769 -11.43556170 #> 49  C.1.1.2.2.1  Assembly 12       -  10.286039  10.1654142  12.63895967 #> 50  C.1.1.2.2.2  Assembly 13       -   2.244389   8.1157966 -57.40848164 #> 51  C.1.1.2.2.3  Assembly 14       -   5.913080  -2.2216845  -9.14137684 #> 52  C.1.1.2.3.1  Assembly 15       -  10.677102  14.8893352 -11.06192763 #> 53  C.1.1.2.3.2  Assembly 16       -   6.552370 -10.5711516 -13.20642056 #> 54  C.1.1.2.3.3  Assembly 17       -   6.344582   1.6405611  16.22198529 #> 55  C.1.1.2.3.4  Assembly 18       -   3.402740  60.7702477  -1.44767560 #> 56  C.1.1.2.3.5  Assembly 19       -   5.877267 -15.1470616  -5.28209204 #> 57  C.1.1.3.1.1  Assembly 20       -   4.293059 -39.5750239 -13.48623549 #> 58  C.1.1.3.1.2  Assembly 21       -   5.084983 -43.6312526 -15.82460462 #> 59  C.1.1.3.1.3  Assembly 22       -   5.945426  -5.0634332  18.67393164 #> 60  C.1.1.3.1.4  Assembly 23       -   3.486204  58.5882609  32.67091018 #> 61  C.1.1.3.2.1  Assembly 24       -   6.550015   9.1370077 -28.74205708 #> 62  C.1.1.3.2.2  Assembly 25       -   5.517889   4.5710202  19.45615975 #> 63  C.1.1.3.2.3  Assembly 26       -   3.595544   2.6384819  29.67219507 #> 64  C.1.1.3.2.4  Assembly 27       -   5.646124  -2.4239229 -18.77436158 #> 65  C.1.1.3.3.1  Assembly 28       -   5.516820  11.9159764   7.58302926 #> 66  C.1.1.3.3.2  Assembly 29       -   5.098215 -11.9097042 -24.95358705 #> 67  C.1.1.3.3.3  Assembly 30       -   9.449215  20.7511141   6.11645689 #> 68  C.1.1.3.3.4  Assembly 31       -   8.042816 -11.4759551  12.66601430 #> 69  C.1.1.3.4.1  Assembly 32       -   6.584066  39.3645423   3.15413640 #> 70  C.1.1.3.4.2  Assembly 33       -   5.508303  20.4291943  24.53406983 #> 71  C.1.1.3.4.3  Assembly 34       -   9.267718  11.8847755  -4.54399695 #> 72  C.1.1.3.4.4  Assembly 35       -   2.768917  -8.3967033  23.54252209 #> 73  C.1.1.3.4.5  Assembly 36       -   7.332103   6.8714831  11.66671923 #> 74  C.1.1.3.5.1  Assembly 37       -  11.593170  17.6646845 -16.62616230 #> 75  C.1.1.3.5.2  Assembly 38       -   7.660895  14.2436968  16.34470506 #> 76  C.1.1.3.5.3  Assembly 39       -   4.331090  -0.9991273 -17.64210148 #> 77  C.1.1.4.1.1  Assembly 40       -   8.329673   4.3469841  19.99215163 #> 78  C.1.1.4.1.2  Assembly 41       -   6.615447  17.5597862 -20.44498292 #> 79  C.1.1.4.2.1  Assembly 42       -   9.221147 -12.9516146  20.11827066 #> 80  C.1.1.4.2.2  Assembly 43       -   4.299463   2.8420127   9.95060449 #> 81  C.1.1.4.2.3  Assembly 44       -   7.102484 -28.0288847  15.16367932 #> 82  C.1.1.4.3.1  Assembly 45       -   4.385272  18.5433795  21.95942075 #> 83  C.1.1.4.3.2  Assembly 46       -   8.071459 -29.7075256  -5.36804768 #> 84  C.1.1.4.3.3  Assembly 47       -   7.148714   9.8136441  11.05020999 #> 85  C.1.1.4.3.4  Assembly 48       -   4.661363  -0.2492873 -18.49730016 #> 86  C.1.1.4.3.5  Assembly 49       -   2.857069   8.7521744   7.23387426 #> 87  C.1.1.4.4.1  Assembly 50       -   6.546347   3.1826705   8.23007957 #> 88  C.1.1.4.4.2  Assembly 51       -   3.715625  34.3777783  11.62050300 #> 89  C.1.1.4.4.3  Assembly 52       -   8.571466  30.4272946  -9.05073687 #> 90  C.1.1.4.4.4  Assembly 53       -   8.679047  -9.0978350  10.16349146 #> 91  C.1.1.4.5.1  Assembly 54       -   4.531672 -27.1616577 -14.73715705 #> 92  C.1.1.4.5.2  Assembly 55       -   8.946426  15.5077442  13.44912404 #> 93  C.1.1.4.5.3  Assembly 56       -   8.407049  -9.8383532  -5.91352500 #> 94  C.1.1.4.5.4  Assembly 57       -   7.877659   2.5984849  -0.66574356 #> 95  C.1.2.1.1.1  Assembly 58       -   3.595711  25.4843378  16.03742296 #> 96  C.1.2.1.1.2  Assembly 59       -   4.942294  26.2242739 -11.55394742 #> 97  C.1.2.1.1.3  Assembly 60       -   4.914863  28.1045404 -28.36321162 #> 98  C.1.2.1.1.4  Assembly 61       -   3.039161 -15.6364131 -24.06411319 #> 99  C.1.2.1.1.5  Assembly 62       -   5.669714  11.7334329   3.03098042 #> 100 C.1.2.1.2.1  Assembly 63       -   4.323378 -40.3180149  20.93528200 #>              Cz         Ixx         Iyy         Izz           Ixy           Ixz #> 1    -0.6631918 4250838.375 4135081.317 4387869.582 -36939.709460  -5703.634810 #> 2    -2.0480047 2585081.273 2468902.684 2586058.073 -85117.550036 -37973.213859 #> 3     1.2955683 1663292.931 1659055.029 1795672.212  50176.630947  29218.383462 #> 4     2.5048850  320437.392  303359.222  307896.116  11813.853322  12051.383899 #> 5    -7.3675365  604189.223  568712.379  580609.901   2170.787077 -48654.518927 #> 6    -2.6674182  872296.759  815356.633  860561.985 -60933.818719   5139.944339 #> 7     0.5924761  782574.671  774764.842  833089.037 -38926.964140  -7496.647811 #> 8    -2.6720265  575753.163  594699.798  658365.102  -8094.274698  16633.878856 #> 9    -4.3577724  302641.248  282354.062  273741.595   3625.317732   6155.095729 #> 10    6.6687862  770796.067  751263.469  831661.198  60921.950943  12117.654302 #> 11    4.2506333  151242.291  151681.439  140003.007  -9285.981270  11631.081600 #> 12    0.4996586  163041.130  143884.885  154262.950  14334.201792   1519.832868 #> 13   -8.7423181  255264.690  233424.833  236512.404 -11454.292573 -37583.693877 #> 14    1.0825770  134251.664  108878.512  127953.741  -4491.039961  -8773.562504 #> 15  -10.7464962  211601.360  221873.089  212043.694  16207.560493  -1864.143042 #> 16   -0.2197146  126503.158  130821.452  139832.798 -27330.473253  10213.740909 #> 17   -1.9188334  145089.535  116755.199  132187.503 -11581.111520  -1088.805810 #> 18   -8.7607161  201630.697  204023.208  213195.563 -18665.528651  12743.392992 #> 19   -3.9374914  224389.998  198755.692  188721.426 -13754.623083  -3597.508026 #> 20    3.6598721  168849.350  152364.811  172480.750  10479.313700 -12953.599506 #> 21  -19.4235427  112296.219   99628.241  119189.416  -8967.033710 -17431.198538 #> 22   11.4779120  117592.469  131659.484  128036.987  -9033.019787  16001.475802 #> 23   -6.1146799  148774.141  138236.828  178429.755 -10292.287770  -4473.094373 #> 24   10.3500735  171140.859  189129.265  181772.947   2690.691116  -4928.296237 #> 25    0.1932782  216801.699  193574.314  211705.406 -17153.402260    625.542397 #> 26   -3.1579625  135100.032  143906.096  144737.897  11700.687810  14145.752255 #> 27   -1.6034710  178572.190  175405.603  195466.281 -22254.105018   6406.179276 #> 28   -5.7969012   96462.742   96314.603  119650.334   8648.899165   3211.032970 #> 29   -1.1210201  156476.577  167898.906  178778.096  -2639.826917  -6387.783054 #> 30  -10.6351375   87544.807   61464.871   67216.864  10928.233973  -9715.006440 #> 31   -8.5817965  153686.230  155943.843  138841.509  -9668.028348  10857.760966 #> 32   14.9983160   56514.549   57897.933   64554.353   1994.625620   2091.310085 #> 33    7.6261517  155060.550  172731.489  188449.966  -1180.988326  17992.792399 #> 34   -4.6150983  127797.972  130060.541  141189.756   6231.140992  13234.782556 #> 35    0.3587986  236295.355  218763.167  244473.953  29748.102177  -4158.053892 #> 36   25.1766073  133656.236  110567.391  129817.974  14334.394723 -12586.763500 #> 37   14.4091662  102298.616   95136.554  111067.089   6838.233228 -11576.735706 #> 38   -0.3965443   61834.025   78096.997   59572.314  -6527.375078   5395.749384 #> 39    5.6741907   49631.511   48157.705   52108.300   2032.938393   5822.375498 #> 40   10.6821450   34930.904   24789.140   23750.830  -4190.930886    143.800354 #> 41   -4.5443538   76113.709   70474.499   66815.560   8525.678965   9172.832441 #> 42   -3.7039578   16234.087   11931.258   13228.985   -901.438499   -407.744745 #> 43    7.1249663   64299.822   57868.559   65554.321  10793.905985  -6498.123577 #> 44   -0.5215488   25802.120   21426.183   20321.800   7007.142526  -8871.985596 #> 45  -54.2308989   40699.790   28969.192   53216.236   -389.798051  -1967.363656 #> 46   37.2370833   49016.692   53801.316   62102.617 -23667.847151  -8481.410757 #> 47  -30.4156955   26666.256   25282.456   32825.749   9625.752669  -4211.658416 #> 48   -4.2842623   70244.016   67873.034   57809.930  -1798.097754 -16692.198404 #> 49   -0.8658027   67978.979   68562.962   71543.024   5597.424174  -1450.476777 #> 50   14.7472978   11710.319    9451.792    5392.489  -1154.000314   1549.644821 #> 51   -0.7147679   44702.677   29798.364   41047.611  -8224.070232  -8803.942028 #> 52   -1.2035096   68716.185   77494.203   69998.249    682.943523   5380.366191 #> 53    6.1837950   45539.575   37747.562   31778.429   -894.227254  -2205.055746 #> 54  -27.1208730   32001.064   36022.283   33397.266   1286.265320   6640.073682 #> 55  -39.8514468   13767.543    8518.348   19751.283   4102.708394   -805.436120 #> 56  -12.4309214   40413.313   39053.718   37819.265  11438.911688 -16568.649985 #> 57   23.7129294   17914.728   18011.833   14498.468  -2522.745587   1951.342447 #> 58    4.8240934   47107.418   34826.432   42046.974  -7820.613126  -1357.170670 #> 59  -12.0566515   27245.653   31664.948   31844.969  -1038.517625   2406.528967 #> 60  -16.8613960   22398.262   15926.045   17986.742  -3034.105592  -1014.837352 #> 61  -19.4565775   29306.978   36823.491   31638.809  -2419.138856   2246.198531 #> 62  -40.1297937   28681.447   21415.051   31652.751    -54.270761    445.738104 #> 63   61.5224118   15104.515   15808.218   22972.538 -10930.207774  -5434.176365 #> 64   15.3692288   33413.069   16065.064   33156.425   1435.964390      5.324233 #> 65  -11.2910109   33212.756   30248.221   38324.342  -3278.078554   4005.081612 #> 66   -6.5829677   41566.285   42422.412   35744.647 -15428.427820  14420.904167 #> 67  -25.6112022   58658.860   58143.425   73887.573    902.270630  -3914.190103 #> 68   11.3914814   57244.740   60986.944   54086.293    895.060402  -7231.069433 #> 69   12.9315467   47300.076   31742.958   30558.384  -1786.847202  -2448.104881 #> 70  -12.8107747   46172.406   38476.417   26448.545   2420.608542  -3046.753699 #> 71  -14.6217761   47118.477   53262.518   54675.749  -2701.579069   8297.293608 #> 72  -13.8553414   15442.545   17479.214   16522.048  -6762.218355   3692.859012 #> 73    4.8308673   60274.209   47475.963   50518.431  -6085.886006  -7223.677186 #> 74   -2.0005279   77651.725   77646.268   80275.007   8934.508771  -4972.858909 #> 75   37.1182973   42881.466   37620.311   60396.135   5854.943852     25.532832 #> 76  -40.3704964   25251.230   18641.583   24976.286  -3965.704286  -5323.966652 #> 77  -14.9787214   62055.788   64431.582   66092.586  -4340.703949 -14732.151880 #> 78  -25.0201270   43839.614   34181.196   46424.094  -6596.315421  -3188.236242 #> 79    6.0089634   56366.616   73013.899   73292.893   4326.703575   6202.775527 #> 80   -6.6518134   21565.271   17640.749   16774.955  -5840.353150  -1552.799161 #> 81   29.5530054   35334.222   34382.839   35039.624  -7829.141811   8184.825631 #> 82    5.1629471   23808.615   28243.470   25468.843  -3420.554833    255.728694 #> 83  -15.0253938   52783.679   36955.981   50019.347 -10080.945732  -2256.741058 #> 84   -2.6368738   29670.714   24878.994   43039.411   7089.265059   1044.390584 #> 85  -28.3844982   21048.263   25036.480   34783.807   3886.212091    652.602147 #> 86   29.3807428    9464.371    6539.682   10930.743  -3557.958442     42.081181 #> 87    6.2163752   45781.230   52451.069   39868.536   4925.106466   7244.622250 #> 88   34.2572689   10816.878   15469.580    9007.646  -1830.707816  -5213.195232 #> 89   29.3326880   43159.704   47347.169   56508.271 -10980.918893   7969.294805 #> 90  -15.5143314   58130.546   53587.890   65122.796   7776.752360  -4968.301893 #> 91   -3.5262336   22338.766   23560.611   25873.052  -1021.125862  -1676.779659 #> 92   15.3859078   66431.623   66080.346   70565.742  10716.377438  10761.397161 #> 93   -8.3642779   54194.688   38445.743   55862.916  -7242.065427 -11406.215778 #> 94   -5.7882373   67911.593   56173.629   50215.057 -15453.446121   6098.142511 #> 95  -20.3015564   14710.870   20161.217   26662.473   6130.319712  -5113.091626 #> 96  -26.1093416   23748.472   21334.617   21342.264  -3171.608511   1197.094654 #> 97   -9.5517007   24221.324   29050.641   24663.905     -2.231148   7765.307764 #> 98   17.0838864   14448.750   21804.422   19776.953   4805.199488    125.128676 #> 99   22.4133365   43518.472   38061.765   41974.243   4664.189190   5481.732378 #> 100  13.1399591   16230.774   23189.151   24322.460  -2317.667232  -8094.085645 #>               Iyz Ipoint sigma_mass  sigma_Cx  sigma_Cy  sigma_Cz  sigma_Ixx #> 1   -41942.778890  FALSE 10.2947890  1.381855  1.407531  1.394688 138446.949 #> 2   -24491.138285  FALSE  7.8143089  1.782194  1.841904  1.829756 108001.615 #> 3   -18581.162253  FALSE  6.7021831  2.182675  2.181724  2.153366  86550.515 #> 4    -7007.889017  FALSE  2.6976697  4.984638  5.143223  5.288776  38638.991 #> 5   -26282.536240  FALSE  3.7151052  3.745609  3.845263  3.834822  49136.565 #> 6     7778.840431  FALSE  4.5362470  3.089637  3.254088  3.201888  64307.679 #> 7     3282.213215  FALSE  4.4052761  3.177938  3.239979  3.196096  59947.771 #> 8   -30339.749388  FALSE  3.9231784  3.541110  3.479111  3.491385  49715.156 #> 9    -5803.382726  FALSE  2.9352680  5.176938  5.277841  5.330365  36925.377 #> 10   24588.805516  FALSE  4.5729784  3.231771  3.281807  3.171157  59878.937 #> 11   -3665.048708  FALSE  2.0037787  6.712238  6.835242  7.050809  26174.582 #> 12   -4317.230079  FALSE  1.8061817  7.246186  7.636462  7.967726  27902.839 #> 13  -15618.080046  FALSE  2.3317706  5.999269  6.168735  6.328822  32199.533 #> 14  -12660.695787  FALSE  1.7828752  7.445890  8.410330  7.744262  22518.589 #> 15    1819.449055  FALSE  2.2773249  6.176942  6.038411  6.106111  29257.482 #> 16   -8358.576150  FALSE  1.7828752  8.304336  8.633568  8.088626  25091.882 #> 17   -2664.522232  FALSE  2.0037787  7.313716  7.945855  7.973809  27411.527 #> 18    6524.161885  FALSE  2.2026381  6.679201  6.930867  6.864306  31706.267 #> 19    8522.567433  FALSE  2.2588847  5.775885  6.145021  6.342012  31692.227 #> 20    2207.661280  FALSE  1.8519151  6.886384  7.338415  6.887791  26751.675 #> 21   -9165.972965  FALSE  1.5841262  9.228064 10.152855  9.212524  24044.580 #> 22   16261.755436  FALSE  1.8061817  7.440766  7.351605  7.379150  21990.181 #> 23   -3840.001909  FALSE  2.1835672  6.583193  6.699780  6.371265  25494.629 #> 24   21945.766469  FALSE  2.1253283  6.893469  6.553788  6.744347  27563.923 #> 25  -18281.983865  FALSE  2.0855990  6.128316  6.631502  6.598516  32320.029 #> 26       5.303518  FALSE  1.9827962  7.521495  7.349680  7.674871  24440.473 #> 27   -9853.100892  FALSE  2.1643284  6.316961  6.320899  6.223356  27305.603 #> 28    3122.748235  FALSE  1.7110518  7.850957  7.438876  7.864638  21251.304 #> 29  -22770.952906  FALSE  1.9615892  6.733433  6.726673  6.534697  25180.932 #> 30   15205.337279  FALSE  1.4168855  8.822129 10.293580  9.685666  18663.601 #> 31  -16077.685964  FALSE  2.2215452  7.213945  7.095451  7.561693  27423.226 #> 32   -5237.531391  FALSE  1.2934336 12.459427 12.192670 11.314738  15462.253 #> 33    6516.436175  FALSE  2.1835672  7.340154  6.971327  6.741022  28157.262 #> 34   -8520.729962  FALSE  2.0037787  7.139603  7.170140  6.766174  23640.489 #> 35    9962.012056  FALSE  2.4879692  5.832823  6.355414  5.928080  34261.511 #> 36   11234.043728  FALSE  1.7353233  8.485650  8.543518  8.823966  24680.800 #> 37    9468.427630  FALSE  1.7110518  7.813557  8.057258  7.799337  19305.842 #> 38   -3519.950456  FALSE  1.2270589 10.530046  9.544904 10.717333  14733.483 #> 39    4559.129833  FALSE  1.2606831 11.412357 11.882169 12.389001  17534.265 #> 40   -5964.771263  FALSE  0.9592360 13.305175 15.109247 13.933528  11831.458 #> 41    2156.088143  FALSE  1.1201464 11.424240 11.751281 13.320689  19063.084 #> 42   -5010.271328  FALSE  0.7652056 13.648413 15.119935 15.806349   7052.866 #> 43    -267.974948  FALSE  1.1924869 11.759749 12.304587 12.256069  18320.074 #> 44    5154.870321  FALSE  0.8180392 19.224984 21.158401 22.782221  11750.729 #> 45   -3477.048727  FALSE  1.1568822 12.039248 12.156564  9.709652  11511.653 #> 46  -13859.423581  FALSE  1.0018894 12.649486 12.594879 11.486216  13904.871 #> 47    5127.483013  FALSE  0.8180392 18.872501 20.591145 18.447395  10727.297 #> 48   -2711.865923  FALSE  1.3253750 10.292927 10.022772 11.437673  16689.783 #> 49   -2070.208823  FALSE  1.1924869 10.400848 10.441629 10.233606  15712.797 #> 50    -991.987274  FALSE  0.6467168 17.529379 20.857302 24.275711   6886.867 #> 51  -11515.303437  FALSE  1.1568822 12.822992 15.770028 13.384913  12941.936 #> 52  -11916.268826  FALSE  1.2270589 10.822313 10.369127 10.434195  16266.180 #> 53    4523.028756  FALSE  1.0427995 11.831774 12.601053 14.741998  13239.236 #> 54   -4774.940657  FALSE  1.0018894 12.301856 12.385367 12.886127  10080.195 #> 55     295.936924  FALSE  0.7652056 21.689802 19.528472 14.808837   7058.913 #> 56    9609.927691  FALSE  1.0018894 14.872630 16.238908 15.277496  14749.200 #> 57   -3248.312482  FALSE  0.8180392 16.117895 14.872489 15.207556   7749.041 #> 58    -342.568165  FALSE  0.8180392 14.283946 16.789006 15.120375  13416.572 #> 59   -3073.149111  FALSE  1.0821642 13.443952 14.868565 13.814772  12223.041 #> 60   -6695.678659  FALSE  0.8180392 16.702337 22.098576 21.230613  13265.437 #> 61    -131.506377  FALSE  1.1924869 14.458308 12.291893 15.421516  15031.839 #> 62    3742.217686  FALSE  1.1201464 14.697871 16.756221 14.395299  13048.222 #> 63   -5155.417997  FALSE  0.7084428 17.445192 17.333954 14.294451   7146.378 #> 64    3015.467649  FALSE  0.9145957 12.187637 15.278618 12.745551  11293.534 #> 65   -2656.345652  FALSE  1.0018894 13.972706 15.354498 14.076725  11506.476 #> 66   12337.712023  FALSE  0.8180392 14.435127 14.115629 15.501806  12499.689 #> 67   11840.405547  FALSE  1.2270589 11.693938 12.275090 10.878183  17562.834 #> 68  -14301.486339  FALSE  1.2934336 12.813649 13.287596 14.320008  18753.692 #> 69   12811.505498  FALSE  0.9592360 12.121174 13.099778 13.499410  13861.647 #> 70    -847.222299  FALSE  0.9592360 12.670042 15.013882 16.781315  14816.430 #> 71   -1158.885711  FALSE  1.1924869 10.545662 11.209283 10.317940  16090.063 #> 72    1007.568218  FALSE  0.8180392 21.987821 21.265088 24.161397   8732.200 #> 73   -3585.739955  FALSE  1.0821642 11.794928 12.327523 13.006474  14767.459 #> 74   10782.268288  FALSE  1.2270589  9.950426  9.594029  9.702972  16671.771 #> 75    6936.382566  FALSE  1.1568822 12.410635 14.154518 11.261377  15748.968 #> 76   -6866.109439  FALSE  0.7652056 14.387171 16.174235 13.875835   9426.115 #> 77   -1595.625647  FALSE  1.2270589 13.133393 14.019218 13.230723  19121.508 #> 78   -6073.206514  FALSE  1.0018894 12.598918 13.849975 12.418721  13255.393 #> 79    1578.772095  FALSE  1.1924869 12.008486 11.752165 11.215338  16359.498 #> 80    5635.594394  FALSE  0.8180392 15.318773 15.776656 16.288142   8778.872 #> 81    9203.878220  FALSE  1.0821642 11.377459 11.431763 11.707543  10973.681 #> 82   -3168.856714  FALSE  1.0018894 17.455688 15.378314 16.551863   9201.722 #> 83    -940.782920  FALSE  1.2270589 11.085593 12.733988 12.109048  15519.180 #> 84    2868.150821  FALSE  1.0018894 12.088755 12.619549 10.970111  10348.333 #> 85    2829.401355  FALSE  0.8676616 15.864164 15.040975 12.959421   7788.770 #> 86   -1027.319079  FALSE  0.7084428 20.116213 22.045985 22.078366  10035.809 #> 87    1654.211542  FALSE  1.0018894 13.314084 12.409482 13.593848  12623.643 #> 88     -55.162112  FALSE  0.8180392 15.886376 13.619123 17.241282   6582.330 #> 89    2941.045792  FALSE  1.2270589 13.479632 12.436378 10.944834  13679.904 #> 90   14461.092328  FALSE  1.1568822 11.532989 12.422940 12.499412  17433.626 #> 91    2797.328702  FALSE  0.9145957 16.681963 15.021215 16.645335   8884.561 #> 92  -20852.971541  FALSE  1.1201464 11.325076 12.327011 11.726102  17764.297 #> 93   -4273.136308  FALSE  1.0018894 10.494529 12.021867 10.844709  14192.316 #> 94    6580.012003  FALSE  1.1201464 11.702973 13.613453 14.552346  20477.032 #> 95    1467.005707  FALSE  0.8676616 21.633251 17.846518 18.501033   8160.481 #> 96    3473.574464  FALSE  0.8180392 13.188064 14.612661 13.988076   9024.922 #> 97   -3901.398540  FALSE  0.8676616 14.655820 12.698119 14.695340   8849.428 #> 98   -1665.416137  FALSE  0.9145957 20.393303 20.235563 22.981818   8419.821 #> 99     803.880061  FALSE  0.9592360 15.104858 16.202023 15.855532  15113.793 #> 100  -2867.232937  FALSE  0.8180392 15.246041 14.286192 14.264976   6983.953 #>      sigma_Iyy  sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz #> 1   137009.710 139073.035 64821.460 63906.768 64024.216 #> 2   103675.008 106413.036 49791.550 48317.535 50123.785 #> 3    89376.703  89372.214 41411.674 41722.019 39794.807 #> 4    37230.764  35394.577 16898.628 17683.948 18016.633 #> 5    48814.540  49341.144 23321.341 22902.162 23398.201 #> 6    59394.616  61878.028 28826.884 27561.503 29301.631 #> 7    58473.048  61552.479 28528.641 27011.938 27835.874 #> 8    52835.919  53243.397 25090.214 24823.791 22600.420 #> 9    38145.433  35982.335 16268.575 18063.736 17049.638 #> 10   59901.491  60807.412 27933.383 27546.666 27651.306 #> 11   25990.709  24135.261 11648.880 12377.863 12340.521 #> 12   26001.065  24651.864 11579.898 12231.336 12825.028 #> 13   31432.432  31009.171 14813.681 14988.362 15574.425 #> 14   20353.587  21693.129 10239.135  9843.484 10856.087 #> 15   30974.873  31348.666 14648.712 14055.614 13533.108 #> 16   23585.298  26889.796 12628.435 11017.978 11569.801 #> 17   25573.804  23897.372 10772.949 11482.496 11591.548 #> 18   29929.200  30508.346 14386.601 14177.424 14768.103 #> 19   27843.234  28779.542 12981.406 12470.376 13886.484 #> 20   24184.439  26575.963 12727.372 11592.323 13118.251 #> 21   21460.326  24968.450 11597.270 10381.893 11087.421 #> 22   22585.310  22689.935 10305.491 10307.734 10099.121 #> 23   24393.328  27190.489 12977.100 11434.763 11592.999 #> 24   30129.407  29502.912 13082.245 13298.357 13067.558 #> 25   28887.666  31192.780 14730.324 13427.046 14963.041 #> 26   25660.622  24771.129 11581.874 11775.493 11005.418 #> 27   30154.804  31098.867 14395.250 14118.471 12714.047 #> 28   22575.790  21748.938 10248.031 10693.686  8620.818 #> 29   25676.919  26189.111 12652.706 12249.382 11973.502 #> 30   15193.276  16940.245  7747.883  7035.366  8892.595 #> 31   30079.660  25397.142 10968.544 14186.802 12136.028 #> 32   16824.529  18590.616  8961.091  8126.012  7598.579 #> 33   31224.031  30289.936 13203.630 13501.351 12962.616 #> 34   23908.806  24132.276 11362.995 11351.608 11012.881 #> 35   30727.889  33968.969 15492.821 14389.849 15528.989 #> 36   24496.828  23317.081 10934.029 11144.141 11452.882 #> 37   19410.711  20455.556  9835.921  9331.513  9153.404 #> 38   16828.491  14549.121  6976.982  8217.137  7027.437 #> 39   17112.925  15348.131  7254.852  8118.617  8215.079 #> 40    9834.772  10769.491  5417.159  4371.587  5447.594 #> 41   18492.087  15575.028  7344.754  8497.043  8569.518 #> 42    5729.766   6091.599  2928.888  2601.885  3328.708 #> 43   16906.310  17022.878  7891.701  8125.724  8452.600 #> 44   11347.356   9914.999  4932.979  5124.516  5480.345 #> 45    9861.240  13679.923  6286.843  4415.265  5260.948 #> 46   14498.227  15924.199  7464.783  6763.513  6932.155 #> 47    9383.048  11308.251  5703.399  4500.438  4911.631 #> 48   17932.585  15589.266  7404.420  8361.155  7764.955 #> 49   16305.340  16046.848  7561.804  8076.351  7464.567 #> 50    6173.450   4380.487  2041.620  2506.591  2950.973 #> 51   10267.694  12213.207  5924.253  4939.920  6400.818 #> 52   17567.170  17473.516  8333.429  8003.344  7316.138 #> 53   12113.392   9860.479  4767.953  5583.670  6330.964 #> 54   10471.463  10516.392  5088.909  5283.599  5212.552 #> 55    8131.024  10956.507  4466.789  2493.950  3112.725 #> 56   14087.346  15465.192  7247.356  6510.085  6315.069 #> 57    8817.625   8983.271  3462.570  3162.141  3450.989 #> 58   11151.899  13155.350  6133.905  5639.423  6724.008 #> 59   10785.911  12912.640  5622.486  4978.598  5269.410 #> 60    9640.960  11467.796  5220.079  3491.404  5821.417 #> 61   17832.983  11458.550  4761.200  7557.411  5287.258 #> 62   11238.274  12808.108  5596.668  4699.515  4728.679 #> 63    7121.898   9380.010  4698.545  3308.008  3225.541 #> 64    6928.354  11207.632  4986.397  3401.131  4883.420 #> 65   10191.389  12025.916  5916.096  4748.979  5236.058 #> 66   12575.845  11271.841  5553.567  6025.702  6019.892 #> 67   15898.439  18365.270  8826.166  7410.660  7769.640 #> 68   17750.470  16377.253  7021.108  8426.863  8894.121 #> 69   11651.090  11089.613  4916.974  4969.269  6811.463 #> 70   12489.522  10660.552  4952.691  5275.112  6539.900 #> 71   13520.695  16954.364  7040.899  5980.518  5801.608 #> 72    9178.339   8835.853  4224.520  4313.824  3457.338 #> 73   12989.507  13424.739  6416.989  6011.235  6930.706 #> 74   17228.103  17801.701  8416.339  8074.690  8180.107 #> 75   12496.771  16514.729  7953.316  5986.195  7501.474 #> 76    7768.525   8954.246  4481.285  3748.809  4391.471 #> 77   18286.980  20058.643  9279.260  8776.125  8816.869 #> 78   11007.740  13523.704  6329.548  5433.700  6108.691 #> 79   17448.654  18053.113  7929.810  7835.069  7400.597 #> 80    8078.036   8169.740  3913.469  3677.293  3979.679 #> 81   10625.803  10509.414  5000.745  4950.013  5195.732 #> 82   10581.643  10601.086  5258.173  4907.174  4311.171 #> 83   12569.073  14670.903  6607.330  5441.640  6329.251 #> 84    9254.814  12319.257  5882.463  4477.756  4843.006 #> 85    9055.263  10873.608  5057.245  4354.974  3682.023 #> 86    9013.900   8864.631  4395.370  4313.845  4981.607 #> 87   13890.933  11906.060  5418.723  6469.266  6155.065 #> 88    8432.532   5415.193  2404.904  4105.017  2841.780 #> 89   17192.092  19244.706  8065.847  6691.520  6390.106 #> 90   15670.390  16498.445  7549.695  6932.435  8248.637 #> 91   10929.401   9702.210  4442.907  5124.300  4362.045 #> 92   16237.902  17843.151  8395.142  7777.593  8415.474 #> 93   11378.642  14249.578  6798.776  5520.122  6801.925 #> 94   16634.418  17679.065  8336.675  7204.955  8953.574 #> 95   10415.698  10970.891  5351.231  4053.779  3153.034 #> 96    8463.589   8192.303  3787.577  4055.605  4009.551 #> 97    9853.810   9185.831  4286.439  4498.042  4084.347 #> 98   10031.734   8697.144  3951.314  4293.925  3643.810 #> 99   14484.127  14719.063  6612.934  7020.121  6827.318 #> 100   9004.845   8939.443  4225.297  4363.876  3453.647"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","title":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","text":"rollup_mass_props_unc_fast() performs operation rollup_mass_props_unc() omits input validation. somewhat faster  rollup_mass_props_unc() used caution circumstances caller assumes responsibility validity input. behavior passed ill-formed input unspecified.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","text":"","code":"rollup_mass_props_unc_fast(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","text":"","code":"rollup_mass_props_unc_fast(sawe_tree, sawe_table) #>         id  mass       Cx      Cy      Cz     Ixx      Iyy      Izz     Ixy #> 1   Widget 57.83 121.2000  0.0400 -0.1600 7258.90  8607.02 10453.40  834.44 #> 2 2nd Part 16.80  70.9000 -0.9500  0.4600   65.07  1124.65  1078.82   76.01 #> 3 Combined 74.63 109.8657 -0.1829 -0.0204 7341.73 42739.26 44547.27 1559.36 #>        Ixz      Iyz sigma_mass  sigma_Cx  sigma_Cy   sigma_Cz sigma_Ixx #> 1 -1198.38 -1066.58    1.24160 0.2764000 0.2085000 0.06690000  386.9233 #> 2   202.83    13.62    1.73080 0.6234000 0.5173000 0.14050000   12.4687 #> 3 -1401.94 -1060.95    2.13008 0.9580009 0.1999846 0.06178391  387.4017 #>   sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3 2787.8795 2813.9052 1488.0844  418.6026  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"Mass Properties Uncertainties Table SAWE Paper . 3360","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"","code":"sawe_table"},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"data frame columns: id unique key mass mass Cx x component center mass Cy y component center mass Cz z component center mass Ixx Ixx moment inertia Iyy Iyy moment inertia Izz Izz moment inertia Ixy Ixy product inertia Ixz Ixz product inertia Iyz Iyz product inertia sigma_mass mass uncertainty sigma_Cx x component center mass uncertainty sigma_Cy y component center mass uncertainty sigma_Cz z component center mass uncertainty sigma_Ixx Ixx moment inertia uncertainty sigma_Iyy Iyy moment inertia uncertainty sigma_Izz Izz moment inertia uncertainty sigma_Ixy Ixy product inertia uncertainty sigma_Ixz Ixz product inertia uncertainty sigma_Iyz Iyz product inertia uncertainty Ipoint logical indicator consider item point mass POIconv sign convention products inertia (one c(\"+\", \"-\"))","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"Zimmerman, Robert L., John H. Nakai. 2005. “Sure? Uncertainty Mass Properties Engineering.” 64th Annual International Conference Mass Properties Engineering, 123–60. Society Allied Weight Engineers. Note: results combined mass properties uncertainties published example accurate within approximately 0.2%.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"Mass Properties Uncertainties Tree SAWE Paper . 3360","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"","code":"sawe_tree"},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"igraph tree edges child id parent id.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"Zimmerman, Robert L., John H. Nakai. 2005. “Sure? Uncertainty Mass Properties Engineering.” 64th Annual International Conference Mass Properties Engineering, 123–60. Society Allied Weight Engineers.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Set mass properties for a row in a data frame — set_mass_props","title":"Set mass properties for a row in a data frame — set_mass_props","text":"set_mass_props() sets mass properties specified row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set mass properties for a row in a data frame — set_mass_props","text":"","code":"set_mass_props(df, id, mp)"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set mass properties for a row in a data frame — set_mass_props","text":"df data frame id column. id id value desired row. mp list following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. poi_conv Enumeration c(\"+\", \"-\") indicating sign convention products inertia. inertia Numeric 3x3 matrix inertia tensor. signs products inertia determined POIconv. example, Ixy \\(xy\\) element inertia tensor POIconv \"-\"; additive inverse value POIconv \"+\".","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set mass properties for a row in a data frame — set_mass_props","text":"updated data frame columns id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set mass properties for a row in a data frame — set_mass_props","text":"","code":"df <- data.frame(id = c(\"C.1.2.2.3.1.2.3\", \"C.1.2.2.3.2.1.1\")) mp <- get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\") mp$poi_conv = \"+\" set_mass_props(df, \"C.1.2.2.3.2.1.1\", mp) #>                id      mass       Cx        Cy       Cz       Ixx       Iyy #> 1 C.1.2.2.3.1.2.3        NA       NA        NA       NA        NA        NA #> 2 C.1.2.2.3.2.1.1 0.3413137 34.27446 -44.98207 5.211377 0.4986894 0.4528114 #>         Izz        Ixy          Ixz          Iyz POIconv Ipoint #> 1        NA         NA           NA           NA    <NA>     NA #> 2 0.4583186 0.04436985 4.096337e-05 4.510443e-06       +  FALSE"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"set_mass_props_and_unc() convenience wrapper combines results set_mass_props() set_mass_props_unc().","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"","code":"set_mass_props_and_unc(df, id, mpu)"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"df data frame id column. id id value desired row. mpu list containing following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. poi_conv Enumeration c(\"+\", \"-\") indicating sign convention products inertia. inertia Numeric 3x3 matrix inertia tensor. signs products inertia determined POIconv. example, Ixy \\(xy\\) element inertia tensor POIconv \"-\"; additive inverse value POIconv \"+\". sigma_mass Numeric mass uncertainty. sigma_center_mass Numeric 3-vector center mass uncertainties. sigma_inertia Numeric 3x3 matrix inertia tensor uncertainties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"","code":"mpu <- c(get_mass_props_and_unc(sawe_table, \"Widget\"), poi_conv = \"+\") set_mass_props_and_unc(sawe_table, \"Combined\", mpu) #>         id  mass    Cx    Cy    Cz     Ixx     Iyy      Izz    Ixy      Ixz #> 1   Widget 57.83 121.2  0.04 -0.16 7258.90 8607.02 10453.40 834.44 -1198.38 #> 2 2nd Part 16.80  70.9 -0.95  0.46   65.07 1124.65  1078.82  76.01   202.83 #> 3 Combined 57.83 121.2  0.04 -0.16 7258.90 8607.02 10453.40 834.44 -1198.38 #>        Iyz sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy sigma_Izz #> 1 -1066.58     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792  414.5547 #> 2    13.62     1.7308   0.6234   0.5173   0.1405   12.4687  109.1324  108.5481 #> 3 -1066.58     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792  414.5547 #>   sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1 1440.5402  344.6237  124.6860  FALSE       + #> 2   55.8879  212.1241   11.5408  FALSE       + #> 3 1440.5402  344.6237  124.6860  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","title":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","text":"set_mass_props_unc() sets mass properties uncertainties selected row data frame id column.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","text":"","code":"set_mass_props_unc(df, id, mpu)"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","text":"df data frame id column. id id value desired row. mpu list following named elements: sigma_mass Numeric mass uncertainty. sigma_center_mass Numeric 3-vector center mass uncertainties. sigma_inertia Numeric 3x3 matrix inertia tensor uncertainties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","text":"","code":"set_mass_props_unc(sawe_table, \"Combined\", get_mass_props_unc(sawe_table, \"Widget\")) #>         id  mass       Cx      Cy      Cz     Ixx      Iyy      Izz     Ixy #> 1   Widget 57.83 121.2000  0.0400 -0.1600 7258.90  8607.02 10453.40  834.44 #> 2 2nd Part 16.80  70.9000 -0.9500  0.4600   65.07  1124.65  1078.82   76.01 #> 3 Combined 74.63 109.8657 -0.1829 -0.0204 7341.73 42739.26 44547.27 1559.36 #>        Ixz      Iyz sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy #> 1 -1198.38 -1066.58     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792 #> 2   202.83    13.62     1.7308   0.6234   0.5173   0.1405   12.4687  109.1324 #> 3 -1401.94 -1060.95     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792 #>   sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3  414.5547 1440.5402  344.6237  124.6860  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","title":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","text":"set_poi_conv_from_target() sets products inertia sign convention mass properties list target item mass properties table. convention determines products inertia saved data frame. signature set_poi_conv_from_target() can passed override argument update_mass_props() update_mass_props_and_unc(), thus ensuring calculated POI values follow negative integral convention target item written.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","text":"","code":"set_poi_conv_from_target(df, target, mp)"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","text":"df data frame columns id POIconv. target id value target row. mp mass properties list.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","text":"mass properties list named element poi_conv set POIconv column target row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","text":"","code":"set_poi_conv_from_target(mp_table, \"C.1.2.2.3.2.1\", get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\")) #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>  #> $poi_conv #> [1] \"-\" #>"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":null,"dir":"Reference","previous_headings":"","what":"Set POI sign convention for mass properties list to ","title":"Set POI sign convention for mass properties list to ","text":"set_poi_conv_minus() sets products inertia sign convention mass properties list \"-\". convention determines products inertia saved data set. signature set_poi_conv_minus() can passed override argument update_mass_props() update_mass_props_and_unc(), thus ensuring calculated POI values saved using negative integral convention.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set POI sign convention for mass properties list to ","text":"","code":"set_poi_conv_minus(ds, target, mp)"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set POI sign convention for mass properties list to ","text":"ds Ignored. target Ignored. mp mass properties list.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set POI sign convention for mass properties list to ","text":"mass properties list named element poi_conv set \"-\"","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set POI sign convention for mass properties list to ","text":"","code":"set_poi_conv_minus(NULL, NULL, get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\")) #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>  #> $poi_conv #> [1] \"-\" #>"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Set POI sign convention for mass properties list to ","title":"Set POI sign convention for mass properties list to ","text":"set_poi_conv_plus() sets products inertia sign convention mass properties list \"+\". convention determines products inertia saved data set. signature set_poi_conv_plus() can passed override argument update_mass_props() update_mass_props_and_unc(), thus ensuring calculated POI values saved using positive integral convention.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set POI sign convention for mass properties list to ","text":"","code":"set_poi_conv_plus(ds, target, mp)"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set POI sign convention for mass properties list to ","text":"ds Ignored. target Ignored. mp mass properties list.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set POI sign convention for mass properties list to ","text":"input mass properties list named element poi_conv set \"+\"","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set POI sign convention for mass properties list to ","text":"","code":"set_poi_conv_plus(NULL, NULL, get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\")) #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>  #> $poi_conv #> [1] \"+\" #>"},{"path":"https://jsjuni.github.io/massProps/reference/test_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Table — test_table","title":"Example Mass Properties Table — test_table","text":"Example Mass Properties Table","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Table — test_table","text":"","code":"test_table"},{"path":"https://jsjuni.github.io/massProps/reference/test_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Table — test_table","text":"data frame columns: id unique key parent parent key mass mass Cx x component center mass Cy y component center mass Cz z component center mass Ixx Ixx moment inertia Iyy Iyy moment inertia Izz Izz moment inertia Ixy Ixy product inertia Ixz Ixz product inertia Iyz Iyz product inertia POIconv sign convention products inertia (one c(\"+\", \"-\")) Ipoint logical indicator consider item point mass","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Tree — test_tree","title":"Example Mass Properties Tree — test_tree","text":"Example Mass Properties Tree","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Tree — test_tree","text":"","code":"test_tree"},{"path":"https://jsjuni.github.io/massProps/reference/test_tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Tree — test_tree","text":"igraph tree edges child id parent id.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Update mass properties — update_mass_props","title":"Update mass properties — update_mass_props","text":"update_mass_props() updates mass properties specified target row specified source rows data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update mass properties — update_mass_props","text":"","code":"update_mass_props(df, target, sources, override = set_poi_conv_from_target)"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update mass properties — update_mass_props","text":"df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint. target id value target row. sources List id values source rows. override override function, called override(df, target, value). default override sets POI sign convention computed aggregate POIconv column target row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update mass properties — update_mass_props","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update mass properties — update_mass_props","text":"","code":"leaves <- names(igraph::neighbors(test_tree, \"A.3\", mode = \"in\")) update_mass_props(test_table, \"A.3\", leaves) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 2  A.2    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Update mass properties and uncertainties — update_mass_props_and_unc","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"update_mass_props_and_unc() updates mass properties uncertainties specified target row specified source rows data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"","code":"update_mass_props_and_unc(   df,   target,   sources,   override = set_poi_conv_from_target )"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz. target id value target row. sources List id values source rows. override override function, called override(df, target, value). default override sets POI sign convention computed aggregate POIconv column target row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"","code":"leaves <- list(\"Widget\", \"2nd Part\") update_mass_props_and_unc(sawe_table, \"Combined\", leaves) #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 1   Widget 57.83 121.2000  0.0400000 -0.16000000 7258.900  8607.02 10453.40 #> 2 2nd Part 16.80  70.9000 -0.9500000  0.46000000   65.070  1124.65  1078.82 #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz sigma_mass sigma_Cx  sigma_Cy   sigma_Cz #> 1  834.440 -1198.380 -1066.580    1.24160  0.27640 0.2085000 0.06690000 #> 2   76.010   202.830    13.620    1.73080  0.62340 0.5173000 0.14050000 #> 3 1558.714 -1401.534 -1060.951    2.13008  0.95821 0.1999847 0.06178402 #>   sigma_Ixx sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  386.9233  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2   12.4687  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3  387.4017 2789.3133 2815.3260 1488.0948  418.6048  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Update mass properties uncertainties — update_mass_props_unc","title":"Update mass properties uncertainties — update_mass_props_unc","text":"update_mass_props_unc() updates mass properties uncertainties specified target row specified source rows data frame (least) columns: id, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update mass properties uncertainties — update_mass_props_unc","text":"","code":"update_mass_props_unc(df, target, sources, override = set_poi_conv_from_target)"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update mass properties uncertainties — update_mass_props_unc","text":"df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz. target id value target row. sources List id values source rows. override override function, called override(df, target, value). default override sets POI sign convention computed aggregate POIconv column target row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update mass properties uncertainties — update_mass_props_unc","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update mass properties uncertainties — update_mass_props_unc","text":"","code":"leaves <- names(igraph::neighbors(sawe_tree, \"Combined\", mode = \"in\")) update_mass_props_unc(sawe_table, \"Combined\", leaves) #>         id  mass       Cx      Cy      Cz     Ixx      Iyy      Izz     Ixy #> 1   Widget 57.83 121.2000  0.0400 -0.1600 7258.90  8607.02 10453.40  834.44 #> 2 2nd Part 16.80  70.9000 -0.9500  0.4600   65.07  1124.65  1078.82   76.01 #> 3 Combined 74.63 109.8657 -0.1829 -0.0204 7341.73 42739.26 44547.27 1559.36 #>        Ixz      Iyz sigma_mass  sigma_Cx  sigma_Cy   sigma_Cz sigma_Ixx #> 1 -1198.38 -1066.58    1.24160 0.2764000 0.2085000 0.06690000  386.9233 #> 2   202.83    13.62    1.73080 0.6234000 0.5173000 0.14050000   12.4687 #> 3 -1401.94 -1060.95    2.13008 0.9580009 0.1999846 0.06178391  387.4017 #>   sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3 2787.8795 2813.9052 1488.0844  418.6026  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate mass properties — validate_mass_props","title":"Validate mass properties — validate_mass_props","text":"validate_mass_props() ensures mass properties list satisfies following constraints: mass non-missing positive center_mass 3-vector non-missing numeric values point TRUE FALSE point FALSE: inertia positive definite eigenvalues \\(\\{\\lambda_1, \\lambda_2, \\lambda_3\\}\\)  inertia satisfy triangle inequalities: \\(\\lambda_1 < \\lambda_2 + \\lambda_3\\) \\(\\lambda_2 < \\lambda_1 + \\lambda_3\\) \\(\\lambda_3 < \\lambda_1 + \\lambda_2\\)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate mass properties — validate_mass_props","text":"","code":"validate_mass_props(mp)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate mass properties — validate_mass_props","text":"mp Mass properties list containing following named elements mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate mass properties — validate_mass_props","text":"TRUE valid, stops otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate mass properties — validate_mass_props","text":"","code":"mp <- get_mass_props(test_table, \"C.1\") validate_mass_props(mp) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate mass properties and uncertainties — validate_mass_props_and_unc","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"validate_mass_props_and_unc() convenience wrapper calculates logical conjunction validate_mass_props() validate_mass_props_unc().","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"","code":"validate_mass_props_and_unc(mpu)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"mpu Mass properties uncertainties list containing following named elements mass mass (numeric) center_mass center mass (3-dimensional numeric) inertia Inertia tensor (3x3 numeric matrix) point Logical indicating point mass, .e., negligible inertia sigma_mass mass uncertainty sigma_center_mass center mass uncertainty (3-dimensional numeric) sigma_inertia Inertia tensor uncertainty (3x3 numeric matrix)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"TRUE valid, stops otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"","code":"mpu <- get_mass_props_and_unc(sawe_table, \"Widget\") validate_mass_props_and_unc(mpu) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"validate_mass_props_and_unc() calls validate_mass_props_table() applies checks validate_mass_props_and_unc() every row data frame corresponding leaf vertex tree.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"","code":"validate_mass_props_and_unc_table(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"TRUE valid, stops error otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"","code":"validate_mass_props_and_unc_table(mp_tree, mp_table) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a mass properties table — validate_mass_props_table","title":"Validate a mass properties table — validate_mass_props_table","text":"validate_mass_props_table() checks names vertices tree id values data frame identical. applies checks validate_mass_props() every row data frame corresponding leaf vertex tree. validate_mass_props_table() ensures id column table vertices tree contain identifiers, mass properties every leaf element table valid.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a mass properties table — validate_mass_props_table","text":"","code":"validate_mass_props_table(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a mass properties table — validate_mass_props_table","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a mass properties table — validate_mass_props_table","text":"TRUE valid, stops error otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a mass properties table — validate_mass_props_table","text":"","code":"validate_mass_props_table(mp_tree, mp_table) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate mass properties uncertainties — validate_mass_props_unc","title":"Validate mass properties uncertainties — validate_mass_props_unc","text":"validate_mass_props_unc() ensures mass properties uncertainties list satisfies following constraints: sigma_mass non-missing non-negative sigma_center_mass 3-vector non-missing non-negative values point FALSE, sigma_inertia contains missing negative values","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate mass properties uncertainties — validate_mass_props_unc","text":"","code":"validate_mass_props_unc(mp)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate mass properties uncertainties — validate_mass_props_unc","text":"mp Mass properties uncertainties list containing following named elements point Logical indicating point mass, .e., negligible inertia sigma_mass mass uncertainty sigma_center_mass center mass uncertainty (3-dimensional numeric) sigma_inertia Inertia tensor uncertainty (3x3 numeric matrix)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate mass properties uncertainties — validate_mass_props_unc","text":"TRUE valid, stops otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate mass properties uncertainties — validate_mass_props_unc","text":"","code":"mp <- get_mass_props_and_unc(sawe_table, \"Widget\") validate_mass_props_unc(mp) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/news/index.html","id":"massprops-development-version","dir":"Changelog","previous_headings":"","what":"massProps (development version)","title":"massProps (development version)","text":"Numeric subscripts replaced symbolic (e.g., [1] -> [“x”]) (#25). Q expressions restored inertia computations (#27, #31). code now aligns better documentation.","code":""},{"path":"https://jsjuni.github.io/massProps/news/index.html","id":"massprops-020","dir":"Changelog","previous_headings":"","what":"massProps 0.2.0","title":"massProps 0.2.0","text":"CRAN release: 2025-01-30 Initial CRAN submission.","code":""}]
