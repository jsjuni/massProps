[{"path":"https://jsjuni.github.io/massProps/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 massProps authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"massProps","text":"massProps package extends rollupTree functions recursively calculate mass properties (optionally, uncertainties) arbitrary decomposition trees. Formulas implemented described technical paper published Society Allied Weight Engineers (Zimmerman Nakai 2005).","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"data-structures","dir":"Articles","previous_headings":"Synopsis","what":"Data Structures","title":"massProps","text":"massProps operates two fundamental data structures: mass properties table tree. mass properties table entry every item tree structure items; edges tree convey parent-child relations among items. two data structures linked id column data frame, must character vector unique item identifiers, vertex names tree. sets identifiers must identical.","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"required-columns-for-mass-properties","dir":"Articles","previous_headings":"Synopsis > Data Structures > Mass Property Table","what":"Required Columns for Mass Properties","title":"massProps","text":"Mass Property Table must contain following columns. columns may exist remain unmodified. id unique identifier item (row) mass mass item (numeric) Cx xx-component center mass (numeric) Cy yy-component center mass (numeric) Cx zz-component center mass (numeric) Ixx moment inertia xx axis (numeric) Iyy moment inertia yy axis (numeric) Izz moment inertia zz axis (numeric) Ixy product inertia relative xx yy axes (numeric) Ixz product inertia relative xx zz axes (numeric) Iyz product inertia relative yy zz axes (numeric) POIconv either ‘+’ ‘-’, indicating sign convention products inertia. negative convention, example, IXY≡−∫xyρdVI_{XY} \\equiv -\\int{xy \\rho \\, dV}. positive convention, IXY≡∫xyρdVI_{XY} \\equiv \\int{xy \\rho \\, dV}. Ipoint logical indicator item considered point mass. algebraic result can achieved setting moments products inertia zero, rollup_mass_props() default ensures leaf items tree mass properties correspond physically-realizable objects. zero inertia tensor fail check. Rather relax check (essential trustworthy results), TRUE value Ipoint indicates inertia tensor excluded computations.","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"required-columns-for-mass-properties-uncertainties","dir":"Articles","previous_headings":"Synopsis > Data Structures > Mass Property Table","what":"Required Columns for Mass Properties Uncertainties","title":"massProps","text":"following columns required uncertainty calculations: sigma_mass mass uncertainty (numeric) sigma_Cx xx-component center mass uncertainty (numeric) sigma_Cy yy-component center mass uncertainty (numeric) sigma_Cx zz-component center mass uncertainty (numeric) sigma_Ixx moment inertia xx axis uncertainty (numeric) sigma_Iyy moment inertia yy axis uncertainty (numeric) sigma_Izz moment inertia zz axis uncertainty (numeric) sigma_Ixy product inertia relative xx yy axes uncertainty (numeric) sigma_Ixz product inertia relative xx zz axes uncertainty (numeric) sigma_Iyz product inertia relative yy zz axes uncertainty (numeric) caller’s responsibility ensure values expressed appropriate compatible units.","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"tree","dir":"Articles","previous_headings":"Synopsis > Data Structures > Mass Property Table","what":"Tree","title":"massProps","text":"tree igraph::graph vertices named identifiers mass properties table. can arbitrary depth shape long satisfies certain well-formedness properties: connected acyclic (undirected graph), .e., tree directed, edge direction going child parent contains neither loops (self-edges) multiple edges contains single root vertex (.e., one whose degree zero)","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"invocation","dir":"Articles","previous_headings":"Synopsis","what":"Invocation","title":"massProps","text":"Suppose following mass properties table: Suppose also tree:  can compute mass properties non-leaf elements calling rollup_mass_props(): Note , although table shows parent element clarity exposition, child-parent relations coneveyed tree passed first argument. input may also contain uncertainties data. example Society Allied Weight Engineers:","code":"library(massProps) test_table #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 2  A.2    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 3  A.3    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE library(igraph) test_tree #> IGRAPH 7d8200c DN-- 12 11 --  #> + attr: name (v/c) #> + edges from 7d8200c (vertex names): #>  [1] A.2->A.1 A.3->A.1 C.1->A.1 P.1->A.2 P.2->A.2 P.3->A.2 P.4->A.2 P.5->A.3 #>  [9] P.6->A.3 P.7->A.3 P.8->A.3 rollup_mass_props(test_tree, test_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE sawe_input #>         id  mass    Cx    Cy    Cz     Ixx     Iyy      Izz    Ixy      Ixz #> 1   Widget 57.83 121.2  0.04 -0.16 7258.90 8607.02 10453.40 834.44 -1198.38 #> 2 2nd Part 16.80  70.9 -0.95  0.46   65.07 1124.65  1078.82  76.01   202.83 #> 3 Combined    NA    NA    NA    NA      NA      NA       NA     NA       NA #>        Iyz sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy sigma_Izz #> 1 -1066.58     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792  414.5547 #> 2    13.62     1.7308   0.6234   0.5173   0.1405   12.4687  109.1324  108.5481 #> 3       NA         NA       NA       NA       NA        NA        NA        NA #>   sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1 1440.5402  344.6237  124.6860  FALSE       + #> 2   55.8879  212.1241   11.5408  FALSE       + #> 3        NA        NA        NA  FALSE       + rollup_mass_props_and_unc(sawe_tree, sawe_input) #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 1   Widget 57.83 121.2000  0.0400000 -0.16000000 7258.900  8607.02 10453.40 #> 2 2nd Part 16.80  70.9000 -0.9500000  0.46000000   65.070  1124.65  1078.82 #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz sigma_mass sigma_Cx  sigma_Cy   sigma_Cz #> 1  834.440 -1198.380 -1066.580    1.24160  0.27640 0.2085000 0.06690000 #> 2   76.010   202.830    13.620    1.73080  0.62340 0.5173000 0.14050000 #> 3 1558.714 -1401.534 -1060.951    2.13008  0.95821 0.1999847 0.06178402 #>   sigma_Ixx sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  386.9233  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2   12.4687  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3  387.4017 2789.3133 2815.3260 1488.0948  418.6048  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"objectives-and-strategy","dir":"Articles","previous_headings":"","what":"Objectives and Strategy","title":"massProps","text":"objective package provide trustworthy, well-documented, reference implementation computation mass properties (uncertainties) aggregate objects parts. Aggregation can recursive (e.g., indentured Bill Materials), must accommodate trees arbitrary depth shape. Strategies achieving objective include basing calculations published industry references, re-casting lengthy reference equations concise vector matrix forms reduce error surface source code exploit capabilities R, treats vectors matrices first-class objects, delegating orchestration rollupTree package, , among things, verifies input tree well-formed ensures proper ordering computations, ensuring asserted leaf mass properties uncertainties correspond physically-realizable objects, coding pure functional style, (.e., avoiding mutable variables, implying iteration Map() Reduce()), covering entire code base unit tests. author intentionally made effort micro-optimize performance. particular, author aware representing inertia uncertainty 3 ⨉ 3 matrices “inefficient” degree independently calculates values redundant symmetry. “Inefficient”, however, mean “slow”. See Performance Evaluation .","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"theory","dir":"Articles","previous_headings":"","what":"Theory","title":"massProps","text":"section, state reference equations (Zimmerman Nakai 2005) show, applicable, equations can rewritten concise form. form equations actually implemented displayed within box, e.g. F=ma\\boxed{F = ma}. reference uses word weight symbol ww equations. interpret weight mass. reference refers center mass xx, yy, zz components. Symbols moments (IXXI_{XX}) products (IXYI_{XY}) inertia conventional. Variables ii subscripts designate properties parts; without designate properties aggregates. letter σ\\sigma denotes uncertainty. σw\\sigma_w, example, mass uncertainty.","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass","dir":"Articles","previous_headings":"Theory > Mass Properties","what":"Mass","title":"massProps","text":"mass equation suitable . w=∑=1nwi \\boxed{ w = \\sum_{=1}^{n}w_i } corresponding R code following code snippets, variable mpl list input mass property sets parts, variable mp formal parameter anonymous function applied member mpl, amp resulting aggregate mass property set. line R functional programming idiom “set mass value aggregate sum mass values parts”.","code":"amp$mass <- Reduce(`+`, Map(f = function(mp) mp$mass, mpl))"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass","dir":"Articles","previous_headings":"Theory > Mass Properties","what":"Center of Mass","title":"massProps","text":"x‾=∑=1nwixi/∑=1nwiy‾=∑=1nwiyi/∑=1nwiz‾=∑=1nwizi/∑=1nwi \\begin{align} \\bar{x} & = \\sum_{=1}^{n}{w_i}{{x}_i} \\bigg/ \\sum_{=1}^{n}w_i\\\\ \\bar{y} & = \\sum_{=1}^{n}{w_i}{{y}_i} \\bigg/ \\sum_{=1}^{n}w_i\\\\ \\bar{z} & = \\sum_{=1}^{n}{w_i}{{z}_i} \\bigg/ \\sum_{=1}^{n}w_i\\\\ \\end{align} can express center mass 3-vector: 𝐜i=(xiyizi)T𝐜‾=(x‾y‾z‾)T \\boxed{ \\begin{align} \\boldsymbol{c}_i & = (x_i \\quad y_i \\quad z_i)^T \\\\ \\boldsymbol{\\bar{c}}& = (\\bar{x} \\quad \\bar{y} \\quad \\bar{z})^T \\end{align} } 𝐜‾=1w∑=1nwi𝐜i \\boxed{ \\boldsymbol{\\bar{c}} = \\frac{1}{w} \\sum_{=1}^{n}{w_i}{{\\boldsymbol{c}}_i} } corresponding R code ","code":"amp$center_mass <- Reduce(`+`, Map(f = function(mp) mp$mass * mp$center_mass, mpl)) / amp$mass"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia","dir":"Articles","previous_headings":"Theory > Mass Properties > Inertia Tensor","what":"Moments of Inertia","title":"massProps","text":"IXX=∑=1n[IXXi+wi(yi2+zi2)−wi(y‾2+z‾2)]=∑=1n{IXXi+wi[(yi−y‾)2+(zi−z‾)2]}IYY=∑=1n[IYYi+wi(xi2+zi2)−wi(x‾2+z‾2)]=∑=1n{IYYi+wi[(xi−x‾)2+(zi−z‾)2]}IZZ=∑=1n[IZZi+wi(xi2+yi2)−wi(x‾2+y‾2)]=∑=1n{IZZi+wi[(xi−x‾)2+(yi−y‾)2]} \\begin{align} I_{XX}& =    \\sum_{=1}^{n} \\left[ {I_{XX}}_i     + w_i \\left( {y}_i^2 + {z}_i^2 \\right)   - w_i \\left( \\bar{y}^2 + \\bar{z}^2 \\right)   \\right]   & =  \\sum_{=1}^{n} \\left\\{ {I_{XX}}_i   + w_i \\left[ \\left( {y}_i - \\bar{y} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2 \\right]   \\right\\}  \\\\ I_{YY}& =    \\sum_{=1}^{n} \\left[ {I_{YY}}_i     + w_i \\left( {x}_i^2 + {z}_i^2 \\right)   - w_i \\left( \\bar{x}^2 + \\bar{z}^2 \\right)   \\right]   & =  \\sum_{=1}^{n} \\left\\{ {I_{YY}}_i   + w_i \\left[ \\left( {x}_i - \\bar{x} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2 \\right]   \\right\\}  \\\\ I_{ZZ}& =    \\sum_{=1}^{n} \\left[ {I_{ZZ}}_i     + w_i \\left( {x}_i^2 + {y}_i^2 \\right)   - w_i \\left( \\bar{x}^2 + \\bar{y}^2 \\right)   \\right]   & =  \\sum_{=1}^{n} \\left\\{ {I_{ZZ}}_i   + w_i \\left[ \\left( {x}_i - \\bar{x} \\right)^2 + \\left( {y}_i - \\bar{y} \\right)^2 \\right]   \\right\\}  \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia","dir":"Articles","previous_headings":"Theory > Mass Properties > Inertia Tensor","what":"Products of Inertia","title":"massProps","text":"IXY=∑=1n[IXYi+wixiyi−wi(x‾y‾)]=∑=1n[IXYi+wi(xi−x‾)(yi−y‾)]IXZ=∑=1n[IXZi+wixizi−wi(x‾z‾)]=∑=1n[IXZi+wi(xi−x‾)(zi−z‾)]IYZ=∑=1n[IYZi+wiyizi−wi(y‾z‾)]=∑=1n[IYZi+wi(yi−y‾)(zi−z‾)] \\begin{align} I_{XY}& = \\sum_{=1}^{n} \\left[ {I_{XY}}_i + w_i {{x}_i}{{y}_i} -w_i (\\bar{x}\\bar{y})\\right] & = \\sum_{=1}^{n} \\left[ {I_{XY}}_i + w_i ({x}_i - \\bar{x})({y}_i - \\bar{y})\\right] \\\\ I_{XZ}& = \\sum_{=1}^{n} \\left[ {I_{XZ}}_i + w_i {{x}_i}{{z}_i} -w_i (\\bar{x}\\bar{z})\\right] & = \\sum_{=1}^{n} \\left[ {I_{XZ}}_i + w_i ({x}_i - \\bar{x})({z}_i - \\bar{z})\\right] \\\\ I_{YZ}& = \\sum_{=1}^{n} \\left[ {I_{YZ}}_i + w_i {{y}_i}{{z}_i} -w_i (\\bar{y}\\bar{z})\\right] & = \\sum_{=1}^{n} \\left[ {I_{YZ}}_i + w_i ({y}_i - \\bar{y})({z}_i - \\bar{z})\\right] \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"matrix-formulation","dir":"Articles","previous_headings":"Theory > Mass Properties > Inertia Tensor","what":"Matrix Formulation","title":"massProps","text":"Let 𝐈\\boldsymbol{} inertia tensor aggregate 𝐈i\\boldsymbol{}_i part ii. equations products inertia clearly follow positive integral convention, 𝐈=[IXX−IXY−IXZ−IXYIYY−IYZ−IXZ−IYZIZZ] \\boldsymbol{} = \\left[ \\begin{array}{rrr} I_{XX}&            -I_{XY}&             -I_{XZ}\\\\            -I_{XY}& I_{YY}&             -I_{YZ}\\\\            -I_{XZ}&            -I_{YZ}&  I_{ZZ}\\\\ \\end{array} \\right] similarly 𝐈i\\boldsymbol{}_i. Noting repeated appearance terms form (xi−x‾)(yi−y‾)({x}_i - \\bar{x})({y}_i - \\bar{y}), form outer product 𝐝i=((xi−x‾)(yi−y‾)(zi−z‾))T𝐐i=𝐝i𝐝iT \\boxed{ \\begin{align} \\boldsymbol{d}_i & = (({x}_i - \\bar{x}) \\quad ({y}_i - \\bar{y}) \\quad ({z}_i - \\bar{z}))^T \\\\ \\boldsymbol{Q}_i & = \\boldsymbol{d}_i {\\boldsymbol{d}_i}^T \\end{align} }  𝐐i=[(xi−x‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(yi−y‾)(xi−x‾)(yi−y‾)2(yi−y‾)(zi−z‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)2] \\begin{align} \\boldsymbol{Q}_i & = \\begin{bmatrix} ({x}_i - \\bar{x})^2     & ({x}_i - \\bar{x})({y}_i - \\bar{y}) & ({x}_i - \\bar{x})({z}_i - \\bar{z}) \\\\ ({y}_i - \\bar{y})({x}_i - \\bar{x}) & ({y}_i - \\bar{y})^2     & ({y}_i - \\bar{y})({z}_i - \\bar{z}) \\\\ ({z}_i - \\bar{z})({x}_i - \\bar{x}) & ({z}_i - \\bar{z})({y}_i - \\bar{y}) & ({z}_i - \\bar{z})^2     \\\\ \\end{bmatrix} \\end{align} Let 𝐬i\\boldsymbol{s}_i matrix inertia tensor summands reference equations. , 𝐈=∑=1n𝐬i \\boldsymbol{} = \\sum_{=1}^{n} \\boldsymbol{s}_i 𝐬i=𝐈i−wi[−(yi−y‾)2−(zi−z‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(xi−x‾)(yi−y‾)−(xi−x‾)2−(zi−z‾)2(yi−y‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)−(xi−x‾)2−(yi−y‾)2]=𝐈i−wi[(xi−x‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(xi−x‾)(yi−y‾)(yi−y‾)2(yi−y‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)(zi−z‾)2]−wi[−(xi−x‾)2−(yi−y‾)2−(zi−z‾)2000−(xi−x‾)2−(yi−y‾)2−(zi−z‾)2000−(xi−x‾)2−(yi−y‾)2−(zi−z‾)2]=𝐈i−wi(𝐐i−tr(𝐐i)𝟏3) \\begin{align} \\boldsymbol{s}_i & = \\boldsymbol{}_i \\\\ & - w_i \\begin{bmatrix} -({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 & ({x}_i - \\bar{x})({y}_i - \\bar{y})         & ({x}_i - \\bar{x})({z}_i - \\bar{z})         \\\\ ({x}_i - \\bar{x})({y}_i - \\bar{y})         & -({x}_i - \\bar{x})^2 - ({z}_i - \\bar{z})^2 &  ({y}_i - \\bar{y})({z}_i - \\bar{z})        \\\\ ({x}_i - \\bar{x})({z}_i - \\bar{z})         & ({y}_i - \\bar{y})({z}_i - \\bar{z})         & -({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 \\\\ \\end{bmatrix} \\\\ & = \\boldsymbol{}_i \\\\ & - w_i \\begin{bmatrix} ({x}_i - \\bar{x})^2     & ({x}_i - \\bar{x})({y}_i - \\bar{y}) & ({x}_i - \\bar{x})({z}_i - \\bar{z}) \\\\ ({x}_i - \\bar{x})({y}_i - \\bar{y}) & ({y}_i - \\bar{y})^2     & ({y}_i - \\bar{y})({z}_i - \\bar{z}) \\\\ ({x}_i - \\bar{x})({z}_i - \\bar{z}) & ({y}_i - \\bar{y})({z}_i - \\bar{z}) & ({z}_i - \\bar{z})^2     \\\\ \\end{bmatrix} \\\\ & - w_i \\begin{bmatrix} -({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 & 0                               & 0                              \\\\ 0                               & -({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 & 0                              \\\\ 0                               & 0                               &-({x}_i - \\bar{x})^2 - ({y}_i - \\bar{y})^2 - ({z}_i - \\bar{z})^2 \\\\ \\end{bmatrix} \\\\ & = \\boldsymbol{}_i - w_i \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i) \\boldsymbol{1}_3 \\right) \\end{align} tr(𝐐i)\\mathrm{tr}(\\boldsymbol{Q}_i) trace 𝐐i\\boldsymbol{Q}_i, .e., sum diagonal elements, 𝟏3\\boldsymbol{1}_3 3⨉3 identity matrix. Therefore 𝐈=∑=1n(𝐈i−wi𝐌i) \\boxed{ \\boldsymbol{} = \\sum_{=1}^{n} \\left( \\boldsymbol{}_i - w_i \\boldsymbol{M}_i \\right) }  𝐌i=𝐐i−tr(𝐐i)𝟏3 \\boxed{ \\boldsymbol{M}_i = \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i) \\boldsymbol{1}_3 } corresponding R code ","code":"amp$inertia <- Reduce(`+`, Map(     f  = function(mp) {       d <- amp$center_mass - mp$center_mass       Q <- outer(d, d)       M <- Q - sum(diag(Q)) * diag(3)       if (mp$point) -mp$mass * M else mp$inertia - mp$mass * M     },     mpl   ))"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass-uncertainty","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties","what":"Mass Uncertainty","title":"massProps","text":"mass uncertainty equation suitable . σw=∑=1nσwi2 \\boxed{ \\sigma_w = \\sqrt{ \\sum_{=1}^n {{\\sigma_w}_i}^2 } } corresponding R code ","code":"amp$sigma_mass = sqrt(Reduce(`+`, Map(f = function(v) v$sigma_mass^2, mpl)))"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass-uncertainty","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties","what":"Center of Mass Uncertainty","title":"massProps","text":"σx‾=∑=1n{(wiσx‾)2+[σwi(xi−x‾)]2}/∑=1nwiσy‾=∑=1n{(wiσy‾)2+[σwi(yi−y‾)]2}/∑=1nwiσz‾=∑=1n{(wiσz‾)2+[σwi(zi−z‾)]2}/∑=1nwi \\begin{align} \\sigma_\\bar{x} & =    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\sigma_\\bar{x}}}_i)^2 + [{\\sigma_w}_i ({x}_i - \\bar{x})]^2 \\right\\} }   \\bigg/ \\sum_{=1}^{n}w_i \\\\  \\\\ \\sigma_\\bar{y} & =    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\sigma_\\bar{y}}}_i)^2 + [{\\sigma_w}_i ({y}_i - \\bar{y})]^2 \\right\\} }   \\bigg/ \\sum_{=1}^{n}w_i \\\\  \\\\ \\sigma_\\bar{z} & =    \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\sigma_\\bar{z}}}_i)^2 + [{\\sigma_w}_i ({z}_i - \\bar{z})]^2 \\right\\} }   \\bigg/ \\sum_{=1}^{n}w_i \\\\  \\\\ \\end{align} , create 3-vector center mass uncertainties. Let 𝛔𝐜=(σx‾σy‾σz‾)T𝛔𝐜i=(σx‾iσy‾iσz‾)T \\boxed{ \\begin{align} \\boldsymbol{\\sigma_c} & = (\\sigma_\\bar{x} \\quad \\sigma_\\bar{y} \\quad \\sigma_\\bar{z})^T \\\\ {\\boldsymbol{\\sigma_c}}_i & = ({\\sigma_\\bar{x}}_i \\quad {\\sigma_\\bar{y}}_i \\quad {\\sigma_\\bar{z}}_i)^T \\end{align} } construe (R ) squaring taking square roots vectors element-wise, 𝛔𝐜=1w∑=1n{(wi𝛔𝐜i)2+[σwi(𝐜i−𝐜‾)]2} \\boxed{ \\boldsymbol{\\sigma_c} = \\frac{1}{w}   \\sqrt{ \\sum_{=1}^n \\left\\{ (w_i {{\\boldsymbol{\\sigma_c}}}_i)^2 + [{\\sigma_w}_i ({\\boldsymbol{c}}_i - \\bar{\\boldsymbol{c}})]^2 \\right\\}} } corresponding R code ","code":"amp$sigma_center_mass = sqrt(Reduce(`+`, Map(     f = function(v) {       (v$mass * v$sigma_center_mass)^2 +         (v$sigma_mass * (v$center_mass - amp$center_mass))^2     },     mpl   ))) / amp$mass"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia-uncertainties","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties > Inertia Tensor Uncertainty","what":"Moments of Inertia Uncertainties","title":"massProps","text":"σIXX=∑=1n{σIXXi2+[2wi(yi−y‾)σyi]2+[2wi(zi−z‾)σzi]2+[((yi−y‾)2+(zi−z‾)2)σwi]2}σIYY=∑=1n{σIYYi2+[2wi(xi−x‾)σxi]2+[2wi(zi−z‾)σzi]2+[((xi−x‾)2+(zi−z‾)2)σwi]2}σIZZ=∑=1n{σIZZi2+[2wi(xi−x‾)σxi]2+[2wi(yi−y‾)σyi]2+[((xi−x‾)2+(yi−y‾)2)σwi]2} \\begin{align} \\sigma_{I_{XX}} & = \\sqrt{ \\sum_{=1}^n \\left\\{   \\sigma_{{I_{XX}}_i}^2 + \\left[ 2 w_i ({y}_i - \\bar{y}) \\sigma_{{y}_i} \\right]^2 + \\left[ 2 w_i ({z}_i - \\bar{z}) \\sigma_{{z}_i} \\right]^2 + \\left[ \\left(({y}_i - \\bar{y})^2 + ({z}_i - \\bar{z})^2 \\right)\\sigma_{w_i}\\right]^2 \\right\\} }  \\\\ \\sigma_{I_{YY}} & = \\sqrt{ \\sum_{=1}^n \\left\\{   \\sigma_{{I_{YY}}_i}^2 + \\left[ 2 w_i ({x}_i - \\bar{x}) \\sigma_{{x}_i} \\right]^2 + \\left[ 2 w_i ({z}_i - \\bar{z}) \\sigma_{{z}_i} \\right]^2 + \\left[ \\left(({x}_i - \\bar{x})^2 + ({z}_i - \\bar{z})^2 \\right)\\sigma_{w_i}\\right]^2 \\right\\} }  \\\\ \\sigma_{I_{ZZ}} & = \\sqrt{ \\sum_{=1}^n \\left\\{   \\sigma_{{I_{ZZ}}_i}^2 + \\left[ 2 w_i ({x}_i - \\bar{x}) \\sigma_{{x}_i} \\right]^2 + \\left[ 2 w_i ({y}_i - \\bar{y}) \\sigma_{{y}_i} \\right]^2 + \\left[ \\left(({x}_i - \\bar{x})^2 + ({y}_i - \\bar{y})^2 \\right)\\sigma_{w_i}\\right]^2 \\right\\} }  \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia-uncertainties","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties > Inertia Tensor Uncertainty","what":"Products of Inertia Uncertainties","title":"massProps","text":"σIXY=∑=1n{σIXYi2+[(xi−x‾)wiσyi]2+[(xi−x‾)(yi−y‾)σwi]2+[(yi−y‾)wiσxi]2}σIXZ=∑=1n{σIXZi2+[(xi−x‾)wiσzi]2+[(xi−x‾)(zi−z‾)σwi]2+[(zi−z‾)wiσxi]2}σIYZ=∑=1n{σIYZi2+[(yi−y‾)wiσzi]2+[(yi−y‾)(zi−z‾)σwi]2+[(zi−z‾)wiσyi]2} \\begin{align} \\sigma_{I_{XY}} & = \\sqrt{ \\sum_{=1}^n \\left\\{   \\sigma_{{I_{XY}}_i}^2 + \\left[ ({x}_i - \\bar{x}) w_i \\sigma_{{y}_i}\\right]^2 + \\left[ ({x}_i - \\bar{x})({y}_i - \\bar{y})\\sigma_{w_i} \\right]^2 + \\left[ ({y}_i - \\bar{y})  w_i \\sigma_{{x}_i} \\right]^2 \\right\\} }  \\\\ \\sigma_{I_{XZ}} & = \\sqrt{ \\sum_{=1}^n \\left\\{   \\sigma_{{I_{XZ}}_i}^2 + \\left[ ({x}_i - \\bar{x}) w_i \\sigma_{{z}_i}\\right]^2 + \\left[ ({x}_i - \\bar{x})({z}_i - \\bar{z})\\sigma_{w_i} \\right]^2 + \\left[ ({z}_i - \\bar{z})  w_i \\sigma_{{x}_i} \\right]^2 \\right\\} }  \\\\ \\sigma_{I_{YZ}} & = \\sqrt{ \\sum_{=1}^n \\left\\{   \\sigma_{{I_{YZ}}_i}^2 + \\left[ ({y}_i - \\bar{y}) w_i \\sigma_{{z}_i}\\right]^2 + \\left[ ({y}_i - \\bar{y})({z}_i - \\bar{z})\\sigma_{w_i} \\right]^2 + \\left[ ({z}_i - \\bar{z})  w_i \\sigma_{{y}_i} \\right]^2 \\right\\} }  \\\\ \\end{align}","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"matrix-formulation-1","dir":"Articles","previous_headings":"Theory > Mass Property Uncertainties > Inertia Tensor Uncertainty","what":"Matrix Formulation","title":"massProps","text":"Let 𝐝i=((xi−x‾)(yi−y‾)(zi−z‾))T𝛔𝐜i=(σx‾iσy‾iσz‾)T𝐏i=𝐝i𝛔𝐜iT𝐐i=𝐝i𝐝iT \\boxed{ \\begin{align} \\boldsymbol{d}_i & = (({x}_i - \\bar{x}) \\quad ({y}_i - \\bar{y}) \\quad ({z}_i - \\bar{z}))^T \\\\ {\\boldsymbol{\\sigma_c}}_i & = ({\\sigma_\\bar{x}}_i \\quad {\\sigma_\\bar{y}}_i \\quad {\\sigma_\\bar{z}}_i)^T \\\\ \\boldsymbol{P}_i & = \\boldsymbol{d}_i {\\boldsymbol{\\sigma_c}}_i^T \\\\ \\boldsymbol{Q}_i & = \\boldsymbol{d}_i {\\boldsymbol{d}_i}^T \\end{align} } 𝐏i=[(xi−x‾)σxi(xi−x‾)σyi(xi−x‾)σzi(yi−y‾)σxi(yi−y‾)σyi(yi−y‾)σzi(zi−z‾)σxi(zi−z‾)σyi(zi−z‾)σzi]𝐐i=[(xi−x‾)2(xi−x‾)(yi−y‾)(xi−x‾)(zi−z‾)(yi−y‾)(xi−x‾)(yi−y‾)2(yi−y‾)(zi−z‾)(zi−z‾)(xi−x‾)(zi−z‾)(yi−y‾)(zi−z‾)2] \\begin{align} \\boldsymbol{P}_i & = \\begin{bmatrix} ({x}_i - \\bar{x})\\sigma_{x_i} &({x}_i - \\bar{x})\\sigma_{y_i} &({x}_i - \\bar{x})\\sigma_{z_i} \\\\ ({y}_i - \\bar{y})\\sigma_{x_i} & ({y}_i - \\bar{y})\\sigma_{y_i} & ({y}_i - \\bar{y})\\sigma_{z_i} \\\\ ({z}_i - \\bar{z})\\sigma_{x_i} & ({z}_i - \\bar{z})\\sigma_{y_i} & ({z}_i - \\bar{z})\\sigma_{z_i} \\\\ \\end{bmatrix} \\\\ \\\\ \\boldsymbol{Q}_i & = \\begin{bmatrix} ({x}_i - \\bar{x})^2 &({x}_i - \\bar{x})({y}_i - \\bar{y}) &({x}_i - \\bar{x})({z}_i - \\bar{z}) \\\\ ({y}_i - \\bar{y})({x}_i - \\bar{x}) & ({y}_i - \\bar{y})^2 & ({y}_i - \\bar{y})({z}_i - \\bar{z}) \\\\ ({z}_i - \\bar{z})({x}_i - \\bar{x}) & ({z}_i - \\bar{z})({y}_i - \\bar{y}) & ({z}_i - \\bar{z})^2 \\\\ \\end{bmatrix} \\end{align} Let 𝐬i2\\boldsymbol{s}_i^2 matrix inertia tensor uncertainty summands standard formulas given subcomponent ii . , 𝛔𝐈2=∑=1n𝐬i2 \\boldsymbol{\\sigma_I}^2 = \\sum_{=1}^{n} \\boldsymbol{s}_i^2 Let pXi{p_X}_i, pYi{p_Y}_i, pZi{p_Z}_i respective diagonal elements PiP_i. Let 𝟏3\\boldsymbol{1}_3 3 ⨉ 3 identity matrix. interpret squaring matrix Hadamard (element-wise) product , 𝐬i2=𝛔𝐈i2+[2wi(yi−y‾)σyiwi(xi−x‾)σyiwi(xi−x‾)σziwi(xi−x‾)σyi2wi(xi−x‾)σxiwi(yi−y‾)σziwi(xi−x‾)σziwi(yi−y‾)σzi2wi(xi−x‾)σxi]2+[2wi(zi−z‾)σziwi(yi−y‾)σxiwi(zi−z‾)σxiwi(yi−y‾)σxi2wi(zi−z‾)σziwi(zi−z‾)σyiwi(zi−z‾)σxiwi(zi−z‾)σyi2wi(yi−y‾)σyi]2+[((yi−y‾)2+(zi−z‾)2)σwi(xi−x‾)(yi−y‾)σwi(xi−x‾)(zi−z‾)σwi(yi−y‾)(xi−x‾)σwi((xi−x‾)2+(zi−z‾)2)σwi(yi−y‾)(zi−z‾)σwi(zi−z‾)(xi−x‾)σwi(zi−z‾)(yi−y‾)σwi((xi−x‾)2+(yi−y‾)2)σwi]2=𝛔𝐈i2+wi2(𝐏i−[(xi−x‾)σxi−2(yi−y‾)σyi000(yi−y‾)σyi−2(xi−x‾)σxi000(zi−z‾)σyi−2(xi−x‾)σxi])2+wi2(𝐏iT−[(xi−x‾)σxi−2(zi−z‾)σyi000(yi−y‾)σyi−2(zi−z‾)σzi000(zi−z‾)σyi−2(yi−y‾)σyi])2+σwi2(𝐐i−tr(𝐐i)𝟏3)2=𝛔𝐈i2+wi2(𝐏i−[pXi−2pYi000pYi−2pXi000pZi−2pXi])2+wi2(𝐏iT−[pXi−2pZi000pYi−2pZi000pZi−2pYi])2+σwi2(𝐐i−tr(𝐐i)𝟏3)2 \\begin{align} \\boldsymbol{s}_i^2 & = {\\boldsymbol{\\sigma_I}}_i^2 \\\\ & + \\begin{bmatrix} 2 w_i ({y}_i - \\bar{y}) \\sigma_{y_i} &   w_i({x}_i - \\bar{x}) \\sigma_{y_i} &   w_i({x}_i - \\bar{x}) \\sigma_{z_i} \\\\   w_i({x}_i - \\bar{x}) \\sigma_{y_i} & 2 w_i({x}_i - \\bar{x}) \\sigma_{x_i} &   w_i ({y}_i - \\bar{y}) \\sigma_{z_i} \\\\   w_i({x}_i - \\bar{x}) \\sigma_{z_i} &   w_i ({y}_i - \\bar{y}) \\sigma_{z_i} & 2 w_i({x}_i - \\bar{x}) \\sigma_{x_i} \\end{bmatrix}^2 \\\\ & + \\begin{bmatrix} 2 w_i ({z}_i - \\bar{z}) \\sigma_{z_i} &   w_i ({y}_i - \\bar{y}) \\sigma_{x_i} &   w_i ({z}_i - \\bar{z}) \\sigma_{x_i} \\\\   w_i ({y}_i - \\bar{y}) \\sigma_{x_i} & 2 w_i ({z}_i - \\bar{z}) \\sigma_{z_i} &   w_i ({z}_i - \\bar{z}) \\sigma_{y_i} \\\\   w_i ({z}_i - \\bar{z}) \\sigma_{x_i} &   w_i ({z}_i - \\bar{z}) \\sigma_{y_i} & 2 w_i ({y}_i - \\bar{y}) \\sigma_{y_i} \\end{bmatrix}^2 \\\\ & + \\begin{bmatrix} (({y}_i - \\bar{y})^2 + ({z}_i - \\bar{z})^2)\\sigma_{w_i} &({x}_i - \\bar{x})({y}_i - \\bar{y})\\sigma_{w_i} &({x}_i - \\bar{x})({z}_i - \\bar{z})\\sigma_{w_i} \\\\ ({y}_i - \\bar{y})({x}_i - \\bar{x})\\sigma_{w_i} & (({x}_i - \\bar{x})^2 + ({z}_i - \\bar{z})^2)\\sigma_{w_i} & ({y}_i - \\bar{y})({z}_i - \\bar{z})\\sigma_{w_i} \\\\ ({z}_i - \\bar{z})({x}_i - \\bar{x})\\sigma_{w_i} & ({z}_i - \\bar{z})({y}_i - \\bar{y})\\sigma_{w_i} & (({x}_i - \\bar{x})^2 + ({y}_i - \\bar{y})^2)\\sigma_{w_i} \\\\ \\end{bmatrix}^2 \\\\ \\\\ & = {\\boldsymbol{\\sigma_I}}_i^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i - \\begin{bmatrix} ({x}_i - \\bar{x})\\sigma_{x_i} - 2 ({y}_i - \\bar{y})\\sigma_{y_i} & 0 & 0 \\\\ 0 & ({y}_i - \\bar{y})\\sigma_{y_i} - 2({x}_i - \\bar{x})\\sigma_{x_i} & 0 \\\\ 0 & 0 & ({z}_i - \\bar{z})\\sigma_{y_i} - 2({x}_i - \\bar{x})\\sigma_{x_i} \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i^T - \\begin{bmatrix} ({x}_i - \\bar{x})\\sigma_{x_i} - 2 ({z}_i - \\bar{z})\\sigma_{y_i} & 0 & 0 \\\\ 0 & ({y}_i - \\bar{y})\\sigma_{y_i} - 2 ({z}_i - \\bar{z})\\sigma_{z_i} & 0 \\\\ 0 & 0 & ({z}_i - \\bar{z})\\sigma_{y_i} - 2 ({y}_i - \\bar{y})\\sigma_{y_i} \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + \\sigma_{w_i}^2 \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i)\\boldsymbol{1}_3 \\right)^2 \\\\ \\\\ & = {\\boldsymbol{\\sigma_I}}_i^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i - \\begin{bmatrix}  {p_X}_i - 2 {p_Y}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2 {p_X}_i & 0 \\\\ 0 & 0 & {p_Z}_i - 2  {p_X}_i \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + w_i^2 \\left( \\boldsymbol{P}_i^T - \\begin{bmatrix}  {p_X}_i - 2{p_Z}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2 {p_Z}_i & 0 \\\\ 0 & 0 & {p_Z}_i - 2 {p_Y}_i \\\\ \\end{bmatrix} \\right) ^2 \\\\ & + \\sigma_{w_i}^2 \\left( \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i)\\boldsymbol{1}_3 \\right)^2 \\end{align} Finally, 𝛔𝐈=∑=1n{𝛔𝐈i2+𝐌4i} \\boxed{ \\boldsymbol{\\sigma_I} = \\sqrt{ \\sum_{=1}^{n} {\\left\\{ {\\boldsymbol{\\sigma_I}}_i^2 +{\\boldsymbol{M}_4}_i \\right\\}} } } 𝐌1i=𝐏i−[pXi−2pYi000pYi−2pXi0002pZi−2pXi]𝐌2i=𝐏iT−[pXi−2pZi000pYi−2pZi0002pZi−2pYi]𝐌3i=𝐐i−tr(𝐐i)𝟏3𝐌4i=wi2(𝐌1i2+𝐌2i2)+(σwi𝐌3i)2 \\boxed{ \\begin{align} {\\boldsymbol{M}_1}_i & = \\boldsymbol{P}_i -  \\begin{bmatrix} {p_X}_i - 2{p_Y}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2{p_X}_i & 0 \\\\ 0 & 0 & 2{p_Z}_i - 2{p_X}_i \\\\ \\end{bmatrix} \\\\ {\\boldsymbol{M}_2}_i & = \\boldsymbol{P}_i^T - \\begin{bmatrix} {p_X}_i - 2{p_Z}_i & 0 & 0 \\\\ 0 & {p_Y}_i - 2{p_Z}_i & 0 \\\\ 0 & 0 & 2{p_Z}_i - 2{p_Y}_i \\\\ \\end{bmatrix} \\\\ {\\boldsymbol{M}_3}_i & = \\boldsymbol{Q}_i - \\mathrm{tr}(\\boldsymbol{Q}_i)\\boldsymbol{1}_3 \\\\ {\\boldsymbol{M}_4}_i & =  w_i^2 \\left( {{\\boldsymbol{M}_1}_i}^2 + {{\\boldsymbol{M}_2}_i}^2 \\right) + \\left( \\sigma_{w_i} {\\boldsymbol{M}_3}_i \\right)^2 \\end{align} } corresponding R code ","code":"amp$sigma_inertia = sqrt(Reduce(`+`, Map(     f = function(v) {        d <- v$center_mass - amp$center_mass        P <- outer(d, v$sigma_center_mass)       p <- diag(P)        Q <- outer(d, d)        M1 <-   P  - diag(p - 2 * p[c(\"y\", \"x\", \"x\")])       M2 <- t(P) - diag(p - 2 * p[c(\"z\", \"z\", \"y\")])       M3 <-   Q  - sum(diag(Q)) * diag(3)       M4 <- v$mass^2 * (M1^2 + M2^2) + (v$sigma_mass * M3)^2        if (v$point) M4 else v$sigma_inertia^2 + M4     },     mpl   )))"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"radii-of-gyration-and-their-uncertainties","dir":"Articles","previous_headings":"Theory","what":"Radii of Gyration and Their Uncertainties","title":"massProps","text":"definition: kX=IXX/wkY=IYY/wkZ=IZZ/w \\begin{align} k_X& = \\sqrt{I_{XX}/ w} \\\\ k_Y& = \\sqrt{I_{YY}/ w} \\\\ k_Z& = \\sqrt{I_{ZZ}/ w} \\\\ \\end{align}  Let 𝐤=(kXkYkZ)T𝐈=(IXXIYYIZZ)T \\boxed{ \\begin{align} \\boldsymbol{k} & = (k_X\\quad k_Y\\quad k_Z)^T \\\\ \\boldsymbol{} & = (I_{XX}\\quad I_{YY}\\quad I_{ZZ})^T \\end{align} }  𝐤=𝐈/w \\boxed{ \\boldsymbol{k} = \\sqrt{ \\boldsymbol{} / w } } corresponding R code SAWE reference gives equations uncertainties radii gyration recursive form, radii simply functions moments inertia mass, able express uncertainties terms uncertainties moments inertia mass applying standard uncertainty propagation theory (Wikipedia contributors 2024). Let σ𝐤=(σkXσkYσkZ)Tσ𝐈=(σIXXσIYYσIZZ)T \\boxed{ \\begin{align} \\sigma_\\boldsymbol{k} & = (\\sigma_{k_X} \\quad \\sigma_{k_Y} \\quad \\sigma_{k_Z})^T \\\\ \\sigma_\\boldsymbol{} & = (\\sigma_{I_{XX}} \\quad \\sigma_{I_{YY}} \\quad \\sigma_{I_{ZZ}})^T \\end{align} }  σ𝐤2≈(∂𝐤∂𝐈)2σ𝐈2+(∂𝐤∂w)2σw2+2∂𝐤∂𝐈∂𝐤∂wσ𝐈w≈(12w𝐈)2σ𝐈2+(−𝐈2w3/2)2σw2+2(12w𝐈)(−𝐈2w3/2)σ𝐈w≈14w𝐈σ𝐈2+𝐈4w3σw2−12w2σ𝐈w \\begin{align} {\\sigma_\\boldsymbol{k}}^2 & \\approx \\left( \\frac{\\partial \\boldsymbol{k}}{\\partial \\boldsymbol{}} \\right)^2 {\\sigma_\\boldsymbol{}}^2 + \\left( \\frac{\\partial \\boldsymbol{k}}{\\partial w} \\right)^2 {\\sigma_w}^2 + 2  \\frac{\\partial \\boldsymbol{k}}{\\partial \\boldsymbol{}} \\frac{\\partial \\boldsymbol{k}}{\\partial w} \\sigma_{\\boldsymbol{}w} \\\\   & \\approx \\left( \\frac{1}{2 \\sqrt{w \\boldsymbol{}}} \\right)^2 {\\sigma_\\boldsymbol{}}^2 + \\left(\\frac{- \\sqrt{\\boldsymbol{}}}{2 w^{3/2}}\\right)^2 {\\sigma_w}^2 + 2 \\left( \\frac{1}{2 \\sqrt{w \\boldsymbol{}}} \\right) \\left(\\frac{- \\sqrt{\\boldsymbol{}}}{2 w^{3/2}}\\right) \\sigma_{\\boldsymbol{}w} \\\\   & \\approx \\frac{1}{4 w \\boldsymbol{}} {\\sigma_\\boldsymbol{}}^2 + \\frac{\\boldsymbol{}}{4 w^3} {\\sigma_w}^2 - \\frac{1}{2 w^2} \\sigma_{\\boldsymbol{}w} \\\\ \\end{align}  σ𝐈w\\sigma_{\\boldsymbol{}w} covariance 𝐈\\boldsymbol{} ww. Let WW XX random variables W=∑=1n(wi+ϵwi)X=∑=1n{IXXi+ϵIXXi+(wi+ϵwi)[(yi−y‾)2+(zi−z‾)2]} \\begin{align} W & = \\sum_{=1}^{n} (w_i + {\\epsilon_w}_i) \\\\ X & = \\sum_{=1}^{n} \\left\\{ {I_{XX}}_i + {\\epsilon_I_{XX}}_i   + (w_i + {\\epsilon_w}_i) \\left[ \\left( {y}_i - \\bar{y} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2 \\right]   \\right\\}  \\\\ \\end{align}  E[ϵwi]=0E[{\\epsilon_w}_i] = 0 E[ϵIXXi]=0E[{\\epsilon_I_{XX}}_i] = 0 ii, E[ϵwiϵwj]=0E[{\\epsilon_w}_i {\\epsilon_w}_j] = 0 E[ϵIXXiϵIXXj]=0E[{\\epsilon_I_{XX}}_i {\\epsilon_I_{XX}}_j] = 0 ≠ji \\neq j, E[ϵwiϵIXXj]=0E[{\\epsilon_w}_i {\\epsilon_I_{XX}}_j] = 0 ii jj. clear linearity WW XX wiw_i IXXiI_{XX}_i E[W]=E[∑=1n(wi+ϵwi)]=w+∑=1nϵwi=w E[W] = E \\left[\\sum_{=1}^{n} (w_i + {\\epsilon_w}_i) \\right] = w + \\sum_{=1}^{n} {\\epsilon_w}_i = w  E[X]=E[∑=1n{IXXi+ϵIXXi+(wi+ϵwi)[(yi−y‾)2+(zi−z‾)2]}]=IXX+E[∑=1n{ϵIXXi+ϵwi[(yi−y‾)2+(zi−z‾)2]}]=IXX \\begin{align} E[X] & = E \\left[ \\sum_{=1}^{n} \\left\\{ {I_{XX}}_i + {\\epsilon_{I_{XX}}}_i   + (w_i + {\\epsilon_w}_i) \\left[ \\left( {y}_i - \\bar{y} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2 \\right] \\right\\} \\right] \\\\ & = I_{XX}+  E \\left[ \\sum_{=1}^{n} \\left\\{ {\\epsilon_{I_{XX}}}_i   + {\\epsilon_w}_i \\left[ \\left( {y}_i - \\bar{y} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2 \\right] \\right\\} \\right] \\\\ & = I_{XX} \\end{align}  Therefore, σIXXw=E[(W−E[W])(X−E[X])]=E[∑=1nϵwi∑j=1n{ϵIXXj+ϵwj[(yj−y‾)2+(zj−z‾)2]}]=∑=1n∑j=1nE[ϵwi{ϵIXXj+ϵwj[(yj−y‾)2+(zj−z‾)2]}]=∑=1nE[ϵwi2][(yi−y‾)2+(zi−z‾)2]=∑=1nσwi2[(yi−y‾)2+(zi−z‾)2] \\begin{align} \\sigma_{I_{XX}w} & = E \\left[ \\left( W - E[W] \\right) \\left( X - E[X] \\right)\\right] \\\\                 & = E \\left[ \\sum_{=1}^{n} {\\epsilon_w}_i                      \\sum_{j=1}^{n} \\left\\{ {\\epsilon_{I_{XX}}}_j                     + {\\epsilon_w}_j \\left[ \\left( {y}_j - \\bar{y} \\right)^2 + \\left( {z}_j - \\bar{z} \\right)^2 \\right] \\right\\}  \\right] \\\\                 & = \\sum_{=1}^{n}                      \\sum_{j=1}^{n} E \\left[ {\\epsilon_w}_i \\left\\{ {\\epsilon_{I_{XX}}}_j                     + {\\epsilon_w}_j \\left[ \\left( {y}_j - \\bar{y} \\right)^2 + \\left( {z}_j - \\bar{z} \\right)^2 \\right] \\right\\} \\right] \\\\                 & = \\sum_{=1}^{n} E \\left[ {\\epsilon_w}^2_i \\right] \\left[ \\left( {y}_i - \\bar{y} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2  \\right] \\\\                 & = \\sum_{=1}^{n} {\\sigma_w}^2_i \\left[ \\left( {y}_i - \\bar{y} \\right)^2 + \\left( {z}_i - \\bar{z} \\right)^2  \\right] \\\\ \\end{align} Exploiting symmetry, let 𝐝i=((xi−x‾)(yi−y‾)(zi−z‾))T𝐬i=(𝐝iT𝐝i𝐝iT𝐝i𝐝iT𝐝i)T \\boxed{ \\begin{align} \\boldsymbol{d}_i & = (({x}_i - \\bar{x}) \\quad ({y}_i - \\bar{y}) \\quad ({z}_i - \\bar{z}))^T \\\\ \\boldsymbol{s}_i & = (\\boldsymbol{d}_i^T\\boldsymbol{d}_i \\quad \\boldsymbol{d}_i^T\\boldsymbol{d}_i \\quad \\boldsymbol{d}_i^T\\boldsymbol{d}_i)^T \\\\ \\end{align} } σ𝐤2≈14w𝐈σ𝐈2+𝐈4w3σw2−12w2∑=1nσwi2(𝐬i−𝐝i2) \\begin{align} {\\sigma_\\boldsymbol{k}}^2 & \\approx \\frac{1}{4 w \\boldsymbol{}} {\\sigma_\\boldsymbol{}}^2 + \\frac{\\boldsymbol{}}{4 w^3} {\\sigma_w}^2 -   \\frac{1}{2 w^2} \\sum_{=1}^{n} {\\sigma_w}^2_i (\\boldsymbol{s}_i - \\boldsymbol{d}_i^2 ) \\\\ \\end{align}  Therefore, define σ𝐤=121w𝐈σ𝐈2+𝐈w3σw2−2w2∑=1nσwi2(𝐬i−𝐝i2) \\boxed{ \\begin{align} {\\sigma_\\boldsymbol{k}} & = \\frac{1}{2} \\sqrt{ \\frac{1}{w \\boldsymbol{}} {\\sigma_\\boldsymbol{}}^2 + \\frac{\\boldsymbol{}}{w^3} {\\sigma_w}^2 -  \\frac{2}{w^2} \\sum_{=1}^{n} {\\sigma_w}^2_i (\\boldsymbol{s}_i - \\boldsymbol{d}_i^2 ) } \\end{align} } corresponding R code ","code":"rg <- get_mass_props(d, i)       rg$radii_gyration <- sqrt(diag(rg$inertia) / rg$mass) amp <- get_mass_props_and_unc(ds, target)       I <- diag(amp$inertia)       sigma_I <- diag(amp$sigma_inertia)       amp$sigma_radii_gyration <- sqrt(         sigma_I^2 / (amp$mass * I) + (I * amp$sigma_mass^2) / amp$mass^3 -           2 / amp$mass^2 * Reduce(             `+`,             Map(               f = function(s) {                 mp <- get_mass_props_and_unc(ds, s)                 d2 <- (mp$center_mass - amp$center_mass)^2                 mp$sigma_mass^2 * (sum(d2) - d2)               },               sources             ),             init = c(0, 0, 0)           )       ) / 2"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"comparison-with-independently-calculated-results","dir":"Articles","previous_headings":"Testing and Validation","what":"Comparison With Independently-Calculated Results","title":"massProps","text":"section calculate results SAWE example step step compare package results. inputs : computed result ","code":"#>         id  mass    Cx    Cy    Cz     Ixx     Iyy      Izz    Ixy      Ixz #> 1   Widget 57.83 121.2  0.04 -0.16 7258.90 8607.02 10453.40 834.44 -1198.38 #> 2 2nd Part 16.80  70.9 -0.95  0.46   65.07 1124.65  1078.82  76.01   202.83 #>        Iyz sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy sigma_Izz #> 1 -1066.58     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792  414.5547 #> 2    13.62     1.7308   0.6234   0.5173   0.1405   12.4687  109.1324  108.5481 #>   sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1 1440.5402  344.6237  124.6860  FALSE       + #> 2   55.8879  212.1241   11.5408  FALSE       + t <- rollup_radii_of_gyration_unc(sawe_tree,   add_radii_of_gyration(     rollup_mass_props_and_unc(sawe_tree, sawe_table)   ) ) sawe_result <- t[t$id == \"Combined\", ] sawe_result #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz sigma_mass sigma_Cx  sigma_Cy   sigma_Cz #> 3 1558.714 -1401.534 -1060.951    2.13008  0.95821 0.1999847 0.06178402 #>   sigma_Ixx sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 3  387.4017  2789.313  2815.326  1488.095  418.6048  125.3175  FALSE       + #>         kx       ky       kz  sigma_kx  sigma_ky  sigma_kz #> 3 9.918422 23.91243 24.41382 0.2971248 0.5484836 0.5402033"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Mass","title":"massProps","text":"independently-calculated mass agrees computed result.","code":"mass <- sum(sawe_input$mass) #> [1] 74.63"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Center of Mass","title":"massProps","text":"independently-calculated center mass agrees computed result.","code":"C <- apply(sawe_input$mass / mass * sawe_input[, c(\"Cx\", \"Cy\", \"Cz\")], 2, sum) #>           Cx           Cy           Cz  #> 109.87693957  -0.18285944  -0.02043146"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Moments of Inertia","title":"massProps","text":"independently-calculated moments inertia agrees computed result.","code":"moi <- function(I, v1, v2, m, c1, c2) {   sum(I + m * ((v1^2 + v2^2) - (c1^2 + c2^2))) } MOI <- c(   Ixx = moi(sawe_input$Ixx, sawe_input$Cy, sawe_input$Cz, sawe_input$mass, C[\"Cy\"], C[\"Cz\"]),   Iyy = moi(sawe_input$Iyy, sawe_input$Cx, sawe_input$Cz, sawe_input$mass, C[\"Cx\"], C[\"Cz\"]),   Izz = moi(sawe_input$Izz, sawe_input$Cx, sawe_input$Cy, sawe_input$mass, C[\"Cx\"], C[\"Cy\"]) ) #>       Ixx       Iyy       Izz  #>  7341.733 42673.747 44482.052"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Products of Inertia","title":"massProps","text":"independently-calculated products inertia agrees computed result.","code":"poi <- function(I, v1, v2, m, c1, c2) {   sum(I + m * (v1 * v2 - c1 * c2)) } POI <- c(   Ixy = poi(sawe_input$Ixy, sawe_input$Cx, sawe_input$Cy, sawe_input$mass, C[\"Cx\"], C[\"Cy\"]),   Ixz = poi(sawe_input$Ixz, sawe_input$Cx, sawe_input$Cz, sawe_input$mass, C[\"Cx\"], C[\"Cz\"]),   Iyz = poi(sawe_input$Iyz, sawe_input$Cy, sawe_input$Cz, sawe_input$mass, C[\"Cy\"], C[\"Cz\"]) ) #>       Ixy       Ixz       Iyz  #>  1558.714 -1401.534 -1060.951"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"radii-of-gyration","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Radii of Gyration","title":"massProps","text":"independently-calculated radii gyration agrees computed result.","code":"rog <- function(I, m) sqrt(I / m) ROG <- c(   kx = rog(sawe_result$Ixx, sawe_result$mass),   ky = rog(sawe_result$Iyy, sawe_result$mass),   kz = rog(sawe_result$Izz, sawe_result$mass) ) #>        kx        ky        kz  #>  9.918422 23.912428 24.413817"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"mass-uncertainty-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Mass Uncertainty","title":"massProps","text":"independently-calculated mass uncertainty agrees computed result.","code":"sigma_mass <- sqrt(sum(sawe_input$sigma_mass^2)) #> [1] 2.13008"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"center-of-mass-uncertainty-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Center of Mass Uncertainty","title":"massProps","text":"independently-calculated center mass uncertainties agrees computed result.","code":"sigma_cm <- function(m, sigma_v, sigma_m, v, c, mass) {   sqrt(sum((m * sigma_v)^2 + (sigma_m * (v - c))^2)) / mass } sigma_C <- c(   sigma_Cx = sigma_cm(sawe_input$mass, sawe_input$sigma_Cx, sawe_input$sigma_mass, sawe_input$Cx, C[\"Cx\"], mass),   sigma_Cy = sigma_cm(sawe_input$mass, sawe_input$sigma_Cy, sawe_input$sigma_mass, sawe_input$Cy, C[\"Cy\"], mass),   sigma_Cz = sigma_cm(sawe_input$mass, sawe_input$sigma_Cz, sawe_input$sigma_mass, sawe_input$Cz, C[\"Cz\"], mass) ) #>   sigma_Cx   sigma_Cy   sigma_Cz  #> 0.95821004 0.19998470 0.06178402"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"moments-of-inertia-uncertainties-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Moments of Inertia Uncertainties","title":"massProps","text":"independently-calculated moments inertia uncertainties agrees computed result.","code":"sigma_moi <- function(sigma_I, mass, sigma_mass, v1, v2, c1, c2, sigma_v1, sigma_v2) {   sqrt(sum(     sigma_I^2 +     (2 * mass * (v1 - c1) * sigma_v1)^2 +     (2 * mass * (v2 - c2) * sigma_v2)^2 +     (((v1 - c1)^2 + (v2 - c2)^2) * sigma_mass)^2   )) } sigma_MOI <- c(   sigma_Ixx = sigma_moi(sawe_input$sigma_Ixx, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cy,                                   sawe_input$Cz, C[\"Cy\"], C[\"Cz\"], sawe_input$sigma_Cy, sawe_input$sigma_Cz),   sigma_Iyy = sigma_moi(sawe_input$sigma_Iyy, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cx,                                   sawe_input$Cz, C[\"Cx\"], C[\"Cz\"], sawe_input$sigma_Cx, sawe_input$sigma_Cz),   sigma_Izz = sigma_moi(sawe_input$sigma_Izz, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cx,                                   sawe_input$Cy, C[\"Cx\"], C[\"Cy\"], sawe_input$sigma_Cx, sawe_input$sigma_Cy) ) #> sigma_Ixx sigma_Iyy sigma_Izz  #>  387.4017 2789.3133 2815.3260"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"products-of-inertia-uncertainties-1","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Products of Inertia Uncertainties","title":"massProps","text":"independently-calculated products inertia uncertainties agrees computed result.","code":"sigma_poi <- function(sigma_I, mass, sigma_mass, v1, v2, c1, c2, sigma_v1, sigma_v2) {   sqrt(sum(     sigma_I^2 +     ((v1 - c1) * mass * sigma_v2)^2 +     ((v1 - c1) * (v2 - c2) * sigma_mass)^2 +     ((v2 - c2) * mass * sigma_v1)^2   )) } sigma_POI <- c(   sigma_Ixy = sigma_poi(sawe_input$sigma_Ixy, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cx,                                   sawe_input$Cy, C[\"Cx\"], C[\"Cy\"], sawe_input$sigma_Cx, sawe_input$sigma_Cy),   sigma_Ixz = sigma_poi(sawe_input$sigma_Ixz, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cx,                                   sawe_input$Cz, C[\"Cx\"], C[\"Cz\"], sawe_input$sigma_Cx, sawe_input$sigma_Cz),   sigma_Iyz = sigma_poi(sawe_input$sigma_Iyz, sawe_input$mass, sawe_input$sigma_mass, sawe_input$Cy,                                   sawe_input$Cz, C[\"Cy\"], C[\"Cz\"], sawe_input$sigma_Cy, sawe_input$sigma_Cz) ) #> sigma_Ixy sigma_Ixz sigma_Iyz  #> 1488.0948  418.6048  125.3175"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"radii-of-gyration-uncertainties","dir":"Articles","previous_headings":"Testing and Validation > Comparison With Independently-Calculated Results","what":"Radii of Gyration Uncertainties","title":"massProps","text":"independently-calculated radii gyration uncertainties agrees computed result.","code":"sigma_rog <- function(mt, It, sigma_mt, sigma_It, v1, c1, v2, c2, sigma_m) {   sqrt(sigma_It^2 / (4 * mt * It) + (It * sigma_mt^2) / (4 * mt^3) - sum(sigma_m^2 * ((v1 - c1)^2 + (v2 - c2)^2)) / (2 * mt^2)) } sigma_ROG <- c(   sigma_kx = sigma_rog(sawe_result$mass, sawe_result$Ixx, sawe_result$sigma_mass, sawe_result$sigma_Ixx,                        sawe_input$Cy, sawe_result$Cy, sawe_input$Cz, sawe_result$Cz, sawe_input$sigma_mass),   sigma_ky = sigma_rog(sawe_result$mass, sawe_result$Iyy, sawe_result$sigma_mass, sawe_result$sigma_Iyy,                        sawe_input$Cx, sawe_result$Cx, sawe_input$Cz, sawe_result$Cz, sawe_input$sigma_mass),   sigma_kz = sigma_rog(sawe_result$mass, sawe_result$Izz, sawe_result$sigma_mass, sawe_result$sigma_Izz,                        sawe_input$Cx, sawe_result$Cx, sawe_input$Cy, sawe_result$Cy, sawe_input$sigma_mass) ) #>  sigma_kx  sigma_ky  sigma_kz  #> 0.2971248 0.5484836 0.5402033"},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"comparison-with-published-results","dir":"Articles","previous_headings":"Testing and Validation","what":"Comparison With Published Results","title":"massProps","text":"SAWE reference provides computed results example (excluding radii gyration uncertainties). results match within tolerance 0.2%. small differences likely actual input values identical truncated values published article.","code":""},{"path":"https://jsjuni.github.io/massProps/articles/massProps.html","id":"performance-evaluation","dir":"Articles","previous_headings":"","what":"Performance Evaluation","title":"massProps","text":"mp_table mp_tree synthesized data set representing tree depth 7 1765 vertices 1764 edges. 1267 vertices leaves, remaining 498 non-leaves. Rolling mass properties uncertainties data set combines 35280 input values produce 9960 output values. Mass properties alone halves values. Benchmarks taken platform CPU characteristics: Benchmark results rollup mass properties uncertainties taken without input validation: Times reported seconds.","code":"Python Version: 3.12.7.final.0 (64 bit) Cpuinfo Version: 9.0.0 Vendor ID Raw: Hardware Raw: Brand Raw: Apple M3 Hz Advertised Friendly: Hz Actual Friendly: 2.4000 GHz Hz Advertised: Hz Actual: (2400000000, 0) Arch: ARM_8 Bits: 64 Count: 8 Arch String Raw: arm64 L1 Data Cache Size: L1 Instruction Cache Size: L2 Cache Size: L2 Cache Line Size: L2 Cache Associativity: L3 Cache Size: Stepping: Model: Family: 6 Processor Type: Flags: acpi, aes, apic, clfsh, cmov, cx16, cx8, de, ds, dscpl, dtse64, est, fpu, fxsr, htt, mca, mce, mmx, mon, msr, mtrr, pae, pat, pbe, pclmulqdq, pdcm, pge, pse, pse36, seglim64, sep, ss, sse, sse2, sse3, sse4.1, sse4.2, ssse3, tm, tm2, tpr, tsc, vme, vmx benchmark('mp + unc no validation' = rollup_mass_props_and_unc_fast(mp_tree, mp_table),           'mp + unc    validation' = rollup_mass_props_and_unc(mp_tree, mp_table),           'mp       no validation' = rollup_mass_props_fast(mp_tree, mp_table),           'mp          validation' = rollup_mass_props(mp_tree, mp_table),           replications = 1,           columns = c(\"test\", \"replications\", \"elapsed\", \"user.self\", \"sys.self\") ) test replications elapsed user.self sys.self 4 mp          validation            1   0.840     0.824    0.016 3 mp       no validation            1   0.604     0.594    0.011 2 mp + unc    validation            1   1.479     1.454    0.026 1 mp + unc no validation            1   0.993     0.974    0.019"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Steven Jenkins. Author, maintainer, copyright holder.","code":""},{"path":"https://jsjuni.github.io/massProps/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jenkins JS (2025). massProps: Calculate Mass Properties Uncertainties Tree Structures. R package version 0.3.1.9000, https://github.com/jsjuni/massProps, https://jsjuni.github.io/massProps/.","code":"@Manual{,   title = {massProps: Calculate Mass Properties and Uncertainties of Tree Structures},   author = {James Steven Jenkins},   year = {2025},   note = {R package version 0.3.1.9000, https://github.com/jsjuni/massProps},   url = {https://jsjuni.github.io/massProps/}, }"},{"path":"https://jsjuni.github.io/massProps/index.html","id":"massprops","dir":"","previous_headings":"","what":"Calculate Mass Properties and Uncertainties of Tree Structures","title":"Calculate Mass Properties and Uncertainties of Tree Structures","text":"massProps package extends rollupTree functions recursively calculate mass properties (optionally, uncertainties) arbitrary composition trees. Formulas implemented described technical paper published Society Allied Weight Engineers (Zimmerman Nakai 2005).","code":""},{"path":"https://jsjuni.github.io/massProps/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Mass Properties and Uncertainties of Tree Structures","text":"can install development version massProps GitHub :","code":"install.packages(\"massProps\") # install.packages(\"pak\") pak::pak(\"jsjuni/massProps\")"},{"path":"https://jsjuni.github.io/massProps/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calculate Mass Properties and Uncertainties of Tree Structures","text":"Suppose following mass properties table: POIconv indicates products inertia sign convention. negative convention, example, IXY≡−∫xyρdVI_{XY} \\equiv -\\int{xy \\rho \\, dV}. positive convention, IXY≡∫xyρdVI_{XY} \\equiv \\int{xy \\rho \\, dV}. Ipoint indicates whether object considered point mass. algebraic result can achieved setting moments products inertia zero, rollup_mass_props() default ensures leaf items tree mass properties correspond physically-realizable objects. zero inertia tensor fail check. Rather relax check (essential trustworthy results), TRUE value Ipoint indicates inertia tensor excluded computations. construct graph edges representing child-parent relations:  can roll mass properties non-leaf elements follows: Note , although table shows parent element clarity exposition, child-parent relations coneveyed tree passed first argument. input data may include mass properties uncertainties well: Mass properties uncertainties can rolled follows:","code":"library(massProps) test_table #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 2  A.2    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 3  A.3    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE library(igraph) E(test_tree) #> + 11/11 edges from 7d8200c (vertex names): #>  [1] A.2->A.1 A.3->A.1 C.1->A.1 P.1->A.2 P.2->A.2 P.3->A.2 P.4->A.2 P.5->A.3 #>  [9] P.6->A.3 P.7->A.3 P.8->A.3 rollup_mass_props(test_tree, test_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE test_unc_table #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 2  A.2    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 3  A.3    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #>    sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy sigma_Izz #> 1          NA       NA       NA       NA        NA        NA        NA #> 2          NA       NA       NA       NA        NA        NA        NA #> 3          NA       NA       NA       NA        NA        NA        NA #> 4         0.5      0.0      0.0      0.0       8.0       8.0       7.5 #> 5         0.2      0.1      0.1      0.1       0.4       0.4       0.4 #> 6         0.2      0.1      0.1      0.1       0.4       0.4       0.4 #> 7         0.2      0.1      0.1      0.1       0.4       0.4       0.4 #> 8         0.2      0.1      0.1      0.1       0.4       0.4       0.4 #> 9         0.2      0.1      0.1      0.1       0.4       0.4       0.4 #> 10        0.2      0.1      0.1      0.1       0.4       0.4       0.4 #> 11        0.2      0.1      0.1      0.1       0.4       0.4       0.4 #> 12        0.2      0.1      0.1      0.1       0.4       0.4       0.4 #>    sigma_Ixy sigma_Ixz sigma_Iyz #> 1         NA        NA        NA #> 2         NA        NA        NA #> 3         NA        NA        NA #> 4       0.40      2.40      2.40 #> 5       0.01      0.01      0.01 #> 6       0.01      0.01      0.01 #> 7       0.01      0.01      0.01 #> 8       0.01      0.01      0.01 #> 9       0.01      0.01      0.01 #> 10      0.01      0.01      0.01 #> 11      0.01      0.01      0.01 #> 12      0.01      0.01      0.01 rollup_mass_props_and_unc(test_tree, test_unc_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #>    sigma_mass   sigma_Cx   sigma_Cy   sigma_Cz sigma_Ixx sigma_Iyy sigma_Izz #> 1   0.7549834 0.03809524 0.03809524 0.03809524  8.313844  8.275264  7.792946 #> 2   0.4000000 0.05000000 0.07071068 0.07071068  1.600000  1.200000  1.200000 #> 3   0.4000000 0.05000000 0.07071068 0.07071068  1.600000  1.200000  1.200000 #> 4   0.5000000 0.00000000 0.00000000 0.00000000  8.000000  8.000000  7.500000 #> 5   0.2000000 0.10000000 0.10000000 0.10000000  0.400000  0.400000  0.400000 #> 6   0.2000000 0.10000000 0.10000000 0.10000000  0.400000  0.400000  0.400000 #> 7   0.2000000 0.10000000 0.10000000 0.10000000  0.400000  0.400000  0.400000 #> 8   0.2000000 0.10000000 0.10000000 0.10000000  0.400000  0.400000  0.400000 #> 9   0.2000000 0.10000000 0.10000000 0.10000000  0.400000  0.400000  0.400000 #> 10  0.2000000 0.10000000 0.10000000 0.10000000  0.400000  0.400000  0.400000 #> 11  0.2000000 0.10000000 0.10000000 0.10000000  0.400000  0.400000  0.400000 #> 12  0.2000000 0.10000000 0.10000000 0.10000000  0.400000  0.400000  0.400000 #>    sigma_Ixy sigma_Ixz sigma_Iyz #> 1  1.0586784 2.5924506 2.5924506 #> 2  0.4004997 0.4004997 0.6931089 #> 3  0.4004997 0.4004997 0.6931089 #> 4  0.4000000 2.4000000 2.4000000 #> 5  0.0100000 0.0100000 0.0100000 #> 6  0.0100000 0.0100000 0.0100000 #> 7  0.0100000 0.0100000 0.0100000 #> 8  0.0100000 0.0100000 0.0100000 #> 9  0.0100000 0.0100000 0.0100000 #> 10 0.0100000 0.0100000 0.0100000 #> 11 0.0100000 0.0100000 0.0100000 #> 12 0.0100000 0.0100000 0.0100000"},{"path":[]},{"path":"https://jsjuni.github.io/massProps/reference/add_radii_of_gyration.html","id":null,"dir":"Reference","previous_headings":"","what":"Add radii of gyration — add_radii_of_gyration","title":"Add radii of gyration — add_radii_of_gyration","text":"add_radii_of_gyration() adds calculated radii gyration data frame rolled-mass properties. Radii gyration calculated directly moments inertia mass; recursively-defined, require rollup method.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/add_radii_of_gyration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add radii of gyration — add_radii_of_gyration","text":"","code":"add_radii_of_gyration(df)"},{"path":"https://jsjuni.github.io/massProps/reference/add_radii_of_gyration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add radii of gyration — add_radii_of_gyration","text":"df data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/add_radii_of_gyration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add radii of gyration — add_radii_of_gyration","text":"data frame columns df, plus radii gyration columns kx, ky, kz.`","code":""},{"path":"https://jsjuni.github.io/massProps/reference/add_radii_of_gyration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add radii of gyration — add_radii_of_gyration","text":"","code":"test_table_rollup <- rollup_mass_props(test_tree, test_table) add_radii_of_gyration(test_table_rollup) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #>          kx       ky       kz #> 1  2.618615 2.618615 2.572751 #> 2  2.000000 1.732051 1.732051 #> 3  2.000000 1.732051 1.732051 #> 4  4.000000 4.000000 3.872983 #> 5  1.414214 1.414214 1.414214 #> 6  1.414214 1.414214 1.414214 #> 7  1.414214 1.414214 1.414214 #> 8  1.414214 1.414214 1.414214 #> 9  1.414214 1.414214 1.414214 #> 10 1.414214 1.414214 1.414214 #> 11 1.414214 1.414214 1.414214 #> 12 1.414214 1.414214 1.414214"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine mass properties — combine_mass_props","title":"Combine mass properties — combine_mass_props","text":"combine_mass_props() calculates mass properties aggregate list constituent mass properties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine mass properties — combine_mass_props","text":"","code":"combine_mass_props(mpl)"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine mass properties — combine_mass_props","text":"mpl list mass properties lists, contains following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine mass properties — combine_mass_props","text":"Combined mass properties list named elements.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine mass properties — combine_mass_props","text":"See vignette(\"massProps\", package = \"massProps\") details algorithms employed.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine mass properties — combine_mass_props","text":"","code":"leaves <- names(igraph::neighbors(test_tree, \"A.3\", mode = \"in\")) mpl <- Map(f = function(id) get_mass_props(test_table, id), leaves) combine_mass_props(mpl) #> $mass #> [1] 8 #>  #> $center_mass #>  x  y  z  #> -1  0  0  #>  #> $inertia #>      x    y    z #> x 32.0 -0.4 -0.4 #> y -0.4 24.0  0.4 #> z -0.4  0.4 24.0 #>  #> $point #> [1] FALSE #>"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine mass properties and uncertainties — combine_mass_props_and_unc","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"combine_mass_props_and_unc() convenience wrapper concatenates results combine_mass_props() combine_mass_props_unc().","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"","code":"combine_mass_props_and_unc(mpl)"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"mpl list mass properties uncertainties lists, contains following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor. sigma_mass mass uncertainty sigma_center_mass center mass uncertainty (3-dimensional numeric) sigma_inertia Inertia tensor uncertainty (3x3 numeric matrix)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"Combined mass properties list named elements.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine mass properties and uncertainties — combine_mass_props_and_unc","text":"","code":"leaves <- names(igraph::neighbors(sawe_tree, \"Combined\", mode = \"in\")) mpl <- Map(f = function(id) get_mass_props_and_unc(sawe_table, id), leaves) combine_mass_props_and_unc(mpl) #> $mass #> [1] 74.63 #>  #> $center_mass #>            x            y            z  #> 109.87693957  -0.18285944  -0.02043146  #>  #> $inertia #>           x         y         z #> x  7341.733 -1558.714  1401.534 #> y -1558.714 42673.747  1060.951 #> z  1401.534  1060.951 44482.052 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 2.13008 #>  #> $sigma_center_mass #>          x          y          z  #> 0.95821004 0.19998470 0.06178402  #>  #> $sigma_inertia #>           x         y         z #> x  387.4017 1488.0948  418.6048 #> y 1488.0948 2789.3133  125.3175 #> z  418.6048  125.3175 2815.3260 #>"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine mass properties uncertainties — combine_mass_props_unc","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"combine_mass_prop_unc() calculates mass properties uncertainties aggregate mass properties uncertainties constituents mass properties aggregate.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"","code":"combine_mass_props_unc(mpl, amp)"},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"mpl list mass properties uncertainties lists, contains following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor. sigma_mass mass uncertainty sigma_center_mass center mass uncertainty (3-dimensional numeric) sigma_inertia Inertia tensor uncertainty (3x3 numeric matrix) amp named list mass properties aggregate containing following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"mass properties uncertainties aggregate. list elements members mpl.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"See vignette(\"massProps\", package = \"massProps\") details algorithms employed.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/combine_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine mass properties uncertainties — combine_mass_props_unc","text":"","code":"leaves <- names(igraph::neighbors(sawe_tree, \"Combined\", mode = \"in\")) mpl <- Map(f = function(id) get_mass_props_and_unc(sawe_table, id), leaves) combine_mass_props_unc(mpl, amp = get_mass_props(sawe_table, \"Combined\")) #> $mass #> [1] 74.63 #>  #> $center_mass #>        x        y        z  #> 109.8657  -0.1829  -0.0204  #>  #> $inertia #>          x        y        z #> x  7341.73 -1559.36  1401.94 #> y -1559.36 42739.26  1060.95 #> z  1401.94  1060.95 44547.27 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 2.13008 #>  #> $sigma_center_mass #>          x          y          z  #> 0.95800093 0.19998463 0.06178391  #>  #> $sigma_inertia #>           x         y         z #> x  387.4017 1488.0844  418.6026 #> y 1488.0844 2787.8795  125.3175 #> z  418.6026  125.3175 2813.9052 #>"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mass properties for a row in a data frame — get_mass_props","title":"Get mass properties for a row in a data frame — get_mass_props","text":"get_mass_props() creates mass properties list selected row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mass properties for a row in a data frame — get_mass_props","text":"","code":"get_mass_props(df, id)"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mass properties for a row in a data frame — get_mass_props","text":"df data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint. id id value desired row.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mass properties for a row in a data frame — get_mass_props","text":"list following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor. signs -diagonal elements inertia tensor determined POIconv. example, \\(xy\\) element inertia tensor Ixy POIconv \"-\"; -Ixy POIconv \"+\".","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mass properties for a row in a data frame — get_mass_props","text":"","code":"get_mass_props(mp_table, \"C.1.2.2.3.1.2.3\") #> $mass #> [1] 0.1213345 #>  #> $center_mass #>        x        y        z  #> 70.54848 81.54389 44.52262  #>  #> $inertia #>              x             y            z #> x  0.143256682 -0.0123144484 0.0012773920 #> y -0.012314448  0.1458692409 0.0003485651 #> z  0.001277392  0.0003485651 0.1309228273 #>  #> $point #> [1] FALSE #>"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"get_mass_props_and_unc() convenience wrapper combines results get_mass_props() get_mass_props_unc().","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"","code":"get_mass_props_and_unc(df, id)"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"df data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz,sigma_Ixy, sigma_Ixz, sigma_Iyz. id id value desired row.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"list following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor. signs -diagonal elements inertia tensor determined POIconv. example, \\(xy\\) element inertia tensor Ixy POIconv \"-\"; -Ixy POIconv \"+\". sigma_mass Numeric mass uncertainty. sigma_center_mass Numeric 3-vector center mass uncertainties. sigma_inertia Numeric 3x3 matrix inertia tensor uncertainties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mass properties and uncertainties for a row in a data frame — get_mass_props_and_unc","text":"","code":"get_mass_props_and_unc(mp_table, \"C.1.2.2.3.1.2.3\") #> $mass #> [1] 0.1213345 #>  #> $center_mass #>        x        y        z  #> 70.54848 81.54389 44.52262  #>  #> $inertia #>              x             y            z #> x  0.143256682 -0.0123144484 0.0012773920 #> y -0.012314448  0.1458692409 0.0003485651 #> z  0.001277392  0.0003485651 0.1309228273 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 0.2892205 #>  #> $sigma_center_mass #>        x        y        z  #> 28.83321 29.16371 29.59459  #>  #> $sigma_inertia #>            x          y          z #> x 0.37222944 0.02191471 0.02146982 #> y 0.02191471 0.36942277 0.02242524 #> z 0.02146982 0.02242524 0.37416478 #>"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc_and_radii.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mass properties and uncertainties and radii of gyration — get_mass_props_and_unc_and_radii","title":"Get mass properties and uncertainties and radii of gyration — get_mass_props_and_unc_and_radii","text":"get_mass_props_and_unc_and_radii() creates mass properties uncertainties radii gyration list selected row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc_and_radii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mass properties and uncertainties and radii of gyration — get_mass_props_and_unc_and_radii","text":"","code":"get_mass_props_and_unc_and_radii(df, id)"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc_and_radii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mass properties and uncertainties and radii of gyration — get_mass_props_and_unc_and_radii","text":"df data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz,sigma_Ixy, sigma_Ixz, sigma_Iyz, kx, ky, kz. id id value desired row.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc_and_radii.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mass properties and uncertainties and radii of gyration — get_mass_props_and_unc_and_radii","text":"list following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor. signs -diagonal elements inertia tensor determined POIconv. example, \\(xy\\) element inertia tensor Ixy POIconv \"-\"; -Ixy POIconv \"+\". sigma_mass Numeric mass uncertainty. sigma_center_mass Numeric 3-vector center mass uncertainties. sigma_inertia Numeric 3x3 matrix inertia tensor uncertainties. radii_gyration Numeric 3-vector radii gyration.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc_and_radii.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mass properties and uncertainties and radii of gyration — get_mass_props_and_unc_and_radii","text":"","code":"mp_table_small_rollup <- rollup_mass_props_and_unc(mp_tree_small, mp_table_small) radii_table_small <- add_radii_of_gyration(mp_table_small_rollup) get_mass_props_and_unc_and_radii(radii_table_small, \"C.1\") #> $mass #> [1] 635.6602 #>  #> $center_mass #>          x          y          z  #>  0.3318148  1.3661463 -0.6631918  #>  #> $inertia #>             x          y           z #> x 4250838.375  -36939.71   -5703.635 #> y  -36939.709 4135081.32  -41942.779 #> z   -5703.635  -41942.78 4387869.582 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 10.29479 #>  #> $sigma_center_mass #>        x        y        z  #> 1.381855 1.407531 1.394688  #>  #> $sigma_inertia #>           x         y         z #> x 138446.95  64821.46  63906.77 #> y  64821.46 137009.71  64024.22 #> z  63906.77  64024.22 139073.03 #>  #> $radii_gyration #>        x        y        z  #> 81.77580 80.65467 83.08342  #>"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc_and_radii_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mass properties and uncertainties and radii of gyration and uncertainties — get_mass_props_and_unc_and_radii_and_unc","title":"Get mass properties and uncertainties and radii of gyration and uncertainties — get_mass_props_and_unc_and_radii_and_unc","text":"get_mass_props_and_unc_and_radii_and_unc() creates mass properties uncertainties radii gyration uncertainties list selected row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc_and_radii_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mass properties and uncertainties and radii of gyration and uncertainties — get_mass_props_and_unc_and_radii_and_unc","text":"","code":"get_mass_props_and_unc_and_radii_and_unc(df, id)"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc_and_radii_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mass properties and uncertainties and radii of gyration and uncertainties — get_mass_props_and_unc_and_radii_and_unc","text":"df data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz,sigma_Ixy, sigma_Ixz, sigma_Iyz, kx, ky, kz, sigma_kx, sigma_ky, sigma_kz. id id value desired row.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc_and_radii_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mass properties and uncertainties and radii of gyration and uncertainties — get_mass_props_and_unc_and_radii_and_unc","text":"list following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor. signs -diagonal elements inertia tensor determined POIconv. example, \\(xy\\) element inertia tensor Ixy POIconv \"-\"; -Ixy POIconv \"+\". sigma_mass Numeric mass uncertainty. sigma_center_mass Numeric 3-vector center mass uncertainties. sigma_inertia Numeric 3x3 matrix inertia tensor uncertainties. radii_gyration Numeric 3-vector radii gyration. sigma_radii_gyration Numeric 3-vector radii gyration uncertainties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_and_unc_and_radii_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mass properties and uncertainties and radii of gyration and uncertainties — get_mass_props_and_unc_and_radii_and_unc","text":"","code":"mp_table_small_rollup <- rollup_mass_props_and_unc(mp_tree_small, mp_table_small) radii_and_unc_table <- rollup_radii_of_gyration_unc(                           mp_tree_small, add_radii_of_gyration(mp_table_small_rollup)) get_mass_props_and_unc_and_radii_and_unc(radii_and_unc_table, \"C.1\") #> $mass #> [1] 635.6602 #>  #> $center_mass #>          x          y          z  #>  0.3318148  1.3661463 -0.6631918  #>  #> $inertia #>             x          y           z #> x 4250838.375  -36939.71   -5703.635 #> y  -36939.709 4135081.32  -41942.779 #> z   -5703.635  -41942.78 4387869.582 #>  #> $point #> [1] FALSE #>  #> $sigma_mass #> [1] 10.29479 #>  #> $sigma_center_mass #>        x        y        z  #> 1.381855 1.407531 1.394688  #>  #> $sigma_inertia #>           x         y         z #> x 138446.95  64821.46  63906.77 #> y  64821.46 137009.71  64024.22 #> z  63906.77  64024.22 139073.03 #>  #> $radii_gyration #>        x        y        z  #> 81.77580 80.65467 83.08342  #>  #> $sigma_radii_gyration #>        x        y        z  #> 1.487076 1.486767 1.478160  #>"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","title":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","text":"get_mass_props_unc() creates mass properties uncertainties list selected row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","text":"","code":"get_mass_props_unc(df, id)"},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","text":"df data frame  (least) columns: id, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz. id id value desired row.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","text":"list following named elements: sigma_mass Numeric mass uncertainty. sigma_center_mass Numeric 3-vector center mass uncertainties. sigma_inertia Numeric 3x3 matrix inertia tensor uncertainties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/get_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mass properties uncertainties for a row in a data frame — get_mass_props_unc","text":"","code":"get_mass_props_unc(mp_table, \"C.1.2.2.3.1.2.3\") #> $sigma_mass #> [1] 0.2892205 #>  #> $sigma_center_mass #>        x        y        z  #> 28.83321 29.16371 29.59459  #>  #> $sigma_inertia #>            x          y          z #> x 0.37222944 0.02191471 0.02146982 #> y 0.02191471 0.36942277 0.02242524 #> z 0.02146982 0.02242524 0.37416478 #>"},{"path":"https://jsjuni.github.io/massProps/reference/massprops-package.html","id":null,"dir":"Reference","previous_headings":"","what":"massProps: Calculate Mass Properties and Uncertainties of Tree Structures — massProps-package","title":"massProps: Calculate Mass Properties and Uncertainties of Tree Structures — massProps-package","text":"Recursively calculates mass properties (mass, center mass, moments products inertia, optionally, uncertainties) arbitrary decomposition trees. R. L. Zimmerman, J. H. Nakai. (2005) https://www.sawe.org/product/paper-3360/).","code":""},{"path":[]},{"path":"https://jsjuni.github.io/massProps/reference/massprops-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"massProps: Calculate Mass Properties and Uncertainties of Tree Structures — massProps-package","text":"Maintainer: James Steven Jenkins sjenkins@studioj.us (ORCID) [copyright holder]","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Table — mp_table","title":"Example Mass Properties Table — mp_table","text":"Example Mass Properties Table","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Table — mp_table","text":"","code":"mp_table"},{"path":"https://jsjuni.github.io/massProps/reference/mp_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Table — mp_table","text":"data frame columns: id unique key name character name POIconv sign convention products inertia (one c(\"+\", \"-\")) mass mass Cx \\(x\\)-component center mass Cy \\(y\\)-component center mass Cz \\(z\\)-component center mass Ixx \\(I_{xx}\\) moment inertia Iyy \\(I_{yy}\\) moment inertia Izz \\(I_{zz}\\) moment inertia Ixy \\(I_{xy}\\) product inertia Ixz \\(I_{xz}\\) product inertia Iyz \\(I_{yz}\\) product inertia Ipoint logical indicator consider item point mass, .e., negligible inertia sigma_mass mass uncertainty sigma_Cx \\(x\\)-component center mass uncertainty sigma_Cy \\(y\\)-component center mass uncertainty sigma_Cz \\(z\\)-component center mass uncertainty sigma_Ixx \\(I_{xx}\\) moment inertia uncertainty sigma_Iyy \\(I_{yy}\\) moment inertia uncertainty sigma_Izz \\(I_{zz}\\) moment inertia uncertainty sigma_Ixy \\(I_{xy}\\) product inertia uncertainty sigma_Ixz \\(I_{xz}\\) product inertia uncertainty sigma_Iyz \\(I_{yz}\\) product inertia uncertainty","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_table_small.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Small Mass Properties Table — mp_table_small","title":"Example Small Mass Properties Table — mp_table_small","text":"Example Small Mass Properties Table","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_table_small.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Small Mass Properties Table — mp_table_small","text":"","code":"mp_table_small"},{"path":"https://jsjuni.github.io/massProps/reference/mp_table_small.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Small Mass Properties Table — mp_table_small","text":"data frame columns: id unique key name character name POIconv sign convention products inertia (one c(\"+\", \"-\")) mass mass Cx \\(x\\)-component center mass Cy \\(y\\)-component center mass Cz \\(z\\)-component center mass Ixx \\(I_{xx}\\) moment inertia Iyy \\(I_{yy}\\) moment inertia Izz \\(I_{zz}\\) moment inertia Ixy \\(I_{xy}\\) product inertia Ixz \\(I_{xz}\\) product inertia Iyz \\(I_{yz}\\) product inertia Ipoint logical indicator consider item point mass, .e., negligible inertia sigma_mass mass uncertainty sigma_Cx \\(x\\)-component center mass uncertainty sigma_Cy \\(y\\)-component center mass uncertainty sigma_Cz \\(z\\)-component center mass uncertainty sigma_Ixx \\(I_{xx}\\) moment inertia uncertainty sigma_Iyy \\(I_{yy}\\) moment inertia uncertainty sigma_Izz \\(I_{zz}\\) moment inertia uncertainty sigma_Ixy \\(I_{xy}\\) product inertia uncertainty sigma_Ixz \\(I_{xz}\\) product inertia uncertainty sigma_Iyz \\(I_{yz}\\) product inertia uncertainty","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Tree — mp_tree","title":"Example Mass Properties Tree — mp_tree","text":"Example Mass Properties Tree","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Tree — mp_tree","text":"","code":"mp_tree"},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Tree — mp_tree","text":"'igraph' tree whose vertices named values id column mass properties table whose directed edges point child id parent id.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree_small.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Small Mass Properties Tree — mp_tree_small","title":"Example Small Mass Properties Tree — mp_tree_small","text":"Example Small Mass Properties Tree","code":""},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree_small.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Small Mass Properties Tree — mp_tree_small","text":"","code":"mp_tree_small"},{"path":"https://jsjuni.github.io/massProps/reference/mp_tree_small.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Small Mass Properties Tree — mp_tree_small","text":"'igraph' tree whose vertices named values id column mass properties table whose directed edges point child id parent id.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties — rollup_mass_props","title":"Roll up mass properties — rollup_mass_props","text":"'rollup_mass_props()' rolls mass properties data frame mass properties non-leaf vertex element aggregation child elements.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties — rollup_mass_props","text":"","code":"rollup_mass_props(tree, df, validate_df = validate_mass_props_table, ...)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties — rollup_mass_props","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint. validate_df validator tree table, default validate_mass_props_table() ... parameters passed rollupTree::rollup()","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties — rollup_mass_props","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties — rollup_mass_props","text":"","code":"rollup_mass_props(mp_tree_small, mp_table_small) #>           id         name POIconv       mass          Cx           Cy #> 1        C.1     System 1       - 635.660192   0.3318148   1.36614630 #> 2      C.1.1    Segment 1       - 372.387816   2.7823660   2.27331548 #> 3      C.1.2    Segment 2       - 263.272375  -3.1343878   0.08299326 #> 4    C.1.1.1    Element 1       -  45.236245   0.6449576   3.40672797 #> 5    C.1.1.2    Element 2       -  83.911615   1.7979454  -0.58033620 #> 6    C.1.1.3    Element 3       - 123.272571   6.4136420   1.63215491 #> 7    C.1.1.4    Element 4       - 119.967384   0.5455573   4.50076013 #> 8    C.1.2.1    Element 5       -  97.128572   2.2245377  -4.18310553 #> 9    C.1.2.2    Element 6       -  46.012547 -23.9286608  -6.13818202 #> 10   C.1.2.3    Element 7       - 120.131257   0.4974119   5.91504913 #> 11 C.1.1.1.1  Subsystem 1       -  24.182758  12.7664845  -7.33521244 #> 12 C.1.1.1.2  Subsystem 2       -  21.053487 -13.2782447  15.74528976 #> 13 C.1.1.2.1  Subsystem 3       -  32.614045  -5.4164053   4.35058525 #> 14 C.1.1.2.2  Subsystem 4       -  18.443508   5.9446314  -2.86799230 #> 15 C.1.1.2.3  Subsystem 5       -  32.854062   6.6317379  -4.19099753 #> 16 C.1.1.3.1  Subsystem 6       -  18.809672 -11.5693537   4.60172214 #> 17 C.1.1.3.2  Subsystem 7       -  21.309572   3.7950516  -3.76444320 #> 18 C.1.1.3.3  Subsystem 8       -  28.107067   3.8710126   2.64280855 #> 19 C.1.1.3.4  Subsystem 9       -  31.461107  16.1782715   8.40798505 #> 20 C.1.1.3.5 Subsystem 10       -  23.585154  13.1261314  -6.10317776 #> 21 C.1.1.4.1 Subsystem 11       -  14.945121  10.1956219   2.09268188 #> 22 C.1.1.4.2 Subsystem 12       -  20.623094 -14.8515213  16.29220017 #> 23 C.1.1.4.3 Subsystem 13       -  27.123877  -2.3767554   2.44839217 #> 24 C.1.1.4.4 Subsystem 14       -  27.512486  12.0096670   3.91406747 #> 25 C.1.1.4.5 Subsystem 15       -  29.762807  -1.5653890  -0.04778306 #> 26 C.1.2.1.1 Subsystem 16       -  22.161742  17.0733845  -8.78939395 #> 27 C.1.2.1.2 Subsystem 17       -  29.542394  -4.0320250 -10.63513308 #> 28 C.1.2.1.3 Subsystem 18       -  19.515486 -12.2676108 -10.14297124 #> 29 C.1.2.1.4 Subsystem 19       -  25.908950   7.5732239  11.60299863 #> 30 C.1.2.2.1 Subsystem 20       -  12.256125 -25.7562192  -0.82404359 #> 31 C.1.2.2.2 Subsystem 21       -  24.446707 -17.8654251  -8.50267866 #> 32 C.1.2.2.3 Subsystem 22       -   9.309714 -37.4443673  -6.92516492 #> 33 C.1.2.3.1 Subsystem 23       -  26.125954   2.3614452   7.99620979 #> 34 C.1.2.3.2 Subsystem 24       -  23.382905  18.2483930  -4.68014506 #> 35 C.1.2.3.3 Subsystem 25       -  35.450403  -3.5173534   6.67001106 #> 36 C.1.2.3.4 Subsystem 26       -  17.672250 -15.1876417   6.45654603 #> 37 C.1.2.3.5 Subsystem 27       -  17.499745  -2.0314207  14.88894819 #>             Cz        Ixx        Iyy        Izz        Ixy         Ixz #> 1   -0.6631918 4250838.37 4135081.32 4387869.58 -36939.709  -5703.6348 #> 2   -2.0480047 2585081.27 2468902.68 2586058.07 -85117.550 -37973.2139 #> 3    1.2955683 1663292.93 1659055.03 1795672.21  50176.631  29218.3835 #> 4    2.5048850  320437.39  303359.22  307896.12  11813.853  12051.3839 #> 5   -7.3675365  604189.22  568712.38  580609.90   2170.787 -48654.5189 #> 6   -2.6674182  872296.76  815356.63  860561.99 -60933.819   5139.9443 #> 7    0.5924761  782574.67  774764.84  833089.04 -38926.964  -7496.6478 #> 8   -2.6720265  575753.16  594699.80  658365.10  -8094.275  16633.8789 #> 9   -4.3577724  302641.25  282354.06  273741.60   3625.318   6155.0957 #> 10   6.6687862  770796.07  751263.47  831661.20  60921.951  12117.6543 #> 11   4.2506333  151242.29  151681.44  140003.01  -9285.981  11631.0816 #> 12   0.4996586  163041.13  143884.89  154262.95  14334.202   1519.8329 #> 13  -8.7423181  255264.69  233424.83  236512.40 -11454.293 -37583.6939 #> 14   1.0825770  134251.66  108878.51  127953.74  -4491.040  -8773.5625 #> 15 -10.7464962  211601.36  221873.09  212043.69  16207.560  -1864.1430 #> 16  -0.2197146  126503.16  130821.45  139832.80 -27330.473  10213.7409 #> 17  -1.9188334  145089.53  116755.20  132187.50 -11581.112  -1088.8058 #> 18  -8.7607161  201630.70  204023.21  213195.56 -18665.529  12743.3930 #> 19  -3.9374914  224390.00  198755.69  188721.43 -13754.623  -3597.5080 #> 20   3.6598721  168849.35  152364.81  172480.75  10479.314 -12953.5995 #> 21 -19.4235427  112296.22   99628.24  119189.42  -8967.034 -17431.1985 #> 22  11.4779120  117592.47  131659.48  128036.99  -9033.020  16001.4758 #> 23  -6.1146799  148774.14  138236.83  178429.75 -10292.288  -4473.0944 #> 24  10.3500735  171140.86  189129.27  181772.95   2690.691  -4928.2962 #> 25   0.1932782  216801.70  193574.31  211705.41 -17153.402    625.5424 #> 26  -3.1579625  135100.03  143906.10  144737.90  11700.688  14145.7523 #> 27  -1.6034710  178572.19  175405.60  195466.28 -22254.105   6406.1793 #> 28  -5.7969012   96462.74   96314.60  119650.33   8648.899   3211.0330 #> 29  -1.1210201  156476.58  167898.91  178778.10  -2639.827  -6387.7831 #> 30 -10.6351375   87544.81   61464.87   67216.86  10928.234  -9715.0064 #> 31  -8.5817965  153686.23  155943.84  138841.51  -9668.028  10857.7610 #> 32  14.9983160   56514.55   57897.93   64554.35   1994.626   2091.3101 #> 33   7.6261517  155060.55  172731.49  188449.97  -1180.988  17992.7924 #> 34  -4.6150983  127797.97  130060.54  141189.76   6231.141  13234.7826 #> 35   0.3587986  236295.35  218763.17  244473.95  29748.102  -4158.0539 #> 36  25.1766073  133656.24  110567.39  129817.97  14334.395 -12586.7635 #> 37  14.4091662  102298.62   95136.55  111067.09   6838.233 -11576.7357 #>              Iyz Ipoint sigma_mass  sigma_Cx  sigma_Cy  sigma_Cz sigma_Ixx #> 1  -41942.778890  FALSE         NA        NA        NA        NA        NA #> 2  -24491.138285  FALSE         NA        NA        NA        NA        NA #> 3  -18581.162253  FALSE         NA        NA        NA        NA        NA #> 4   -7007.889017  FALSE         NA        NA        NA        NA        NA #> 5  -26282.536240  FALSE         NA        NA        NA        NA        NA #> 6    7778.840431  FALSE         NA        NA        NA        NA        NA #> 7    3282.213215  FALSE         NA        NA        NA        NA        NA #> 8  -30339.749388  FALSE         NA        NA        NA        NA        NA #> 9   -5803.382726  FALSE         NA        NA        NA        NA        NA #> 10  24588.805516  FALSE         NA        NA        NA        NA        NA #> 11  -3665.048708  FALSE   2.003779  6.712238  6.835242  7.050809  26174.58 #> 12  -4317.230079  FALSE   1.806182  7.246186  7.636462  7.967726  27902.84 #> 13 -15618.080046  FALSE   2.331771  5.999269  6.168735  6.328822  32199.53 #> 14 -12660.695787  FALSE   1.782875  7.445890  8.410330  7.744262  22518.59 #> 15   1819.449055  FALSE   2.277325  6.176942  6.038411  6.106111  29257.48 #> 16  -8358.576150  FALSE   1.782875  8.304336  8.633568  8.088626  25091.88 #> 17  -2664.522232  FALSE   2.003779  7.313716  7.945855  7.973809  27411.53 #> 18   6524.161885  FALSE   2.202638  6.679201  6.930867  6.864306  31706.27 #> 19   8522.567433  FALSE   2.258885  5.775885  6.145021  6.342012  31692.23 #> 20   2207.661280  FALSE   1.851915  6.886384  7.338415  6.887791  26751.68 #> 21  -9165.972965  FALSE   1.584126  9.228064 10.152855  9.212524  24044.58 #> 22  16261.755436  FALSE   1.806182  7.440766  7.351605  7.379150  21990.18 #> 23  -3840.001909  FALSE   2.183567  6.583193  6.699780  6.371265  25494.63 #> 24  21945.766469  FALSE   2.125328  6.893469  6.553788  6.744347  27563.92 #> 25 -18281.983865  FALSE   2.085599  6.128316  6.631502  6.598516  32320.03 #> 26      5.303518  FALSE   1.982796  7.521495  7.349680  7.674871  24440.47 #> 27  -9853.100892  FALSE   2.164328  6.316961  6.320899  6.223356  27305.60 #> 28   3122.748235  FALSE   1.711052  7.850957  7.438876  7.864638  21251.30 #> 29 -22770.952906  FALSE   1.961589  6.733433  6.726673  6.534697  25180.93 #> 30  15205.337279  FALSE   1.416886  8.822129 10.293580  9.685666  18663.60 #> 31 -16077.685964  FALSE   2.221545  7.213945  7.095451  7.561693  27423.23 #> 32  -5237.531391  FALSE   1.293434 12.459427 12.192670 11.314738  15462.25 #> 33   6516.436175  FALSE   2.183567  7.340154  6.971327  6.741022  28157.26 #> 34  -8520.729962  FALSE   2.003779  7.139603  7.170140  6.766174  23640.49 #> 35   9962.012056  FALSE   2.487969  5.832823  6.355414  5.928080  34261.51 #> 36  11234.043728  FALSE   1.735323  8.485650  8.543518  8.823966  24680.80 #> 37   9468.427630  FALSE   1.711052  7.813557  8.057258  7.799337  19305.84 #>    sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz #> 1         NA        NA        NA        NA        NA #> 2         NA        NA        NA        NA        NA #> 3         NA        NA        NA        NA        NA #> 4         NA        NA        NA        NA        NA #> 5         NA        NA        NA        NA        NA #> 6         NA        NA        NA        NA        NA #> 7         NA        NA        NA        NA        NA #> 8         NA        NA        NA        NA        NA #> 9         NA        NA        NA        NA        NA #> 10        NA        NA        NA        NA        NA #> 11  25990.71  24135.26 11648.880 12377.863 12340.521 #> 12  26001.07  24651.86 11579.898 12231.336 12825.028 #> 13  31432.43  31009.17 14813.681 14988.362 15574.425 #> 14  20353.59  21693.13 10239.135  9843.484 10856.087 #> 15  30974.87  31348.67 14648.712 14055.614 13533.108 #> 16  23585.30  26889.80 12628.435 11017.978 11569.801 #> 17  25573.80  23897.37 10772.949 11482.496 11591.548 #> 18  29929.20  30508.35 14386.601 14177.424 14768.103 #> 19  27843.23  28779.54 12981.406 12470.376 13886.484 #> 20  24184.44  26575.96 12727.372 11592.323 13118.251 #> 21  21460.33  24968.45 11597.270 10381.893 11087.421 #> 22  22585.31  22689.94 10305.491 10307.734 10099.121 #> 23  24393.33  27190.49 12977.100 11434.763 11592.999 #> 24  30129.41  29502.91 13082.245 13298.357 13067.558 #> 25  28887.67  31192.78 14730.324 13427.046 14963.041 #> 26  25660.62  24771.13 11581.874 11775.493 11005.418 #> 27  30154.80  31098.87 14395.250 14118.471 12714.047 #> 28  22575.79  21748.94 10248.031 10693.686  8620.818 #> 29  25676.92  26189.11 12652.706 12249.382 11973.502 #> 30  15193.28  16940.24  7747.883  7035.366  8892.595 #> 31  30079.66  25397.14 10968.544 14186.802 12136.028 #> 32  16824.53  18590.62  8961.091  8126.012  7598.579 #> 33  31224.03  30289.94 13203.630 13501.351 12962.616 #> 34  23908.81  24132.28 11362.995 11351.608 11012.881 #> 35  30727.89  33968.97 15492.821 14389.849 15528.989 #> 36  24496.83  23317.08 10934.029 11144.141 11452.882 #> 37  19410.71  20455.56  9835.921  9331.513  9153.404"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","title":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","text":"'rollup_mass_props_and_unc()' rolls mass properties data frame (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz. difference rollup_mass_props_unc() rollup_mass_props_and_unc() rollup_mass_props_unc() expects mass properties input rolled , whereas rollup_mass_props_and_unc() performs mass properties rollup .","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","text":"","code":"rollup_mass_props_and_unc(   tree,   df,   validate_df = validate_mass_props_and_unc_table,   ... )"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint. validate_df validator tree table, default validate_mass_props_and_unc_table() ... parameters passed rollupTree::rollup()","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties and uncertainties — rollup_mass_props_and_unc","text":"","code":"rollup_mass_props_and_unc(mp_tree_small, mp_table_small) #>           id         name POIconv       mass          Cx           Cy #> 1        C.1     System 1       - 635.660192   0.3318148   1.36614630 #> 2      C.1.1    Segment 1       - 372.387816   2.7823660   2.27331548 #> 3      C.1.2    Segment 2       - 263.272375  -3.1343878   0.08299326 #> 4    C.1.1.1    Element 1       -  45.236245   0.6449576   3.40672797 #> 5    C.1.1.2    Element 2       -  83.911615   1.7979454  -0.58033620 #> 6    C.1.1.3    Element 3       - 123.272571   6.4136420   1.63215491 #> 7    C.1.1.4    Element 4       - 119.967384   0.5455573   4.50076013 #> 8    C.1.2.1    Element 5       -  97.128572   2.2245377  -4.18310553 #> 9    C.1.2.2    Element 6       -  46.012547 -23.9286608  -6.13818202 #> 10   C.1.2.3    Element 7       - 120.131257   0.4974119   5.91504913 #> 11 C.1.1.1.1  Subsystem 1       -  24.182758  12.7664845  -7.33521244 #> 12 C.1.1.1.2  Subsystem 2       -  21.053487 -13.2782447  15.74528976 #> 13 C.1.1.2.1  Subsystem 3       -  32.614045  -5.4164053   4.35058525 #> 14 C.1.1.2.2  Subsystem 4       -  18.443508   5.9446314  -2.86799230 #> 15 C.1.1.2.3  Subsystem 5       -  32.854062   6.6317379  -4.19099753 #> 16 C.1.1.3.1  Subsystem 6       -  18.809672 -11.5693537   4.60172214 #> 17 C.1.1.3.2  Subsystem 7       -  21.309572   3.7950516  -3.76444320 #> 18 C.1.1.3.3  Subsystem 8       -  28.107067   3.8710126   2.64280855 #> 19 C.1.1.3.4  Subsystem 9       -  31.461107  16.1782715   8.40798505 #> 20 C.1.1.3.5 Subsystem 10       -  23.585154  13.1261314  -6.10317776 #> 21 C.1.1.4.1 Subsystem 11       -  14.945121  10.1956219   2.09268188 #> 22 C.1.1.4.2 Subsystem 12       -  20.623094 -14.8515213  16.29220017 #> 23 C.1.1.4.3 Subsystem 13       -  27.123877  -2.3767554   2.44839217 #> 24 C.1.1.4.4 Subsystem 14       -  27.512486  12.0096670   3.91406747 #> 25 C.1.1.4.5 Subsystem 15       -  29.762807  -1.5653890  -0.04778306 #> 26 C.1.2.1.1 Subsystem 16       -  22.161742  17.0733845  -8.78939395 #> 27 C.1.2.1.2 Subsystem 17       -  29.542394  -4.0320250 -10.63513308 #> 28 C.1.2.1.3 Subsystem 18       -  19.515486 -12.2676108 -10.14297124 #> 29 C.1.2.1.4 Subsystem 19       -  25.908950   7.5732239  11.60299863 #> 30 C.1.2.2.1 Subsystem 20       -  12.256125 -25.7562192  -0.82404359 #> 31 C.1.2.2.2 Subsystem 21       -  24.446707 -17.8654251  -8.50267866 #> 32 C.1.2.2.3 Subsystem 22       -   9.309714 -37.4443673  -6.92516492 #> 33 C.1.2.3.1 Subsystem 23       -  26.125954   2.3614452   7.99620979 #> 34 C.1.2.3.2 Subsystem 24       -  23.382905  18.2483930  -4.68014506 #> 35 C.1.2.3.3 Subsystem 25       -  35.450403  -3.5173534   6.67001106 #> 36 C.1.2.3.4 Subsystem 26       -  17.672250 -15.1876417   6.45654603 #> 37 C.1.2.3.5 Subsystem 27       -  17.499745  -2.0314207  14.88894819 #>             Cz        Ixx        Iyy        Izz        Ixy         Ixz #> 1   -0.6631918 4250838.37 4135081.32 4387869.58 -36939.709  -5703.6348 #> 2   -2.0480047 2585081.27 2468902.68 2586058.07 -85117.550 -37973.2139 #> 3    1.2955683 1663292.93 1659055.03 1795672.21  50176.631  29218.3835 #> 4    2.5048850  320437.39  303359.22  307896.12  11813.853  12051.3839 #> 5   -7.3675365  604189.22  568712.38  580609.90   2170.787 -48654.5189 #> 6   -2.6674182  872296.76  815356.63  860561.99 -60933.819   5139.9443 #> 7    0.5924761  782574.67  774764.84  833089.04 -38926.964  -7496.6478 #> 8   -2.6720265  575753.16  594699.80  658365.10  -8094.275  16633.8789 #> 9   -4.3577724  302641.25  282354.06  273741.60   3625.318   6155.0957 #> 10   6.6687862  770796.07  751263.47  831661.20  60921.951  12117.6543 #> 11   4.2506333  151242.29  151681.44  140003.01  -9285.981  11631.0816 #> 12   0.4996586  163041.13  143884.89  154262.95  14334.202   1519.8329 #> 13  -8.7423181  255264.69  233424.83  236512.40 -11454.293 -37583.6939 #> 14   1.0825770  134251.66  108878.51  127953.74  -4491.040  -8773.5625 #> 15 -10.7464962  211601.36  221873.09  212043.69  16207.560  -1864.1430 #> 16  -0.2197146  126503.16  130821.45  139832.80 -27330.473  10213.7409 #> 17  -1.9188334  145089.53  116755.20  132187.50 -11581.112  -1088.8058 #> 18  -8.7607161  201630.70  204023.21  213195.56 -18665.529  12743.3930 #> 19  -3.9374914  224390.00  198755.69  188721.43 -13754.623  -3597.5080 #> 20   3.6598721  168849.35  152364.81  172480.75  10479.314 -12953.5995 #> 21 -19.4235427  112296.22   99628.24  119189.42  -8967.034 -17431.1985 #> 22  11.4779120  117592.47  131659.48  128036.99  -9033.020  16001.4758 #> 23  -6.1146799  148774.14  138236.83  178429.75 -10292.288  -4473.0944 #> 24  10.3500735  171140.86  189129.27  181772.95   2690.691  -4928.2962 #> 25   0.1932782  216801.70  193574.31  211705.41 -17153.402    625.5424 #> 26  -3.1579625  135100.03  143906.10  144737.90  11700.688  14145.7523 #> 27  -1.6034710  178572.19  175405.60  195466.28 -22254.105   6406.1793 #> 28  -5.7969012   96462.74   96314.60  119650.33   8648.899   3211.0330 #> 29  -1.1210201  156476.58  167898.91  178778.10  -2639.827  -6387.7831 #> 30 -10.6351375   87544.81   61464.87   67216.86  10928.234  -9715.0064 #> 31  -8.5817965  153686.23  155943.84  138841.51  -9668.028  10857.7610 #> 32  14.9983160   56514.55   57897.93   64554.35   1994.626   2091.3101 #> 33   7.6261517  155060.55  172731.49  188449.97  -1180.988  17992.7924 #> 34  -4.6150983  127797.97  130060.54  141189.76   6231.141  13234.7826 #> 35   0.3587986  236295.35  218763.17  244473.95  29748.102  -4158.0539 #> 36  25.1766073  133656.24  110567.39  129817.97  14334.395 -12586.7635 #> 37  14.4091662  102298.62   95136.55  111067.09   6838.233 -11576.7357 #>              Iyz Ipoint sigma_mass  sigma_Cx  sigma_Cy  sigma_Cz sigma_Ixx #> 1  -41942.778890  FALSE  10.294789  1.381855  1.407531  1.394688 138446.95 #> 2  -24491.138285  FALSE   7.814309  1.782194  1.841904  1.829756 108001.62 #> 3  -18581.162253  FALSE   6.702183  2.182675  2.181724  2.153366  86550.51 #> 4   -7007.889017  FALSE   2.697670  4.984638  5.143223  5.288776  38638.99 #> 5  -26282.536240  FALSE   3.715105  3.745609  3.845263  3.834822  49136.56 #> 6    7778.840431  FALSE   4.536247  3.089637  3.254088  3.201888  64307.68 #> 7    3282.213215  FALSE   4.405276  3.177938  3.239979  3.196096  59947.77 #> 8  -30339.749388  FALSE   3.923178  3.541110  3.479111  3.491385  49715.16 #> 9   -5803.382726  FALSE   2.935268  5.176938  5.277841  5.330365  36925.38 #> 10  24588.805516  FALSE   4.572978  3.231771  3.281807  3.171157  59878.94 #> 11  -3665.048708  FALSE   2.003779  6.712238  6.835242  7.050809  26174.58 #> 12  -4317.230079  FALSE   1.806182  7.246186  7.636462  7.967726  27902.84 #> 13 -15618.080046  FALSE   2.331771  5.999269  6.168735  6.328822  32199.53 #> 14 -12660.695787  FALSE   1.782875  7.445890  8.410330  7.744262  22518.59 #> 15   1819.449055  FALSE   2.277325  6.176942  6.038411  6.106111  29257.48 #> 16  -8358.576150  FALSE   1.782875  8.304336  8.633568  8.088626  25091.88 #> 17  -2664.522232  FALSE   2.003779  7.313716  7.945855  7.973809  27411.53 #> 18   6524.161885  FALSE   2.202638  6.679201  6.930867  6.864306  31706.27 #> 19   8522.567433  FALSE   2.258885  5.775885  6.145021  6.342012  31692.23 #> 20   2207.661280  FALSE   1.851915  6.886384  7.338415  6.887791  26751.68 #> 21  -9165.972965  FALSE   1.584126  9.228064 10.152855  9.212524  24044.58 #> 22  16261.755436  FALSE   1.806182  7.440766  7.351605  7.379150  21990.18 #> 23  -3840.001909  FALSE   2.183567  6.583193  6.699780  6.371265  25494.63 #> 24  21945.766469  FALSE   2.125328  6.893469  6.553788  6.744347  27563.92 #> 25 -18281.983865  FALSE   2.085599  6.128316  6.631502  6.598516  32320.03 #> 26      5.303518  FALSE   1.982796  7.521495  7.349680  7.674871  24440.47 #> 27  -9853.100892  FALSE   2.164328  6.316961  6.320899  6.223356  27305.60 #> 28   3122.748235  FALSE   1.711052  7.850957  7.438876  7.864638  21251.30 #> 29 -22770.952906  FALSE   1.961589  6.733433  6.726673  6.534697  25180.93 #> 30  15205.337279  FALSE   1.416886  8.822129 10.293580  9.685666  18663.60 #> 31 -16077.685964  FALSE   2.221545  7.213945  7.095451  7.561693  27423.23 #> 32  -5237.531391  FALSE   1.293434 12.459427 12.192670 11.314738  15462.25 #> 33   6516.436175  FALSE   2.183567  7.340154  6.971327  6.741022  28157.26 #> 34  -8520.729962  FALSE   2.003779  7.139603  7.170140  6.766174  23640.49 #> 35   9962.012056  FALSE   2.487969  5.832823  6.355414  5.928080  34261.51 #> 36  11234.043728  FALSE   1.735323  8.485650  8.543518  8.823966  24680.80 #> 37   9468.427630  FALSE   1.711052  7.813557  8.057258  7.799337  19305.84 #>    sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz #> 1  137009.71 139073.03 64821.460 63906.768 64024.216 #> 2  103675.01 106413.04 49791.550 48317.535 50123.785 #> 3   89376.70  89372.21 41411.674 41722.019 39794.807 #> 4   37230.76  35394.58 16898.628 17683.948 18016.633 #> 5   48814.54  49341.14 23321.341 22902.162 23398.201 #> 6   59394.62  61878.03 28826.884 27561.503 29301.631 #> 7   58473.05  61552.48 28528.641 27011.938 27835.874 #> 8   52835.92  53243.40 25090.214 24823.791 22600.420 #> 9   38145.43  35982.34 16268.575 18063.736 17049.638 #> 10  59901.49  60807.41 27933.383 27546.666 27651.306 #> 11  25990.71  24135.26 11648.880 12377.863 12340.521 #> 12  26001.07  24651.86 11579.898 12231.336 12825.028 #> 13  31432.43  31009.17 14813.681 14988.362 15574.425 #> 14  20353.59  21693.13 10239.135  9843.484 10856.087 #> 15  30974.87  31348.67 14648.712 14055.614 13533.108 #> 16  23585.30  26889.80 12628.435 11017.978 11569.801 #> 17  25573.80  23897.37 10772.949 11482.496 11591.548 #> 18  29929.20  30508.35 14386.601 14177.424 14768.103 #> 19  27843.23  28779.54 12981.406 12470.376 13886.484 #> 20  24184.44  26575.96 12727.372 11592.323 13118.251 #> 21  21460.33  24968.45 11597.270 10381.893 11087.421 #> 22  22585.31  22689.94 10305.491 10307.734 10099.121 #> 23  24393.33  27190.49 12977.100 11434.763 11592.999 #> 24  30129.41  29502.91 13082.245 13298.357 13067.558 #> 25  28887.67  31192.78 14730.324 13427.046 14963.041 #> 26  25660.62  24771.13 11581.874 11775.493 11005.418 #> 27  30154.80  31098.87 14395.250 14118.471 12714.047 #> 28  22575.79  21748.94 10248.031 10693.686  8620.818 #> 29  25676.92  26189.11 12652.706 12249.382 11973.502 #> 30  15193.28  16940.24  7747.883  7035.366  8892.595 #> 31  30079.66  25397.14 10968.544 14186.802 12136.028 #> 32  16824.53  18590.62  8961.091  8126.012  7598.579 #> 33  31224.03  30289.94 13203.630 13501.351 12962.616 #> 34  23908.81  24132.28 11362.995 11351.608 11012.881 #> 35  30727.89  33968.97 15492.821 14389.849 15528.989 #> 36  24496.83  23317.08 10934.029 11144.141 11452.882 #> 37  19410.71  20455.56  9835.921  9331.513  9153.404"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","title":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","text":"rollup_mass_props_and_unc_fast() performs operation rollup_mass_props_and_unc() omits input validation. somewhat faster rollup_mass_props_and_unc() used caution circumstances caller assumes responsibility validity input. behavior passed ill-formed input unspecified.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","text":"","code":"rollup_mass_props_and_unc_fast(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_and_unc_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties and uncertainties without input validation — rollup_mass_props_and_unc_fast","text":"","code":"rollup_mass_props_and_unc_fast(sawe_tree, sawe_table) #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 1   Widget 57.83 121.2000  0.0400000 -0.16000000 7258.900  8607.02 10453.40 #> 2 2nd Part 16.80  70.9000 -0.9500000  0.46000000   65.070  1124.65  1078.82 #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz sigma_mass sigma_Cx  sigma_Cy   sigma_Cz #> 1  834.440 -1198.380 -1066.580    1.24160  0.27640 0.2085000 0.06690000 #> 2   76.010   202.830    13.620    1.73080  0.62340 0.5173000 0.14050000 #> 3 1558.714 -1401.534 -1060.951    2.13008  0.95821 0.1999847 0.06178402 #>   sigma_Ixx sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  386.9233  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2   12.4687  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3  387.4017 2789.3133 2815.3260 1488.0948  418.6048  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties without input validation — rollup_mass_props_fast","title":"Roll up mass properties without input validation — rollup_mass_props_fast","text":"rollup_mass_props_fast() performs operation rollup_mass_props() omits input validation. somewhat faster  rollup_mass_props() used caution circumstances caller assumes responsibility validity input. behavior passed ill-formed input unspecified.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties without input validation — rollup_mass_props_fast","text":"","code":"rollup_mass_props_fast(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties without input validation — rollup_mass_props_fast","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties without input validation — rollup_mass_props_fast","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties without input validation — rollup_mass_props_fast","text":"","code":"rollup_mass_props_fast(test_tree, test_table) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          21  0  0  0 144 -4.8 -24.8 144 -23.2 139       -  FALSE #> 2  A.2    A.1    8  1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties uncertainties — rollup_mass_props_unc","title":"Roll up mass properties uncertainties — rollup_mass_props_unc","text":"rollup_mass_props_unc() rolls mass properties uncertainties data frame uncertainties non-leaf vertex element aggregation mass properties uncertainties child elements. difference rollup_mass_props_unc() rollup_mass_props_and_unc() rollup_mass_props_unc() expects mass properties input rolled , whereas rollup_mass_props_and_unc() performs mass properties rollup .","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties uncertainties — rollup_mass_props_unc","text":"","code":"rollup_mass_props_unc(   tree,   df,   validate_df = validate_mass_props_and_unc_table,   ... )"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties uncertainties — rollup_mass_props_unc","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint. validate_df validator tree table, default validate_mass_props_and_unc_table() ... parameters passed rollupTree::rollup()","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties uncertainties — rollup_mass_props_unc","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties uncertainties — rollup_mass_props_unc","text":"","code":"mp_ru <- rollup_mass_props(mp_tree_small, mp_table_small) rollup_mass_props_unc(mp_tree_small, mp_ru) #>           id         name POIconv       mass          Cx           Cy #> 1        C.1     System 1       - 635.660192   0.3318148   1.36614630 #> 2      C.1.1    Segment 1       - 372.387816   2.7823660   2.27331548 #> 3      C.1.2    Segment 2       - 263.272375  -3.1343878   0.08299326 #> 4    C.1.1.1    Element 1       -  45.236245   0.6449576   3.40672797 #> 5    C.1.1.2    Element 2       -  83.911615   1.7979454  -0.58033620 #> 6    C.1.1.3    Element 3       - 123.272571   6.4136420   1.63215491 #> 7    C.1.1.4    Element 4       - 119.967384   0.5455573   4.50076013 #> 8    C.1.2.1    Element 5       -  97.128572   2.2245377  -4.18310553 #> 9    C.1.2.2    Element 6       -  46.012547 -23.9286608  -6.13818202 #> 10   C.1.2.3    Element 7       - 120.131257   0.4974119   5.91504913 #> 11 C.1.1.1.1  Subsystem 1       -  24.182758  12.7664845  -7.33521244 #> 12 C.1.1.1.2  Subsystem 2       -  21.053487 -13.2782447  15.74528976 #> 13 C.1.1.2.1  Subsystem 3       -  32.614045  -5.4164053   4.35058525 #> 14 C.1.1.2.2  Subsystem 4       -  18.443508   5.9446314  -2.86799230 #> 15 C.1.1.2.3  Subsystem 5       -  32.854062   6.6317379  -4.19099753 #> 16 C.1.1.3.1  Subsystem 6       -  18.809672 -11.5693537   4.60172214 #> 17 C.1.1.3.2  Subsystem 7       -  21.309572   3.7950516  -3.76444320 #> 18 C.1.1.3.3  Subsystem 8       -  28.107067   3.8710126   2.64280855 #> 19 C.1.1.3.4  Subsystem 9       -  31.461107  16.1782715   8.40798505 #> 20 C.1.1.3.5 Subsystem 10       -  23.585154  13.1261314  -6.10317776 #> 21 C.1.1.4.1 Subsystem 11       -  14.945121  10.1956219   2.09268188 #> 22 C.1.1.4.2 Subsystem 12       -  20.623094 -14.8515213  16.29220017 #> 23 C.1.1.4.3 Subsystem 13       -  27.123877  -2.3767554   2.44839217 #> 24 C.1.1.4.4 Subsystem 14       -  27.512486  12.0096670   3.91406747 #> 25 C.1.1.4.5 Subsystem 15       -  29.762807  -1.5653890  -0.04778306 #> 26 C.1.2.1.1 Subsystem 16       -  22.161742  17.0733845  -8.78939395 #> 27 C.1.2.1.2 Subsystem 17       -  29.542394  -4.0320250 -10.63513308 #> 28 C.1.2.1.3 Subsystem 18       -  19.515486 -12.2676108 -10.14297124 #> 29 C.1.2.1.4 Subsystem 19       -  25.908950   7.5732239  11.60299863 #> 30 C.1.2.2.1 Subsystem 20       -  12.256125 -25.7562192  -0.82404359 #> 31 C.1.2.2.2 Subsystem 21       -  24.446707 -17.8654251  -8.50267866 #> 32 C.1.2.2.3 Subsystem 22       -   9.309714 -37.4443673  -6.92516492 #> 33 C.1.2.3.1 Subsystem 23       -  26.125954   2.3614452   7.99620979 #> 34 C.1.2.3.2 Subsystem 24       -  23.382905  18.2483930  -4.68014506 #> 35 C.1.2.3.3 Subsystem 25       -  35.450403  -3.5173534   6.67001106 #> 36 C.1.2.3.4 Subsystem 26       -  17.672250 -15.1876417   6.45654603 #> 37 C.1.2.3.5 Subsystem 27       -  17.499745  -2.0314207  14.88894819 #>             Cz        Ixx        Iyy        Izz        Ixy         Ixz #> 1   -0.6631918 4250838.37 4135081.32 4387869.58 -36939.709  -5703.6348 #> 2   -2.0480047 2585081.27 2468902.68 2586058.07 -85117.550 -37973.2139 #> 3    1.2955683 1663292.93 1659055.03 1795672.21  50176.631  29218.3835 #> 4    2.5048850  320437.39  303359.22  307896.12  11813.853  12051.3839 #> 5   -7.3675365  604189.22  568712.38  580609.90   2170.787 -48654.5189 #> 6   -2.6674182  872296.76  815356.63  860561.99 -60933.819   5139.9443 #> 7    0.5924761  782574.67  774764.84  833089.04 -38926.964  -7496.6478 #> 8   -2.6720265  575753.16  594699.80  658365.10  -8094.275  16633.8789 #> 9   -4.3577724  302641.25  282354.06  273741.60   3625.318   6155.0957 #> 10   6.6687862  770796.07  751263.47  831661.20  60921.951  12117.6543 #> 11   4.2506333  151242.29  151681.44  140003.01  -9285.981  11631.0816 #> 12   0.4996586  163041.13  143884.89  154262.95  14334.202   1519.8329 #> 13  -8.7423181  255264.69  233424.83  236512.40 -11454.293 -37583.6939 #> 14   1.0825770  134251.66  108878.51  127953.74  -4491.040  -8773.5625 #> 15 -10.7464962  211601.36  221873.09  212043.69  16207.560  -1864.1430 #> 16  -0.2197146  126503.16  130821.45  139832.80 -27330.473  10213.7409 #> 17  -1.9188334  145089.53  116755.20  132187.50 -11581.112  -1088.8058 #> 18  -8.7607161  201630.70  204023.21  213195.56 -18665.529  12743.3930 #> 19  -3.9374914  224390.00  198755.69  188721.43 -13754.623  -3597.5080 #> 20   3.6598721  168849.35  152364.81  172480.75  10479.314 -12953.5995 #> 21 -19.4235427  112296.22   99628.24  119189.42  -8967.034 -17431.1985 #> 22  11.4779120  117592.47  131659.48  128036.99  -9033.020  16001.4758 #> 23  -6.1146799  148774.14  138236.83  178429.75 -10292.288  -4473.0944 #> 24  10.3500735  171140.86  189129.27  181772.95   2690.691  -4928.2962 #> 25   0.1932782  216801.70  193574.31  211705.41 -17153.402    625.5424 #> 26  -3.1579625  135100.03  143906.10  144737.90  11700.688  14145.7523 #> 27  -1.6034710  178572.19  175405.60  195466.28 -22254.105   6406.1793 #> 28  -5.7969012   96462.74   96314.60  119650.33   8648.899   3211.0330 #> 29  -1.1210201  156476.58  167898.91  178778.10  -2639.827  -6387.7831 #> 30 -10.6351375   87544.81   61464.87   67216.86  10928.234  -9715.0064 #> 31  -8.5817965  153686.23  155943.84  138841.51  -9668.028  10857.7610 #> 32  14.9983160   56514.55   57897.93   64554.35   1994.626   2091.3101 #> 33   7.6261517  155060.55  172731.49  188449.97  -1180.988  17992.7924 #> 34  -4.6150983  127797.97  130060.54  141189.76   6231.141  13234.7826 #> 35   0.3587986  236295.35  218763.17  244473.95  29748.102  -4158.0539 #> 36  25.1766073  133656.24  110567.39  129817.97  14334.395 -12586.7635 #> 37  14.4091662  102298.62   95136.55  111067.09   6838.233 -11576.7357 #>              Iyz Ipoint sigma_mass  sigma_Cx  sigma_Cy  sigma_Cz sigma_Ixx #> 1  -41942.778890  FALSE  10.294789  1.381855  1.407531  1.394688 138446.95 #> 2  -24491.138285  FALSE   7.814309  1.782194  1.841904  1.829756 108001.62 #> 3  -18581.162253  FALSE   6.702183  2.182675  2.181724  2.153366  86550.51 #> 4   -7007.889017  FALSE   2.697670  4.984638  5.143223  5.288776  38638.99 #> 5  -26282.536240  FALSE   3.715105  3.745609  3.845263  3.834822  49136.56 #> 6    7778.840431  FALSE   4.536247  3.089637  3.254088  3.201888  64307.68 #> 7    3282.213215  FALSE   4.405276  3.177938  3.239979  3.196096  59947.77 #> 8  -30339.749388  FALSE   3.923178  3.541110  3.479111  3.491385  49715.16 #> 9   -5803.382726  FALSE   2.935268  5.176938  5.277841  5.330365  36925.38 #> 10  24588.805516  FALSE   4.572978  3.231771  3.281807  3.171157  59878.94 #> 11  -3665.048708  FALSE   2.003779  6.712238  6.835242  7.050809  26174.58 #> 12  -4317.230079  FALSE   1.806182  7.246186  7.636462  7.967726  27902.84 #> 13 -15618.080046  FALSE   2.331771  5.999269  6.168735  6.328822  32199.53 #> 14 -12660.695787  FALSE   1.782875  7.445890  8.410330  7.744262  22518.59 #> 15   1819.449055  FALSE   2.277325  6.176942  6.038411  6.106111  29257.48 #> 16  -8358.576150  FALSE   1.782875  8.304336  8.633568  8.088626  25091.88 #> 17  -2664.522232  FALSE   2.003779  7.313716  7.945855  7.973809  27411.53 #> 18   6524.161885  FALSE   2.202638  6.679201  6.930867  6.864306  31706.27 #> 19   8522.567433  FALSE   2.258885  5.775885  6.145021  6.342012  31692.23 #> 20   2207.661280  FALSE   1.851915  6.886384  7.338415  6.887791  26751.68 #> 21  -9165.972965  FALSE   1.584126  9.228064 10.152855  9.212524  24044.58 #> 22  16261.755436  FALSE   1.806182  7.440766  7.351605  7.379150  21990.18 #> 23  -3840.001909  FALSE   2.183567  6.583193  6.699780  6.371265  25494.63 #> 24  21945.766469  FALSE   2.125328  6.893469  6.553788  6.744347  27563.92 #> 25 -18281.983865  FALSE   2.085599  6.128316  6.631502  6.598516  32320.03 #> 26      5.303518  FALSE   1.982796  7.521495  7.349680  7.674871  24440.47 #> 27  -9853.100892  FALSE   2.164328  6.316961  6.320899  6.223356  27305.60 #> 28   3122.748235  FALSE   1.711052  7.850957  7.438876  7.864638  21251.30 #> 29 -22770.952906  FALSE   1.961589  6.733433  6.726673  6.534697  25180.93 #> 30  15205.337279  FALSE   1.416886  8.822129 10.293580  9.685666  18663.60 #> 31 -16077.685964  FALSE   2.221545  7.213945  7.095451  7.561693  27423.23 #> 32  -5237.531391  FALSE   1.293434 12.459427 12.192670 11.314738  15462.25 #> 33   6516.436175  FALSE   2.183567  7.340154  6.971327  6.741022  28157.26 #> 34  -8520.729962  FALSE   2.003779  7.139603  7.170140  6.766174  23640.49 #> 35   9962.012056  FALSE   2.487969  5.832823  6.355414  5.928080  34261.51 #> 36  11234.043728  FALSE   1.735323  8.485650  8.543518  8.823966  24680.80 #> 37   9468.427630  FALSE   1.711052  7.813557  8.057258  7.799337  19305.84 #>    sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz #> 1  137009.71 139073.03 64821.460 63906.768 64024.216 #> 2  103675.01 106413.04 49791.550 48317.535 50123.785 #> 3   89376.70  89372.21 41411.674 41722.019 39794.807 #> 4   37230.76  35394.58 16898.628 17683.948 18016.633 #> 5   48814.54  49341.14 23321.341 22902.162 23398.201 #> 6   59394.62  61878.03 28826.884 27561.503 29301.631 #> 7   58473.05  61552.48 28528.641 27011.938 27835.874 #> 8   52835.92  53243.40 25090.214 24823.791 22600.420 #> 9   38145.43  35982.34 16268.575 18063.736 17049.638 #> 10  59901.49  60807.41 27933.383 27546.666 27651.306 #> 11  25990.71  24135.26 11648.880 12377.863 12340.521 #> 12  26001.07  24651.86 11579.898 12231.336 12825.028 #> 13  31432.43  31009.17 14813.681 14988.362 15574.425 #> 14  20353.59  21693.13 10239.135  9843.484 10856.087 #> 15  30974.87  31348.67 14648.712 14055.614 13533.108 #> 16  23585.30  26889.80 12628.435 11017.978 11569.801 #> 17  25573.80  23897.37 10772.949 11482.496 11591.548 #> 18  29929.20  30508.35 14386.601 14177.424 14768.103 #> 19  27843.23  28779.54 12981.406 12470.376 13886.484 #> 20  24184.44  26575.96 12727.372 11592.323 13118.251 #> 21  21460.33  24968.45 11597.270 10381.893 11087.421 #> 22  22585.31  22689.94 10305.491 10307.734 10099.121 #> 23  24393.33  27190.49 12977.100 11434.763 11592.999 #> 24  30129.41  29502.91 13082.245 13298.357 13067.558 #> 25  28887.67  31192.78 14730.324 13427.046 14963.041 #> 26  25660.62  24771.13 11581.874 11775.493 11005.418 #> 27  30154.80  31098.87 14395.250 14118.471 12714.047 #> 28  22575.79  21748.94 10248.031 10693.686  8620.818 #> 29  25676.92  26189.11 12652.706 12249.382 11973.502 #> 30  15193.28  16940.24  7747.883  7035.366  8892.595 #> 31  30079.66  25397.14 10968.544 14186.802 12136.028 #> 32  16824.53  18590.62  8961.091  8126.012  7598.579 #> 33  31224.03  30289.94 13203.630 13501.351 12962.616 #> 34  23908.81  24132.28 11362.995 11351.608 11012.881 #> 35  30727.89  33968.97 15492.821 14389.849 15528.989 #> 36  24496.83  23317.08 10934.029 11144.141 11452.882 #> 37  19410.71  20455.56  9835.921  9331.513  9153.404"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","title":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","text":"rollup_mass_props_unc_fast() performs operation rollup_mass_props_unc() omits input validation. somewhat faster  rollup_mass_props_unc() used caution circumstances caller assumes responsibility validity input. behavior passed ill-formed input unspecified.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","text":"","code":"rollup_mass_props_unc_fast(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","text":"updated data frame","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_mass_props_unc_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up mass properties uncertainties without input validation — rollup_mass_props_unc_fast","text":"","code":"rollup_mass_props_unc_fast(sawe_tree, sawe_table) #>         id  mass       Cx      Cy      Cz     Ixx      Iyy      Izz     Ixy #> 1   Widget 57.83 121.2000  0.0400 -0.1600 7258.90  8607.02 10453.40  834.44 #> 2 2nd Part 16.80  70.9000 -0.9500  0.4600   65.07  1124.65  1078.82   76.01 #> 3 Combined 74.63 109.8657 -0.1829 -0.0204 7341.73 42739.26 44547.27 1559.36 #>        Ixz      Iyz sigma_mass  sigma_Cx  sigma_Cy   sigma_Cz sigma_Ixx #> 1 -1198.38 -1066.58    1.24160 0.2764000 0.2085000 0.06690000  386.9233 #> 2   202.83    13.62    1.73080 0.6234000 0.5173000 0.14050000   12.4687 #> 3 -1401.94 -1060.95    2.13008 0.9580009 0.1999846 0.06178391  387.4017 #>   sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3 2787.8795 2813.9052 1488.0844  418.6026  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_radii_of_gyration_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Roll up radii of gyration uncertainties — rollup_radii_of_gyration_unc","title":"Roll up radii of gyration uncertainties — rollup_radii_of_gyration_unc","text":"rollup_radii_of_gyration_unc() adds calculated radii gyration uncertainties data frame rolled-mass properties uncertainties. Radii gyration uncertainties calculated directly moments inertia mass uncertainties; recursively-defined. Radii gyration uncertainties composite elements depend uncertainties component elements.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_radii_of_gyration_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roll up radii of gyration uncertainties — rollup_radii_of_gyration_unc","text":"","code":"rollup_radii_of_gyration_unc(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/rollup_radii_of_gyration_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roll up radii of gyration uncertainties — rollup_radii_of_gyration_unc","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_radii_of_gyration_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roll up radii of gyration uncertainties — rollup_radii_of_gyration_unc","text":"data frame columns df, plus radii gyration columns sigma_kx, sigma_ky, sigma_kz.`","code":""},{"path":"https://jsjuni.github.io/massProps/reference/rollup_radii_of_gyration_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roll up radii of gyration uncertainties — rollup_radii_of_gyration_unc","text":"","code":"sawe_table_rollup <- rollup_mass_props(sawe_tree, sawe_table) rollup_radii_of_gyration_unc(sawe_tree, add_radii_of_gyration(sawe_table_rollup)) #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 1   Widget 57.83 121.2000  0.0400000 -0.16000000 7258.900  8607.02 10453.40 #> 2 2nd Part 16.80  70.9000 -0.9500000  0.46000000   65.070  1124.65  1078.82 #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx #> 1  834.440 -1198.380 -1066.580     1.2416   0.2764   0.2085   0.0669  386.9233 #> 2   76.010   202.830    13.620     1.7308   0.6234   0.5173   0.1405   12.4687 #> 3 1558.714 -1401.534 -1060.951     2.1301   0.9591   0.2000   0.0618  387.4017 #>   sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv        kx #> 1  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + 11.203631 #> 2  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       +  1.968048 #> 3 2794.5468 2820.5125 1488.1857  418.6320  125.3175  FALSE       +  9.918422 #>          ky        kz  sigma_kx  sigma_ky  sigma_kz #> 1 12.199719 13.444733 0.3219068 0.1786630 0.3031529 #> 2  8.181898  8.013456 0.2140836 0.5789819 0.5769935 #> 3 23.912428 24.413817 0.2971254 0.5505729 0.5422391"},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"Mass Properties Uncertainties Table SAWE Paper . 3360","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"","code":"sawe_table"},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"data frame columns: id unique key mass mass Cx x component center mass Cy y component center mass Cz z component center mass Ixx Ixx moment inertia Iyy Iyy moment inertia Izz Izz moment inertia Ixy Ixy product inertia Ixz Ixz product inertia Iyz Iyz product inertia sigma_mass mass uncertainty sigma_Cx x component center mass uncertainty sigma_Cy y component center mass uncertainty sigma_Cz z component center mass uncertainty sigma_Ixx Ixx moment inertia uncertainty sigma_Iyy Iyy moment inertia uncertainty sigma_Izz Izz moment inertia uncertainty sigma_Ixy Ixy product inertia uncertainty sigma_Ixz Ixz product inertia uncertainty sigma_Iyz Iyz product inertia uncertainty Ipoint logical indicator consider item point mass POIconv sign convention products inertia (one c(\"+\", \"-\"))","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_table.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mass Properties and Uncertainties Table from SAWE Paper No. 3360 — sawe_table","text":"Zimmerman, Robert L., John H. Nakai. 2005. “Sure? Uncertainty Mass Properties Engineering.” 64th Annual International Conference Mass Properties Engineering, 123–60. Society Allied Weight Engineers. Note: results combined mass properties uncertainties published example accurate within approximately 0.2%.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"Mass Properties Uncertainties Tree SAWE Paper . 3360","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"","code":"sawe_tree"},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"igraph tree edges child id parent id.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/sawe_tree.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mass Properties and Uncertainties Tree from SAWE Paper No. 3360 — sawe_tree","text":"Zimmerman, Robert L., John H. Nakai. 2005. “Sure? Uncertainty Mass Properties Engineering.” 64th Annual International Conference Mass Properties Engineering, 123–60. Society Allied Weight Engineers.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Set mass properties for a row in a data frame — set_mass_props","title":"Set mass properties for a row in a data frame — set_mass_props","text":"set_mass_props() sets mass properties specified row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set mass properties for a row in a data frame — set_mass_props","text":"","code":"set_mass_props(df, id, mp)"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set mass properties for a row in a data frame — set_mass_props","text":"df data frame id column. id id value desired row. mp list following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. poi_conv Enumeration c(\"+\", \"-\") indicating sign convention products inertia. inertia Numeric 3x3 matrix inertia tensor. signs products inertia determined POIconv. example, Ixy \\(xy\\) element inertia tensor POIconv \"-\"; additive inverse value POIconv \"+\".","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set mass properties for a row in a data frame — set_mass_props","text":"updated data frame columns id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set mass properties for a row in a data frame — set_mass_props","text":"","code":"df <- data.frame(id = c(\"C.1.2.2.3.1.2.3\", \"C.1.2.2.3.2.1.1\")) mp <- get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\") mp$poi_conv = \"+\" set_mass_props(df, \"C.1.2.2.3.2.1.1\", mp) #>                id      mass       Cx        Cy       Cz       Ixx       Iyy #> 1 C.1.2.2.3.1.2.3        NA       NA        NA       NA        NA        NA #> 2 C.1.2.2.3.2.1.1 0.3413137 34.27446 -44.98207 5.211377 0.4986894 0.4528114 #>         Izz        Ixy          Ixz          Iyz POIconv Ipoint #> 1        NA         NA           NA           NA    <NA>     NA #> 2 0.4583186 0.04436985 4.096337e-05 4.510443e-06       +  FALSE"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"set_mass_props_and_unc() convenience wrapper combines results set_mass_props() set_mass_props_unc().","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"","code":"set_mass_props_and_unc(df, id, mpu)"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"df data frame id column. id id value desired row. mpu list containing following named elements: mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. poi_conv Enumeration c(\"+\", \"-\") indicating sign convention products inertia. inertia Numeric 3x3 matrix inertia tensor. signs products inertia determined POIconv. example, Ixy \\(xy\\) element inertia tensor POIconv \"-\"; additive inverse value POIconv \"+\". sigma_mass Numeric mass uncertainty. sigma_center_mass Numeric 3-vector center mass uncertainties. sigma_inertia Numeric 3x3 matrix inertia tensor uncertainties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set mass properties and uncertainties for a row in a data frame — set_mass_props_and_unc","text":"","code":"mpu <- c(get_mass_props_and_unc(sawe_table, \"Widget\"), poi_conv = \"+\") set_mass_props_and_unc(sawe_table, \"Combined\", mpu) #>         id  mass    Cx    Cy    Cz     Ixx     Iyy      Izz    Ixy      Ixz #> 1   Widget 57.83 121.2  0.04 -0.16 7258.90 8607.02 10453.40 834.44 -1198.38 #> 2 2nd Part 16.80  70.9 -0.95  0.46   65.07 1124.65  1078.82  76.01   202.83 #> 3 Combined 57.83 121.2  0.04 -0.16 7258.90 8607.02 10453.40 834.44 -1198.38 #>        Iyz sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy sigma_Izz #> 1 -1066.58     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792  414.5547 #> 2    13.62     1.7308   0.6234   0.5173   0.1405   12.4687  109.1324  108.5481 #> 3 -1066.58     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792  414.5547 #>   sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1 1440.5402  344.6237  124.6860  FALSE       + #> 2   55.8879  212.1241   11.5408  FALSE       + #> 3 1440.5402  344.6237  124.6860  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","title":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","text":"set_mass_props_unc() sets mass properties uncertainties selected row data frame id column.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","text":"","code":"set_mass_props_unc(df, id, mpu)"},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","text":"df data frame id column. id id value desired row. mpu list following named elements: sigma_mass Numeric mass uncertainty. sigma_center_mass Numeric 3-vector center mass uncertainties. sigma_inertia Numeric 3x3 matrix inertia tensor uncertainties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set mass properties uncertainties for a row in a data frame — set_mass_props_unc","text":"","code":"set_mass_props_unc(sawe_table, \"Combined\", get_mass_props_unc(sawe_table, \"Widget\")) #>         id  mass       Cx      Cy      Cz     Ixx      Iyy      Izz     Ixy #> 1   Widget 57.83 121.2000  0.0400 -0.1600 7258.90  8607.02 10453.40  834.44 #> 2 2nd Part 16.80  70.9000 -0.9500  0.4600   65.07  1124.65  1078.82   76.01 #> 3 Combined 74.63 109.8657 -0.1829 -0.0204 7341.73 42739.26 44547.27 1559.36 #>        Ixz      Iyz sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy #> 1 -1198.38 -1066.58     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792 #> 2   202.83    13.62     1.7308   0.6234   0.5173   0.1405   12.4687  109.1324 #> 3 -1401.94 -1060.95     1.2416   0.2764   0.2085   0.0669  386.9233  171.4792 #>   sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3  414.5547 1440.5402  344.6237  124.6860  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","title":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","text":"set_poi_conv_from_target() sets products inertia sign convention mass properties list target item mass properties table. convention determines products inertia saved data frame. signature set_poi_conv_from_target() can passed override argument update_mass_props() update_mass_props_and_unc(), thus ensuring calculated POI values follow negative integral convention target item written.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","text":"","code":"set_poi_conv_from_target(df, target, mp)"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","text":"df data frame columns id POIconv. target id value target row. mp mass properties list.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","text":"mass properties list named element poi_conv set POIconv column target row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_from_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set POI convention for mass properties list to match a target item — set_poi_conv_from_target","text":"","code":"set_poi_conv_from_target(mp_table, \"C.1.2.2.3.2.1\", get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\")) #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>  #> $poi_conv #> [1] \"-\" #>"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":null,"dir":"Reference","previous_headings":"","what":"Set POI sign convention for mass properties list to ","title":"Set POI sign convention for mass properties list to ","text":"set_poi_conv_minus() sets products inertia sign convention mass properties list \"-\". convention determines products inertia saved data set. signature set_poi_conv_minus() can passed override argument update_mass_props() update_mass_props_and_unc(), thus ensuring calculated POI values saved using negative integral convention.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set POI sign convention for mass properties list to ","text":"","code":"set_poi_conv_minus(ds, target, mp)"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set POI sign convention for mass properties list to ","text":"ds Ignored. target Ignored. mp mass properties list.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set POI sign convention for mass properties list to ","text":"mass properties list named element poi_conv set \"-\"","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_minus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set POI sign convention for mass properties list to ","text":"","code":"set_poi_conv_minus(NULL, NULL, get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\")) #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>  #> $poi_conv #> [1] \"-\" #>"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Set POI sign convention for mass properties list to ","title":"Set POI sign convention for mass properties list to ","text":"set_poi_conv_plus() sets products inertia sign convention mass properties list \"+\". convention determines products inertia saved data set. signature set_poi_conv_plus() can passed override argument update_mass_props() update_mass_props_and_unc(), thus ensuring calculated POI values saved using positive integral convention.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set POI sign convention for mass properties list to ","text":"","code":"set_poi_conv_plus(ds, target, mp)"},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set POI sign convention for mass properties list to ","text":"ds Ignored. target Ignored. mp mass properties list.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set POI sign convention for mass properties list to ","text":"input mass properties list named element poi_conv set \"+\"","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_poi_conv_plus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set POI sign convention for mass properties list to ","text":"","code":"set_poi_conv_plus(NULL, NULL, get_mass_props(mp_table, \"C.1.2.2.3.2.1.1\")) #> $mass #> [1] 0.3413137 #>  #> $center_mass #>          x          y          z  #>  34.274465 -44.982071   5.211377  #>  #> $inertia #>               x             y             z #> x  4.986894e-01 -4.436985e-02 -4.096337e-05 #> y -4.436985e-02  4.528114e-01 -4.510443e-06 #> z -4.096337e-05 -4.510443e-06  4.583186e-01 #>  #> $point #> [1] FALSE #>  #> $poi_conv #> [1] \"+\" #>"},{"path":"https://jsjuni.github.io/massProps/reference/set_radii_of_gyration.html","id":null,"dir":"Reference","previous_headings":"","what":"Set radii of gyration for a row in a data frame — set_radii_of_gyration","title":"Set radii of gyration for a row in a data frame — set_radii_of_gyration","text":"set_radii_of_gyration() sets radii gyration selected row data frame id column.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_radii_of_gyration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set radii of gyration for a row in a data frame — set_radii_of_gyration","text":"","code":"set_radii_of_gyration(df, id, rg)"},{"path":"https://jsjuni.github.io/massProps/reference/set_radii_of_gyration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set radii of gyration for a row in a data frame — set_radii_of_gyration","text":"df data frame id column. id id value desired row. rg list following named elements: radii_gyration Numeric 3x3 matrix radii gyration.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_radii_of_gyration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set radii of gyration for a row in a data frame — set_radii_of_gyration","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_radii_of_gyration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set radii of gyration for a row in a data frame — set_radii_of_gyration","text":"","code":"rgl <- list(radii_gyration = c(x = 1, y = 2, z = 3)) set_radii_of_gyration(mp_table, \"C.1\", rgl)[1:5, ] #>        id      name POIconv mass Cx Cy Cz Ixx Iyy Izz Ixy Ixz Iyz Ipoint #> 1     C.1  System 1       -   NA NA NA NA  NA  NA  NA  NA  NA  NA     NA #> 2   C.1.1 Segment 1       -   NA NA NA NA  NA  NA  NA  NA  NA  NA     NA #> 3   C.1.2 Segment 2       -   NA NA NA NA  NA  NA  NA  NA  NA  NA     NA #> 4 C.1.1.1 Element 1       -   NA NA NA NA  NA  NA  NA  NA  NA  NA     NA #> 5 C.1.1.2 Element 2       -   NA NA NA NA  NA  NA  NA  NA  NA  NA     NA #>   sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy sigma_Izz sigma_Ixy #> 1         NA       NA       NA       NA        NA        NA        NA        NA #> 2         NA       NA       NA       NA        NA        NA        NA        NA #> 3         NA       NA       NA       NA        NA        NA        NA        NA #> 4         NA       NA       NA       NA        NA        NA        NA        NA #> 5         NA       NA       NA       NA        NA        NA        NA        NA #>   sigma_Ixz sigma_Iyz kx ky kz #> 1        NA        NA  1  2  3 #> 2        NA        NA NA NA NA #> 3        NA        NA NA NA NA #> 4        NA        NA NA NA NA #> 5        NA        NA NA NA NA"},{"path":"https://jsjuni.github.io/massProps/reference/set_radii_of_gyration_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Set radii of gyration uncertainties for a row in a data frame — set_radii_of_gyration_unc","title":"Set radii of gyration uncertainties for a row in a data frame — set_radii_of_gyration_unc","text":"set_radii_of_gyration_unc() sets radii gyration uncertainties selected row data frame id column.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_radii_of_gyration_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set radii of gyration uncertainties for a row in a data frame — set_radii_of_gyration_unc","text":"","code":"set_radii_of_gyration_unc(df, id, rgu)"},{"path":"https://jsjuni.github.io/massProps/reference/set_radii_of_gyration_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set radii of gyration uncertainties for a row in a data frame — set_radii_of_gyration_unc","text":"df data frame id column. id id value desired row. rgu list following named elements: sigma_radii_gyration Numeric 3x3 matrix radii gyration uncertainties.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_radii_of_gyration_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set radii of gyration uncertainties for a row in a data frame — set_radii_of_gyration_unc","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/set_radii_of_gyration_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set radii of gyration uncertainties for a row in a data frame — set_radii_of_gyration_unc","text":"","code":"rgul <- list(sigma_radii_gyration = c(x = 1, y = 2, z = 3)) set_radii_of_gyration_unc(mp_table, \"C.1\", rgul)[1:5, ] #>        id      name POIconv mass Cx Cy Cz Ixx Iyy Izz Ixy Ixz Iyz Ipoint #> 1     C.1  System 1       -   NA NA NA NA  NA  NA  NA  NA  NA  NA     NA #> 2   C.1.1 Segment 1       -   NA NA NA NA  NA  NA  NA  NA  NA  NA     NA #> 3   C.1.2 Segment 2       -   NA NA NA NA  NA  NA  NA  NA  NA  NA     NA #> 4 C.1.1.1 Element 1       -   NA NA NA NA  NA  NA  NA  NA  NA  NA     NA #> 5 C.1.1.2 Element 2       -   NA NA NA NA  NA  NA  NA  NA  NA  NA     NA #>   sigma_mass sigma_Cx sigma_Cy sigma_Cz sigma_Ixx sigma_Iyy sigma_Izz sigma_Ixy #> 1         NA       NA       NA       NA        NA        NA        NA        NA #> 2         NA       NA       NA       NA        NA        NA        NA        NA #> 3         NA       NA       NA       NA        NA        NA        NA        NA #> 4         NA       NA       NA       NA        NA        NA        NA        NA #> 5         NA       NA       NA       NA        NA        NA        NA        NA #>   sigma_Ixz sigma_Iyz sigma_kx sigma_ky sigma_kz #> 1        NA        NA        1        2        3 #> 2        NA        NA       NA       NA       NA #> 3        NA        NA       NA       NA       NA #> 4        NA        NA       NA       NA       NA #> 5        NA        NA       NA       NA       NA"},{"path":"https://jsjuni.github.io/massProps/reference/test_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Table — test_table","title":"Example Mass Properties Table — test_table","text":"Example Mass Properties Table","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Table — test_table","text":"","code":"test_table"},{"path":"https://jsjuni.github.io/massProps/reference/test_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Table — test_table","text":"data frame columns: id unique key parent parent key mass mass Cx x component center mass Cy y component center mass Cz z component center mass Ixx Ixx moment inertia Iyy Iyy moment inertia Izz Izz moment inertia Ixy Ixy product inertia Ixz Ixz product inertia Iyz Iyz product inertia POIconv sign convention products inertia (one c(\"+\", \"-\")) Ipoint logical indicator consider item point mass","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties Tree — test_tree","title":"Example Mass Properties Tree — test_tree","text":"Example Mass Properties Tree","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties Tree — test_tree","text":"","code":"test_tree"},{"path":"https://jsjuni.github.io/massProps/reference/test_tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties Tree — test_tree","text":"igraph tree edges child id parent id.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_unc_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Mass Properties and Uncertainties Table — test_unc_table","title":"Example Mass Properties and Uncertainties Table — test_unc_table","text":"Example Mass Properties Uncertainties Table","code":""},{"path":"https://jsjuni.github.io/massProps/reference/test_unc_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Mass Properties and Uncertainties Table — test_unc_table","text":"","code":"test_unc_table"},{"path":"https://jsjuni.github.io/massProps/reference/test_unc_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Mass Properties and Uncertainties Table — test_unc_table","text":"data frame columns: id unique key parent parent key mass mass Cx x component center mass Cy y component center mass Cz z component center mass Ixx Ixx moment inertia Iyy Iyy moment inertia Izz Izz moment inertia Ixy Ixy product inertia Ixz Ixz product inertia Iyz Iyz product inertia POIconv sign convention products inertia (one c(\"+\", \"-\")) Ipoint logical indicator consider item point mass sigma_mass mass uncertainty sigma_Cx x component center mass uncertainty sigma_Cy y component center mass uncertainty sigma_Cz z component center mass uncertainty sigma_Ixx Ixx moment inertia uncertainty sigma_Iyy Iyy moment inertia uncertainty sigma_Izz Izz moment inertia uncertainty sigma_Ixy Ixy product inertia uncertainty sigma_Ixz Ixz product inertia uncertainty sigma_Iyz Iyz product inertia uncertainty","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Update mass properties — update_mass_props","title":"Update mass properties — update_mass_props","text":"update_mass_props() updates mass properties specified target row specified source rows data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update mass properties — update_mass_props","text":"","code":"update_mass_props(df, target, sources, override = set_poi_conv_from_target)"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update mass properties — update_mass_props","text":"df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint. target id value target row. sources List id values source rows. override override function, called override(df, target, value). default override sets POI sign convention computed aggregate POIconv column target row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update mass properties — update_mass_props","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update mass properties — update_mass_props","text":"","code":"leaves <- names(igraph::neighbors(test_tree, \"A.3\", mode = \"in\")) update_mass_props(test_table, \"A.3\", leaves) #>     id parent mass Cx Cy Cz Ixx  Ixy   Ixz Iyy   Iyz Izz POIconv Ipoint #> 1  A.1          NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 2  A.2    A.1   NA NA NA NA  NA   NA    NA  NA    NA  NA       -  FALSE #> 3  A.3    A.1    8 -1  0  0  32 -0.4  -0.4  24   0.4  24       -  FALSE #> 4  C.1    A.1    5  0  0  0  80 -4.0 -24.0  80 -24.0  75       -  FALSE #> 5  P.1    A.2    2  1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 6  P.2    A.2    2  1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 7  P.3    A.2    2  1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 8  P.4    A.2    2  1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 9  P.5    A.3    2 -1  1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 10 P.6    A.3    2 -1  1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 11 P.7    A.3    2 -1 -1  1   4 -0.1  -0.1   4   0.1   4       -  FALSE #> 12 P.8    A.3    2 -1 -1 -1   4 -0.1  -0.1   4   0.1   4       -  FALSE"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Update mass properties and uncertainties — update_mass_props_and_unc","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"update_mass_props_and_unc() updates mass properties uncertainties specified target row specified source rows data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"","code":"update_mass_props_and_unc(   df,   target,   sources,   override = set_poi_conv_from_target )"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz. target id value target row. sources List id values source rows. override override function, called override(df, target, value). default override sets POI sign convention computed aggregate POIconv column target row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update mass properties and uncertainties — update_mass_props_and_unc","text":"","code":"leaves <- list(\"Widget\", \"2nd Part\") update_mass_props_and_unc(sawe_table, \"Combined\", leaves) #>         id  mass       Cx         Cy          Cz      Ixx      Iyy      Izz #> 1   Widget 57.83 121.2000  0.0400000 -0.16000000 7258.900  8607.02 10453.40 #> 2 2nd Part 16.80  70.9000 -0.9500000  0.46000000   65.070  1124.65  1078.82 #> 3 Combined 74.63 109.8769 -0.1828594 -0.02043146 7341.733 42673.75 44482.05 #>        Ixy       Ixz       Iyz sigma_mass sigma_Cx  sigma_Cy   sigma_Cz #> 1  834.440 -1198.380 -1066.580    1.24160  0.27640 0.2085000 0.06690000 #> 2   76.010   202.830    13.620    1.73080  0.62340 0.5173000 0.14050000 #> 3 1558.714 -1401.534 -1060.951    2.13008  0.95821 0.1999847 0.06178402 #>   sigma_Ixx sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  386.9233  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2   12.4687  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3  387.4017 2789.3133 2815.3260 1488.0948  418.6048  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Update mass properties uncertainties — update_mass_props_unc","title":"Update mass properties uncertainties — update_mass_props_unc","text":"update_mass_props_unc() updates mass properties uncertainties specified target row specified source rows data frame (least) columns: id, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update mass properties uncertainties — update_mass_props_unc","text":"","code":"update_mass_props_unc(df, target, sources, override = set_poi_conv_from_target)"},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update mass properties uncertainties — update_mass_props_unc","text":"df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz. target id value target row. sources List id values source rows. override override function, called override(df, target, value). default override sets POI sign convention computed aggregate POIconv column target row data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update mass properties uncertainties — update_mass_props_unc","text":"updated data frame.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/update_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update mass properties uncertainties — update_mass_props_unc","text":"","code":"leaves <- names(igraph::neighbors(sawe_tree, \"Combined\", mode = \"in\")) update_mass_props_unc(sawe_table, \"Combined\", leaves) #>         id  mass       Cx      Cy      Cz     Ixx      Iyy      Izz     Ixy #> 1   Widget 57.83 121.2000  0.0400 -0.1600 7258.90  8607.02 10453.40  834.44 #> 2 2nd Part 16.80  70.9000 -0.9500  0.4600   65.07  1124.65  1078.82   76.01 #> 3 Combined 74.63 109.8657 -0.1829 -0.0204 7341.73 42739.26 44547.27 1559.36 #>        Ixz      Iyz sigma_mass  sigma_Cx  sigma_Cy   sigma_Cz sigma_Ixx #> 1 -1198.38 -1066.58    1.24160 0.2764000 0.2085000 0.06690000  386.9233 #> 2   202.83    13.62    1.73080 0.6234000 0.5173000 0.14050000   12.4687 #> 3 -1401.94 -1060.95    2.13008 0.9580009 0.1999846 0.06178391  387.4017 #>   sigma_Iyy sigma_Izz sigma_Ixy sigma_Ixz sigma_Iyz Ipoint POIconv #> 1  171.4792  414.5547 1440.5402  344.6237  124.6860  FALSE       + #> 2  109.1324  108.5481   55.8879  212.1241   11.5408  FALSE       + #> 3 2787.8795 2813.9052 1488.0844  418.6026  125.3175  FALSE       +"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate mass properties — validate_mass_props","title":"Validate mass properties — validate_mass_props","text":"validate_mass_props() ensures mass properties list satisfies following constraints: mass non-missing positive center_mass 3-vector non-missing numeric values point TRUE FALSE point FALSE: inertia positive definite eigenvalues \\(\\{\\lambda_1, \\lambda_2, \\lambda_3\\}\\)  inertia satisfy triangle inequalities: \\(\\lambda_1 < \\lambda_2 + \\lambda_3\\) \\(\\lambda_2 < \\lambda_1 + \\lambda_3\\) \\(\\lambda_3 < \\lambda_1 + \\lambda_2\\)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate mass properties — validate_mass_props","text":"","code":"validate_mass_props(mp)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate mass properties — validate_mass_props","text":"mp Mass properties list containing following named elements mass Numeric mass. center_mass Numeric 3-vector center mass. point Logical indicating point mass. inertia point masses excluded calculations. inertia Numeric 3x3 matrix inertia tensor.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate mass properties — validate_mass_props","text":"TRUE valid, stops otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate mass properties — validate_mass_props","text":"","code":"mp <- get_mass_props(test_table, \"C.1\") validate_mass_props(mp) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate mass properties and uncertainties — validate_mass_props_and_unc","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"validate_mass_props_and_unc() convenience wrapper calculates logical conjunction validate_mass_props() validate_mass_props_unc().","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"","code":"validate_mass_props_and_unc(mpu)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"mpu Mass properties uncertainties list containing following named elements mass mass (numeric) center_mass center mass (3-dimensional numeric) inertia Inertia tensor (3x3 numeric matrix) point Logical indicating point mass, .e., negligible inertia sigma_mass mass uncertainty sigma_center_mass center mass uncertainty (3-dimensional numeric) sigma_inertia Inertia tensor uncertainty (3x3 numeric matrix)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"TRUE valid, stops otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate mass properties and uncertainties — validate_mass_props_and_unc","text":"","code":"mpu <- get_mass_props_and_unc(sawe_table, \"Widget\") validate_mass_props_and_unc(mpu) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"validate_mass_props_and_unc() calls validate_mass_props_table() applies checks validate_mass_props_and_unc() every row data frame corresponding leaf vertex tree.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"","code":"validate_mass_props_and_unc_table(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint, sigma_mass, sigma_Cx, sigma_Cy, sigma_Cz, sigma_Ixx, sigma_Iyy, sigma_Izz, sigma_Ixy, sigma_Ixz, sigma_Iyz.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"TRUE valid, stops error otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_and_unc_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a mass properties and uncertainties table — validate_mass_props_and_unc_table","text":"","code":"validate_mass_props_and_unc_table(mp_tree_small, mp_table_small) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a mass properties table — validate_mass_props_table","title":"Validate a mass properties table — validate_mass_props_table","text":"validate_mass_props_table() checks names vertices tree id values data frame identical. applies checks validate_mass_props() every row data frame corresponding leaf vertex tree. validate_mass_props_table() ensures id column table vertices tree contain identifiers, mass properties every leaf element table valid.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a mass properties table — validate_mass_props_table","text":"","code":"validate_mass_props_table(tree, df)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a mass properties table — validate_mass_props_table","text":"tree 'igraph' tree whose vertices named values id column df whose directed edges point child id parent id. df data frame  (least) columns: id, mass, Cx, Cy, Cz, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, POIconv, Ipoint.","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a mass properties table — validate_mass_props_table","text":"TRUE valid, stops error otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a mass properties table — validate_mass_props_table","text":"","code":"validate_mass_props_table(mp_tree_small, mp_table_small) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_unc.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate mass properties uncertainties — validate_mass_props_unc","title":"Validate mass properties uncertainties — validate_mass_props_unc","text":"validate_mass_props_unc() ensures mass properties uncertainties list satisfies following constraints: sigma_mass non-missing non-negative sigma_center_mass 3-vector non-missing non-negative values point FALSE, sigma_inertia contains missing negative values","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_unc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate mass properties uncertainties — validate_mass_props_unc","text":"","code":"validate_mass_props_unc(mp)"},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_unc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate mass properties uncertainties — validate_mass_props_unc","text":"mp Mass properties uncertainties list containing following named elements point Logical indicating point mass, .e., negligible inertia sigma_mass mass uncertainty sigma_center_mass center mass uncertainty (3-dimensional numeric) sigma_inertia Inertia tensor uncertainty (3x3 numeric matrix)","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_unc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate mass properties uncertainties — validate_mass_props_unc","text":"TRUE valid, stops otherwise","code":""},{"path":"https://jsjuni.github.io/massProps/reference/validate_mass_props_unc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate mass properties uncertainties — validate_mass_props_unc","text":"","code":"mp <- get_mass_props_and_unc(sawe_table, \"Widget\") validate_mass_props_unc(mp) #> [1] TRUE"},{"path":"https://jsjuni.github.io/massProps/news/index.html","id":"massprops-development-version","dir":"Changelog","previous_headings":"","what":"massProps (development version)","title":"massProps (development version)","text":"Invocation instructions vignette cleaned (#41). Covariance exposition RoG uncertainty clarified (#43). Initialization rollup_radii_of_gyration_unc() cleaned (#44). igraph loading fix vignette (#48).","code":""},{"path":"https://jsjuni.github.io/massProps/news/index.html","id":"massprops-031","dir":"Changelog","previous_headings":"","what":"massProps 0.3.1","title":"massProps 0.3.1","text":"CRAN release: 2025-03-05 Examples made smaller avoid CRAN runtime violations","code":""},{"path":"https://jsjuni.github.io/massProps/news/index.html","id":"massprops-030","dir":"Changelog","previous_headings":"","what":"massProps 0.3.0","title":"massProps 0.3.0","text":"Numeric subscripts replaced symbolic (e.g., [1] -> [“x”]) (#25). Q expressions restored inertia computations (#27, #31). code now aligns better documentation. Calculations radii gyration uncertainties added (#9). Numerous code documentation improvements (#37).","code":""},{"path":"https://jsjuni.github.io/massProps/news/index.html","id":"massprops-020","dir":"Changelog","previous_headings":"","what":"massProps 0.2.0","title":"massProps 0.2.0","text":"CRAN release: 2025-01-30 Initial CRAN submission.","code":""}]
